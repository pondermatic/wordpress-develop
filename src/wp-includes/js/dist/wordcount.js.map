{"version":3,"file":"wordcount.js","mappings":"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","sources":["webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/defaultSettings.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripConnectors.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripHTMLComments.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripHTMLEntities.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripRemovables.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripShortcodes.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripSpaces.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/stripTags.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/transposeAstralsToCountableChar.js","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/transposeHTMLEntitiesToCountableChars.js","webpack://wp/external window \"lodash\"","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/./node_modules/@wordpress/wordcount/build-module/@wordpress/wordcount/src/index.js"],"sourcesContent":["/** @typedef {import('./index').WPWordCountStrategy} WPWordCountStrategy */\n\n/** @typedef {Partial<{type: WPWordCountStrategy, shortcodes: string[]}>} WPWordCountL10n */\n\n/**\n * @typedef WPWordCountSettingsFields\n * @property {RegExp}              HTMLRegExp                        Regular expression that matches HTML tags\n * @property {RegExp}              HTMLcommentRegExp                 Regular expression that matches HTML comments\n * @property {RegExp}              spaceRegExp                       Regular expression that matches spaces in HTML\n * @property {RegExp}              HTMLEntityRegExp                  Regular expression that matches HTML entities\n * @property {RegExp}              connectorRegExp                   Regular expression that matches word connectors, like em-dash\n * @property {RegExp}              removeRegExp                      Regular expression that matches various characters to be removed when counting\n * @property {RegExp}              astralRegExp                      Regular expression that matches astral UTF-16 code points\n * @property {RegExp}              wordsRegExp                       Regular expression that matches words\n * @property {RegExp}              characters_excluding_spacesRegExp Regular expression that matches characters excluding spaces\n * @property {RegExp}              characters_including_spacesRegExp Regular expression that matches characters including spaces\n * @property {RegExp}              shortcodesRegExp                  Regular expression that matches WordPress shortcodes\n * @property {string[]}            shortcodes                        List of all shortcodes\n * @property {WPWordCountStrategy} type                              Describes what and how are we counting\n * @property {WPWordCountL10n}     l10n                              Object with human translations\n */\n\n/**\n * Lower-level settings for word counting that can be overridden.\n *\n * @typedef {Partial<WPWordCountSettingsFields>} WPWordCountUserSettings\n */\n\n// Disable reason: JSDoc linter doesn't seem to parse the union (`&`) correctly: https://github.com/jsdoc/jsdoc/issues/1285\n/* eslint-disable jsdoc/valid-types */\n/**\n * Word counting settings that include non-optional values we set if missing\n *\n * @typedef {WPWordCountUserSettings & typeof defaultSettings} WPWordCountDefaultSettings\n */\n/* eslint-enable jsdoc/valid-types */\n\nexport const defaultSettings = {\n\tHTMLRegExp: /<\\/?[a-z][^>]*?>/gi,\n\tHTMLcommentRegExp: /<!--[\\s\\S]*?-->/g,\n\tspaceRegExp: /&nbsp;|&#160;/gi,\n\tHTMLEntityRegExp: /&\\S+?;/g,\n\n\t// \\u2014 = em-dash.\n\tconnectorRegExp: /--|\\u2014/g,\n\n\t// Characters to be removed from input text.\n\tremoveRegExp: new RegExp(\n\t\t[\n\t\t\t'[',\n\n\t\t\t// Basic Latin (extract)\n\t\t\t'\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E',\n\n\t\t\t// Latin-1 Supplement (extract)\n\t\t\t'\\u0080-\\u00BF\\u00D7\\u00F7',\n\n\t\t\t/*\n\t\t\t * The following range consists of:\n\t\t\t * General Punctuation\n\t\t\t * Superscripts and Subscripts\n\t\t\t * Currency Symbols\n\t\t\t * Combining Diacritical Marks for Symbols\n\t\t\t * Letterlike Symbols\n\t\t\t * Number Forms\n\t\t\t * Arrows\n\t\t\t * Mathematical Operators\n\t\t\t * Miscellaneous Technical\n\t\t\t * Control Pictures\n\t\t\t * Optical Character Recognition\n\t\t\t * Enclosed Alphanumerics\n\t\t\t * Box Drawing\n\t\t\t * Block Elements\n\t\t\t * Geometric Shapes\n\t\t\t * Miscellaneous Symbols\n\t\t\t * Dingbats\n\t\t\t * Miscellaneous Mathematical Symbols-A\n\t\t\t * Supplemental Arrows-A\n\t\t\t * Braille Patterns\n\t\t\t * Supplemental Arrows-B\n\t\t\t * Miscellaneous Mathematical Symbols-B\n\t\t\t * Supplemental Mathematical Operators\n\t\t\t * Miscellaneous Symbols and Arrows\n\t\t\t */\n\t\t\t'\\u2000-\\u2BFF',\n\n\t\t\t// Supplemental Punctuation.\n\t\t\t'\\u2E00-\\u2E7F',\n\t\t\t']',\n\t\t].join( '' ),\n\t\t'g'\n\t),\n\n\t// Remove UTF-16 surrogate points, see https://en.wikipedia.org/wiki/UTF-16#U.2BD800_to_U.2BDFFF\n\tastralRegExp: /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n\twordsRegExp: /\\S\\s+/g,\n\tcharacters_excluding_spacesRegExp: /\\S/g,\n\n\t/*\n\t * Match anything that is not a formatting character, excluding:\n\t * \\f = form feed\n\t * \\n = new line\n\t * \\r = carriage return\n\t * \\t = tab\n\t * \\v = vertical tab\n\t * \\u00AD = soft hyphen\n\t * \\u2028 = line separator\n\t * \\u2029 = paragraph separator\n\t */\n\tcharacters_including_spacesRegExp: /[^\\f\\n\\r\\t\\v\\u00AD\\u2028\\u2029]/g,\n\tl10n: {\n\t\ttype: 'words',\n\t},\n};\n","/**\n * Replaces items matched in the regex with spaces.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripConnectors( settings, text ) {\n\treturn text.replace( settings.connectorRegExp, ' ' );\n}\n","/**\n * Removes items matched in the regex.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripHTMLComments( settings, text ) {\n\treturn text.replace( settings.HTMLcommentRegExp, '' );\n}\n","/**\n * Removes items matched in the regex.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripHTMLEntities( settings, text ) {\n\treturn text.replace( settings.HTMLEntityRegExp, '' );\n}\n","/**\n * Removes items matched in the regex.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripRemovables( settings, text ) {\n\treturn text.replace( settings.removeRegExp, '' );\n}\n","/**\n * Replaces items matched in the regex with a new line.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripShortcodes( settings, text ) {\n\tif ( settings.shortcodesRegExp ) {\n\t\treturn text.replace( settings.shortcodesRegExp, '\\n' );\n\t}\n\treturn text;\n}\n","/**\n * Replaces items matched in the regex with spaces.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripSpaces( settings, text ) {\n\treturn text.replace( settings.spaceRegExp, ' ' );\n}\n","/**\n * Replaces items matched in the regex with new line\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripTags( settings, text ) {\n\treturn text.replace( settings.HTMLRegExp, '\\n' );\n}\n","/**\n * Replaces items matched in the regex with character.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function transposeAstralsToCountableChar( settings, text ) {\n\treturn text.replace( settings.astralRegExp, 'a' );\n}\n","/**\n * Replaces items matched in the regex with a single character.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function transposeHTMLEntitiesToCountableChars(\n\tsettings,\n\ttext\n) {\n\treturn text.replace( settings.HTMLEntityRegExp, 'a' );\n}\n","module.exports = window[\"lodash\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * External dependencies\n */\nimport { extend, flow } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { defaultSettings } from './defaultSettings';\nimport stripTags from './stripTags';\nimport transposeAstralsToCountableChar from './transposeAstralsToCountableChar';\nimport stripHTMLEntities from './stripHTMLEntities';\nimport stripConnectors from './stripConnectors';\nimport stripRemovables from './stripRemovables';\nimport stripHTMLComments from './stripHTMLComments';\nimport stripShortcodes from './stripShortcodes';\nimport stripSpaces from './stripSpaces';\nimport transposeHTMLEntitiesToCountableChars from './transposeHTMLEntitiesToCountableChars';\n\n/**\n * @typedef {import('./defaultSettings').WPWordCountDefaultSettings}  WPWordCountSettings\n * @typedef {import('./defaultSettings').WPWordCountUserSettings}     WPWordCountUserSettings\n */\n\n/**\n * Possible ways of counting.\n *\n * @typedef {'words'|'characters_excluding_spaces'|'characters_including_spaces'} WPWordCountStrategy\n */\n\n/**\n * Private function to manage the settings.\n *\n * @param {WPWordCountStrategy}     type         The type of count to be done.\n * @param {WPWordCountUserSettings} userSettings Custom settings for the count.\n *\n * @return {WPWordCountSettings} The combined settings object to be used.\n */\nfunction loadSettings( type, userSettings ) {\n\tconst settings = extend( {}, defaultSettings, userSettings );\n\n\tsettings.shortcodes = settings.l10n?.shortcodes ?? [];\n\n\tif ( settings.shortcodes && settings.shortcodes.length ) {\n\t\tsettings.shortcodesRegExp = new RegExp(\n\t\t\t'\\\\[\\\\/?(?:' + settings.shortcodes.join( '|' ) + ')[^\\\\]]*?\\\\]',\n\t\t\t'g'\n\t\t);\n\t}\n\n\tsettings.type = type;\n\n\tif (\n\t\tsettings.type !== 'characters_excluding_spaces' &&\n\t\tsettings.type !== 'characters_including_spaces'\n\t) {\n\t\tsettings.type = 'words';\n\t}\n\n\treturn settings;\n}\n\n/**\n * Count the words in text\n *\n * @param {string}              text     The text being processed\n * @param {RegExp}              regex    The regular expression pattern being matched\n * @param {WPWordCountSettings} settings Settings object containing regular expressions for each strip function\n *\n * @return {number} Count of words.\n */\nfunction countWords( text, regex, settings ) {\n\ttext = flow(\n\t\tstripTags.bind( null, settings ),\n\t\tstripHTMLComments.bind( null, settings ),\n\t\tstripShortcodes.bind( null, settings ),\n\t\tstripSpaces.bind( null, settings ),\n\t\tstripHTMLEntities.bind( null, settings ),\n\t\tstripConnectors.bind( null, settings ),\n\t\tstripRemovables.bind( null, settings )\n\t)( text );\n\ttext = text + '\\n';\n\treturn text.match( regex )?.length ?? 0;\n}\n\n/**\n * Count the characters in text\n *\n * @param {string}              text     The text being processed\n * @param {RegExp}              regex    The regular expression pattern being matched\n * @param {WPWordCountSettings} settings Settings object containing regular expressions for each strip function\n *\n * @return {number} Count of characters.\n */\nfunction countCharacters( text, regex, settings ) {\n\ttext = flow(\n\t\tstripTags.bind( null, settings ),\n\t\tstripHTMLComments.bind( null, settings ),\n\t\tstripShortcodes.bind( null, settings ),\n\t\ttransposeAstralsToCountableChar.bind( null, settings ),\n\t\tstripSpaces.bind( null, settings ),\n\t\ttransposeHTMLEntitiesToCountableChars.bind( null, settings )\n\t)( text );\n\ttext = text + '\\n';\n\treturn text.match( regex )?.length ?? 0;\n}\n\n/**\n * Count some words.\n *\n * @param {string}                  text         The text being processed\n * @param {WPWordCountStrategy}     type         The type of count. Accepts 'words', 'characters_excluding_spaces', or 'characters_including_spaces'.\n * @param {WPWordCountUserSettings} userSettings Custom settings object.\n *\n * @example\n * ```js\n * import { count } from '@wordpress/wordcount';\n * const numberOfWords = count( 'Words to count', 'words', {} )\n * ```\n *\n * @return {number} The word or character count.\n */\nexport function count( text, type, userSettings ) {\n\tconst settings = loadSettings( type, userSettings );\n\tlet matchRegExp;\n\tswitch ( settings.type ) {\n\t\tcase 'words':\n\t\t\tmatchRegExp = settings.wordsRegExp;\n\t\t\treturn countWords( text, matchRegExp, settings );\n\t\tcase 'characters_including_spaces':\n\t\t\tmatchRegExp = settings.characters_including_spacesRegExp;\n\t\t\treturn countCharacters( text, matchRegExp, settings );\n\t\tcase 'characters_excluding_spaces':\n\t\t\tmatchRegExp = settings.characters_excluding_spacesRegExp;\n\t\t\treturn countCharacters( text, matchRegExp, settings );\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n}\n"],"names":["defaultSettings","HTMLRegExp","HTMLcommentRegExp","spaceRegExp","HTMLEntityRegExp","connectorRegExp","removeRegExp","RegExp","join","astralRegExp","wordsRegExp","characters_excluding_spacesRegExp","characters_including_spacesRegExp","l10n","type","stripConnectors","settings","text","replace","stripHTMLComments","stripHTMLEntities","stripRemovables","stripShortcodes","shortcodesRegExp","stripSpaces","stripTags","transposeAstralsToCountableChar","transposeHTMLEntitiesToCountableChars","extend","flow","loadSettings","userSettings","shortcodes","length","countWords","regex","bind","match","countCharacters","count","matchRegExp"],"sourceRoot":""}