{"version":3,"file":"rich-text.js","mappings":"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,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA,6BAAe,oCAAU;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA,eAAe,uBAAuB;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACjRA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA","sources":["webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/apply-format.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/can-indent-list-items.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/can-outdent-list-items.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/change-list-type.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/format-edit.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/index.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-anchor-ref.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-boundary-style.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-copy-handler.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-default-style.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-delete.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-format-boundaries.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-indent-list-item-on-space.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-input-and-selection.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-select-object.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/component/@wordpress/rich-text/src/component/use-space.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/concat.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/create-element.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/create.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-active-format.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-active-formats.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-active-object.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-format-type.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-last-child-index.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-line-index.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-parent-line-index.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/get-text-content.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/indent-list-items.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/insert-line-separator.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/insert-object.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/insert.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-active-list-type.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-collapsed.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-empty.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-format-equal.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/is-list-root-selected.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/join.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/normalise-formats.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/outdent-list-items.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/register-format-type.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/remove-format.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/remove-line-separator.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/remove.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/replace.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/slice.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/special-characters.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/split.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/actions.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/index.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/reducer.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/store/@wordpress/rich-text/src/store/selectors.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/to-dom.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/to-html-string.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/to-tree.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/toggle-format.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/unregister-format-type.js","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/update-formats.js","webpack://wp/./node_modules/rememo/es/rememo.js","webpack://wp/external window \"lodash\"","webpack://wp/external window [\"wp\",\"a11y\"]","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"escapeHtml\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"keycodes\"]","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/./node_modules/@wordpress/rich-text/build-module/@wordpress/rich-text/src/index.js"],"sourcesContent":["/**\n * External dependencies\n */\n\nimport { find, reject } from 'lodash';\n\n/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n/** @typedef {import('./create').RichTextFormat} RichTextFormat */\n\nfunction replace( array, index, value ) {\n\tarray = array.slice();\n\tarray[ index ] = value;\n\treturn array;\n}\n\n/**\n * Apply a format object to a Rich Text value from the given `startIndex` to the\n * given `endIndex`. Indices are retrieved from the selection if none are\n * provided.\n *\n * @param {RichTextValue}  value        Value to modify.\n * @param {RichTextFormat} format       Format to apply.\n * @param {number}         [startIndex] Start index.\n * @param {number}         [endIndex]   End index.\n *\n * @return {RichTextValue} A new value with the format applied.\n */\nexport function applyFormat(\n\tvalue,\n\tformat,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, activeFormats } = value;\n\tconst newFormats = formats.slice();\n\n\t// The selection is collapsed.\n\tif ( startIndex === endIndex ) {\n\t\tconst startFormat = find( newFormats[ startIndex ], {\n\t\t\ttype: format.type,\n\t\t} );\n\n\t\t// If the caret is at a format of the same type, expand start and end to\n\t\t// the edges of the format. This is useful to apply new attributes.\n\t\tif ( startFormat ) {\n\t\t\tconst index = newFormats[ startIndex ].indexOf( startFormat );\n\n\t\t\twhile (\n\t\t\t\tnewFormats[ startIndex ] &&\n\t\t\t\tnewFormats[ startIndex ][ index ] === startFormat\n\t\t\t) {\n\t\t\t\tnewFormats[ startIndex ] = replace(\n\t\t\t\t\tnewFormats[ startIndex ],\n\t\t\t\t\tindex,\n\t\t\t\t\tformat\n\t\t\t\t);\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tendIndex++;\n\n\t\t\twhile (\n\t\t\t\tnewFormats[ endIndex ] &&\n\t\t\t\tnewFormats[ endIndex ][ index ] === startFormat\n\t\t\t) {\n\t\t\t\tnewFormats[ endIndex ] = replace(\n\t\t\t\t\tnewFormats[ endIndex ],\n\t\t\t\t\tindex,\n\t\t\t\t\tformat\n\t\t\t\t);\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Determine the highest position the new format can be inserted at.\n\t\tlet position = +Infinity;\n\n\t\tfor ( let index = startIndex; index < endIndex; index++ ) {\n\t\t\tif ( newFormats[ index ] ) {\n\t\t\t\tnewFormats[ index ] = newFormats[ index ].filter(\n\t\t\t\t\t( { type } ) => type !== format.type\n\t\t\t\t);\n\n\t\t\t\tconst length = newFormats[ index ].length;\n\n\t\t\t\tif ( length < position ) {\n\t\t\t\t\tposition = length;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewFormats[ index ] = [];\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t}\n\n\t\tfor ( let index = startIndex; index < endIndex; index++ ) {\n\t\t\tnewFormats[ index ].splice( position, 0, format );\n\t\t}\n\t}\n\n\treturn normaliseFormats( {\n\t\t...value,\n\t\tformats: newFormats,\n\t\t// Always revise active formats. This serves as a placeholder for new\n\t\t// inputs with the format so new input appears with the format applied,\n\t\t// and ensures a format of the same type uses the latest values.\n\t\tactiveFormats: [\n\t\t\t...reject( activeFormats, { type: format.type } ),\n\t\t\tformat,\n\t\t],\n\t} );\n}\n","/**\n * Internal dependencies\n */\nimport { getLineIndex } from './get-line-index';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Checks if the selected list item can be indented.\n *\n * @param {RichTextValue} value Value to check.\n *\n * @return {boolean} Whether or not the selected list item can be indented.\n */\nexport function canIndentListItems( value ) {\n\tconst lineIndex = getLineIndex( value );\n\n\t// There is only one line, so the line cannot be indented.\n\tif ( lineIndex === undefined ) {\n\t\treturn false;\n\t}\n\n\tconst { replacements } = value;\n\tconst previousLineIndex = getLineIndex( value, lineIndex );\n\tconst formatsAtLineIndex = replacements[ lineIndex ] || [];\n\tconst formatsAtPreviousLineIndex = replacements[ previousLineIndex ] || [];\n\n\t// If the indentation of the current line is greater than previous line,\n\t// then the line cannot be furter indented.\n\treturn formatsAtLineIndex.length <= formatsAtPreviousLineIndex.length;\n}\n","/**\n * Internal dependencies\n */\n\nimport { getLineIndex } from './get-line-index';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Checks if the selected list item can be outdented.\n *\n * @param {RichTextValue} value Value to check.\n *\n * @return {boolean} Whether or not the selected list item can be outdented.\n */\nexport function canOutdentListItems( value ) {\n\tconst { replacements, start } = value;\n\tconst startingLineIndex = getLineIndex( value, start );\n\treturn replacements[ startingLineIndex ] !== undefined;\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { getLineIndex } from './get-line-index';\nimport { getParentLineIndex } from './get-parent-line-index';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n/** @typedef {import('./create').RichTextFormat} RichTextFormat */\n\n/**\n * Changes the list type of the selected indented list, if any. Looks at the\n * currently selected list item and takes the parent list, then changes the list\n * type of this list. When multiple lines are selected, the parent lists are\n * takes and changed.\n *\n * @param {RichTextValue}  value     Value to change.\n * @param {RichTextFormat} newFormat The new list format object. Choose between\n *                                   `{ type: 'ol' }` and `{ type: 'ul' }`.\n *\n * @return {RichTextValue} The changed value.\n */\nexport function changeListType( value, newFormat ) {\n\tconst { text, replacements, start, end } = value;\n\tconst startingLineIndex = getLineIndex( value, start );\n\tconst startLineFormats = replacements[ startingLineIndex ] || [];\n\tconst endLineFormats = replacements[ getLineIndex( value, end ) ] || [];\n\tconst startIndex = getParentLineIndex( value, startingLineIndex );\n\tconst newReplacements = replacements.slice();\n\tconst startCount = startLineFormats.length - 1;\n\tconst endCount = endLineFormats.length - 1;\n\n\tlet changed;\n\n\tfor ( let index = startIndex + 1 || 0; index < text.length; index++ ) {\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( ( newReplacements[ index ] || [] ).length <= startCount ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tif ( ! newReplacements[ index ] ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchanged = true;\n\t\tnewReplacements[ index ] = newReplacements[ index ].map(\n\t\t\t( format, i ) => {\n\t\t\t\treturn i < startCount || i > endCount ? format : newFormat;\n\t\t\t}\n\t\t);\n\t}\n\n\tif ( ! changed ) {\n\t\treturn value;\n\t}\n\n\treturn {\n\t\t...value,\n\t\treplacements: newReplacements,\n\t};\n}\n","/**\n * Internal dependencies\n */\nimport { getActiveFormat } from '../get-active-format';\nimport { getActiveObject } from '../get-active-object';\n\nexport default function FormatEdit( {\n\tformatTypes,\n\tonChange,\n\tonFocus,\n\tvalue,\n\tforwardedRef,\n} ) {\n\treturn formatTypes.map( ( settings ) => {\n\t\tconst { name, edit: Edit } = settings;\n\n\t\tif ( ! Edit ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst activeFormat = getActiveFormat( value, name );\n\t\tconst isActive = activeFormat !== undefined;\n\t\tconst activeObject = getActiveObject( value );\n\t\tconst isObjectActive =\n\t\t\tactiveObject !== undefined && activeObject.type === name;\n\n\t\treturn (\n\t\t\t<Edit\n\t\t\t\tkey={ name }\n\t\t\t\tisActive={ isActive }\n\t\t\t\tactiveAttributes={\n\t\t\t\t\tisActive ? activeFormat.attributes || {} : {}\n\t\t\t\t}\n\t\t\t\tisObjectActive={ isObjectActive }\n\t\t\t\tactiveObjectAttributes={\n\t\t\t\t\tisObjectActive ? activeObject.attributes || {} : {}\n\t\t\t\t}\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ onChange }\n\t\t\t\tonFocus={ onFocus }\n\t\t\t\tcontentRef={ forwardedRef }\n\t\t\t/>\n\t\t);\n\t} );\n}\n","/**\n * WordPress dependencies\n */\nimport { useRef, useLayoutEffect, useReducer } from '@wordpress/element';\nimport { useMergeRefs, useRefEffect } from '@wordpress/compose';\nimport { useRegistry } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { create } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { useDefaultStyle } from './use-default-style';\nimport { useBoundaryStyle } from './use-boundary-style';\nimport { useCopyHandler } from './use-copy-handler';\nimport { useFormatBoundaries } from './use-format-boundaries';\nimport { useSelectObject } from './use-select-object';\nimport { useIndentListItemOnSpace } from './use-indent-list-item-on-space';\nimport { useInputAndSelection } from './use-input-and-selection';\nimport { useDelete } from './use-delete';\nimport { useSpace } from './use-space';\n\nexport function useRichText( {\n\tvalue = '',\n\tselectionStart,\n\tselectionEnd,\n\tplaceholder,\n\tpreserveWhiteSpace,\n\tonSelectionChange,\n\tonChange,\n\t__unstableMultilineTag: multilineTag,\n\t__unstableDisableFormats: disableFormats,\n\t__unstableIsSelected: isSelected,\n\t__unstableDependencies = [],\n\t__unstableAfterParse,\n\t__unstableBeforeSerialize,\n\t__unstableAddInvisibleFormats,\n} ) {\n\tconst registry = useRegistry();\n\tconst [ , forceRender ] = useReducer( () => ( {} ) );\n\tconst ref = useRef();\n\n\tfunction createRecord() {\n\t\tconst {\n\t\t\townerDocument: { defaultView },\n\t\t} = ref.current;\n\t\tconst selection = defaultView.getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: ref.current,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\t__unstableIsEditableTree: true,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t}\n\n\tfunction applyRecord( newRecord, { domOnly } = {} ) {\n\t\tapply( {\n\t\t\tvalue: newRecord,\n\t\t\tcurrent: ref.current,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tprepareEditableTree: __unstableAddInvisibleFormats,\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder,\n\t\t} );\n\t}\n\n\t// Internal values are updated synchronously, unlike props and state.\n\tconst _value = useRef( value );\n\tconst record = useRef();\n\n\tfunction setRecordFromProps() {\n\t\t_value.current = value;\n\t\trecord.current = create( {\n\t\t\thtml: value,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t\tif ( disableFormats ) {\n\t\t\trecord.current.formats = Array( value.length );\n\t\t\trecord.current.replacements = Array( value.length );\n\t\t}\n\t\tif ( __unstableAfterParse ) {\n\t\t\trecord.current.formats = __unstableAfterParse( record.current );\n\t\t}\n\t\trecord.current.start = selectionStart;\n\t\trecord.current.end = selectionEnd;\n\t}\n\n\tconst hadSelectionUpdate = useRef( false );\n\n\tif ( ! record.current ) {\n\t\tsetRecordFromProps();\n\t\t// Sometimes formats are added programmatically and we need to make\n\t\t// sure it's persisted to the block store / markup. If these formats\n\t\t// are not applied, they could cause inconsistencies between the data\n\t\t// in the visual editor and the frontend. Right now, it's only relevant\n\t\t// to the `core/text-color` format, which is applied at runtime in\n\t\t// certain circunstances. See the `__unstableFilterAttributeValue`\n\t\t// function in `packages/format-library/src/text-color/index.js`.\n\t\t// @todo find a less-hacky way of solving this.\n\n\t\tconst hasRelevantInitFormat =\n\t\t\trecord.current?.formats[ 0 ]?.[ 0 ]?.type === 'core/text-color';\n\n\t\tif ( hasRelevantInitFormat ) {\n\t\t\thandleChangesUponInit( record.current );\n\t\t}\n\t} else if (\n\t\tselectionStart !== record.current.start ||\n\t\tselectionEnd !== record.current.end\n\t) {\n\t\thadSelectionUpdate.current = isSelected;\n\t\trecord.current = {\n\t\t\t...record.current,\n\t\t\tstart: selectionStart,\n\t\t\tend: selectionEnd,\n\t\t};\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object} newRecord The record to sync and apply.\n\t */\n\tfunction handleChange( newRecord ) {\n\t\trecord.current = newRecord;\n\t\tapplyRecord( newRecord );\n\n\t\tif ( disableFormats ) {\n\t\t\t_value.current = newRecord.text;\n\t\t} else {\n\t\t\t_value.current = toHTMLString( {\n\t\t\t\tvalue: __unstableBeforeSerialize\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t...newRecord,\n\t\t\t\t\t\t\tformats: __unstableBeforeSerialize( newRecord ),\n\t\t\t\t\t  }\n\t\t\t\t\t: newRecord,\n\t\t\t\tmultilineTag,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} );\n\t\t}\n\n\t\tconst { start, end, formats, text } = newRecord;\n\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\t// We batch both calls to only attempt to rerender once.\n\t\tregistry.batch( () => {\n\t\t\tonSelectionChange( start, end );\n\t\t\tonChange( _value.current, {\n\t\t\t\t__unstableFormats: formats,\n\t\t\t\t__unstableText: text,\n\t\t\t} );\n\t\t} );\n\t\tforceRender();\n\t}\n\n\tfunction handleChangesUponInit( newRecord ) {\n\t\trecord.current = newRecord;\n\n\t\t_value.current = toHTMLString( {\n\t\t\tvalue: __unstableBeforeSerialize\n\t\t\t\t? {\n\t\t\t\t\t\t...newRecord,\n\t\t\t\t\t\tformats: __unstableBeforeSerialize( newRecord ),\n\t\t\t\t  }\n\t\t\t\t: newRecord,\n\t\t\tmultilineTag,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\n\t\tconst { formats, text } = newRecord;\n\n\t\tregistry.batch( () => {\n\t\t\tonChange( _value.current, {\n\t\t\t\t__unstableFormats: formats,\n\t\t\t\t__unstableText: text,\n\t\t\t} );\n\t\t} );\n\t\tforceRender();\n\t}\n\n\tfunction applyFromProps() {\n\t\tsetRecordFromProps();\n\t\tapplyRecord( record.current );\n\t}\n\n\tconst didMount = useRef( false );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( didMount.current && value !== _value.current ) {\n\t\t\tapplyFromProps();\n\t\t\tforceRender();\n\t\t}\n\t}, [ value ] );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( ! hadSelectionUpdate.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ref.current.ownerDocument.activeElement !== ref.current ) {\n\t\t\tref.current.focus();\n\t\t}\n\n\t\tapplyFromProps();\n\t\thadSelectionUpdate.current = false;\n\t}, [ hadSelectionUpdate.current ] );\n\n\tconst mergedRefs = useMergeRefs( [\n\t\tref,\n\t\tuseDefaultStyle(),\n\t\tuseBoundaryStyle( { record } ),\n\t\tuseCopyHandler( { record, multilineTag, preserveWhiteSpace } ),\n\t\tuseSelectObject(),\n\t\tuseFormatBoundaries( { record, applyRecord } ),\n\t\tuseDelete( {\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t\tmultilineTag,\n\t\t} ),\n\t\tuseIndentListItemOnSpace( {\n\t\t\tmultilineTag,\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t} ),\n\t\tuseInputAndSelection( {\n\t\t\trecord,\n\t\t\tapplyRecord,\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t\tisSelected,\n\t\t\tonSelectionChange,\n\t\t} ),\n\t\tuseSpace(),\n\t\tuseRefEffect( () => {\n\t\t\tapplyFromProps();\n\t\t\tdidMount.current = true;\n\t\t}, [ placeholder, ...__unstableDependencies ] ),\n\t] );\n\n\treturn {\n\t\tvalue: record.current,\n\t\tonChange: handleChange,\n\t\tref: mergedRefs,\n\t};\n}\n\nexport default function __experimentalRichText() {}\n","/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { getActiveFormat } from '../get-active-format';\n\n/** @typedef {import('@wordpress/element').RefObject} RefObject */\n/** @typedef {import('../register-format-type').RichTextFormatType} RichTextFormatType */\n/** @typedef {import('../create').RichTextValue} RichTextValue */\n\n/**\n * This hook, to be used in a format type's Edit component, returns the active\n * element that is formatted, or the selection range if no format is active.\n * The returned value is meant to be used for positioning UI, e.g. by passing it\n * to the `Popover` component.\n *\n * @param {Object}                 $1          Named parameters.\n * @param {RefObject<HTMLElement>} $1.ref      React ref of the element\n *                                             containing  the editable content.\n * @param {RichTextValue}          $1.value    Value to check for selection.\n * @param {RichTextFormatType}     $1.settings The format type's settings.\n *\n * @return {Element|Range} The active element or selection range.\n */\nexport function useAnchorRef( { ref, value, settings = {} } ) {\n\tconst { tagName, className, name } = settings;\n\tconst activeFormat = name ? getActiveFormat( value, name ) : undefined;\n\n\treturn useMemo( () => {\n\t\tif ( ! ref.current ) return;\n\t\tconst {\n\t\t\townerDocument: { defaultView },\n\t\t} = ref.current;\n\t\tconst selection = defaultView.getSelection();\n\n\t\tif ( ! selection.rangeCount ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst range = selection.getRangeAt( 0 );\n\n\t\tif ( ! activeFormat ) {\n\t\t\treturn range;\n\t\t}\n\n\t\tlet element = range.startContainer;\n\n\t\t// If the caret is right before the element, select the next element.\n\t\telement = element.nextElementSibling || element;\n\n\t\twhile ( element.nodeType !== element.ELEMENT_NODE ) {\n\t\t\telement = element.parentNode;\n\t\t}\n\n\t\treturn element.closest(\n\t\t\ttagName + ( className ? '.' + className : '' )\n\t\t);\n\t}, [ activeFormat, value.start, value.end, tagName, className ] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect, useRef } from '@wordpress/element';\n\n/*\n * Calculates and renders the format boundary style when the active formats\n * change.\n */\nexport function useBoundaryStyle( { record } ) {\n\tconst ref = useRef();\n\tconst { activeFormats = [] } = record.current;\n\tuseEffect( () => {\n\t\t// There's no need to recalculate the boundary styles if no formats are\n\t\t// active, because no boundary styles will be visible.\n\t\tif ( ! activeFormats || ! activeFormats.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst boundarySelector = '*[data-rich-text-format-boundary]';\n\t\tconst element = ref.current.querySelector( boundarySelector );\n\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { ownerDocument } = element;\n\t\tconst { defaultView } = ownerDocument;\n\t\tconst computedStyle = defaultView.getComputedStyle( element );\n\t\tconst newColor = computedStyle.color\n\t\t\t.replace( ')', ', 0.2)' )\n\t\t\t.replace( 'rgb', 'rgba' );\n\t\tconst selector = `.rich-text:focus ${ boundarySelector }`;\n\t\tconst rule = `background-color: ${ newColor }`;\n\t\tconst style = `${ selector } {${ rule }}`;\n\t\tconst globalStyleId = 'rich-text-boundary-style';\n\n\t\tlet globalStyle = ownerDocument.getElementById( globalStyleId );\n\n\t\tif ( ! globalStyle ) {\n\t\t\tglobalStyle = ownerDocument.createElement( 'style' );\n\t\t\tglobalStyle.id = globalStyleId;\n\t\t\townerDocument.head.appendChild( globalStyle );\n\t\t}\n\n\t\tif ( globalStyle.innerHTML !== style ) {\n\t\t\tglobalStyle.innerHTML = style;\n\t\t}\n\t}, [ activeFormats ] );\n\treturn ref;\n}\n","/**\n * WordPress dependencies\n */\nimport { useRef } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { toHTMLString } from '../to-html-string';\nimport { isCollapsed } from '../is-collapsed';\nimport { slice } from '../slice';\nimport { getTextContent } from '../get-text-content';\n\nexport function useCopyHandler( props ) {\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onCopy( event ) {\n\t\t\tconst {\n\t\t\t\trecord,\n\t\t\t\tmultilineTag,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} = propsRef.current;\n\t\t\tif (\n\t\t\t\tisCollapsed( record.current ) ||\n\t\t\t\t! element.contains( element.ownerDocument.activeElement )\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selectedRecord = slice( record.current );\n\t\t\tconst plainText = getTextContent( selectedRecord );\n\t\t\tconst html = toHTMLString( {\n\t\t\t\tvalue: selectedRecord,\n\t\t\t\tmultilineTag,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} );\n\t\t\tevent.clipboardData.setData( 'text/plain', plainText );\n\t\t\tevent.clipboardData.setData( 'text/html', html );\n\t\t\tevent.clipboardData.setData( 'rich-text', 'true' );\n\t\t\tevent.clipboardData.setData(\n\t\t\t\t'rich-text-multi-line-tag',\n\t\t\t\tmultilineTag || ''\n\t\t\t);\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\telement.addEventListener( 'copy', onCopy );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'copy', onCopy );\n\t\t};\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useCallback } from '@wordpress/element';\n\n/**\n * In HTML, leading and trailing spaces are not visible, and multiple spaces\n * elsewhere are visually reduced to one space. This rule prevents spaces from\n * collapsing so all space is visible in the editor and can be removed. It also\n * prevents some browsers from inserting non-breaking spaces at the end of a\n * line to prevent the space from visually disappearing. Sometimes these non\n * breaking spaces can linger in the editor causing unwanted non breaking spaces\n * in between words. If also prevent Firefox from inserting a trailing `br` node\n * to visualise any trailing space, causing the element to be saved.\n *\n * > Authors are encouraged to set the 'white-space' property on editing hosts\n * > and on markup that was originally created through these editing mechanisms\n * > to the value 'pre-wrap'. Default HTML whitespace handling is not well\n * > suited to WYSIWYG editing, and line wrapping will not work correctly in\n * > some corner cases if 'white-space' is left at its default value.\n *\n * https://html.spec.whatwg.org/multipage/interaction.html#best-practices-for-in-page-editors\n *\n * @type {string}\n */\nconst whiteSpace = 'pre-wrap';\n\n/**\n * A minimum width of 1px will prevent the rich text container from collapsing\n * to 0 width and hiding the caret. This is useful for inline containers.\n */\nconst minWidth = '1px';\n\nexport function useDefaultStyle() {\n\treturn useCallback( ( element ) => {\n\t\tif ( ! element ) return;\n\t\telement.style.whiteSpace = whiteSpace;\n\t\telement.style.minWidth = minWidth;\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useRef } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\nimport { BACKSPACE, DELETE } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { remove } from '../remove';\nimport { removeLineSeparator } from '../remove-line-separator';\nimport { isEmptyLine } from '../is-empty';\n\nexport function useDelete( props ) {\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onKeyDown( event ) {\n\t\t\tconst { keyCode } = event;\n\t\t\tconst {\n\t\t\t\tcreateRecord,\n\t\t\t\thandleChange,\n\t\t\t\tmultilineTag,\n\t\t\t} = propsRef.current;\n\n\t\t\tif ( event.defaultPrevented ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( keyCode !== DELETE && keyCode !== BACKSPACE ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentValue = createRecord();\n\t\t\tconst { start, end, text } = currentValue;\n\t\t\tconst isReverse = keyCode === BACKSPACE;\n\n\t\t\t// Always handle full content deletion ourselves.\n\t\t\tif ( start === 0 && end !== 0 && end === text.length ) {\n\t\t\t\thandleChange( remove( currentValue ) );\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( multilineTag ) {\n\t\t\t\tlet newValue;\n\n\t\t\t\t// Check to see if we should remove the first item if empty.\n\t\t\t\tif (\n\t\t\t\t\tisReverse &&\n\t\t\t\t\tcurrentValue.start === 0 &&\n\t\t\t\t\tcurrentValue.end === 0 &&\n\t\t\t\t\tisEmptyLine( currentValue )\n\t\t\t\t) {\n\t\t\t\t\tnewValue = removeLineSeparator( currentValue, ! isReverse );\n\t\t\t\t} else {\n\t\t\t\t\tnewValue = removeLineSeparator( currentValue, isReverse );\n\t\t\t\t}\n\n\t\t\t\tif ( newValue ) {\n\t\t\t\t\thandleChange( newValue );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\telement.addEventListener( 'keydown', onKeyDown );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t\t};\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useRef, useReducer } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\nimport { LEFT, RIGHT } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { isCollapsed } from '../is-collapsed';\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nexport function useFormatBoundaries( props ) {\n\tconst [ , forceRender ] = useReducer( () => ( {} ) );\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onKeyDown( event ) {\n\t\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\t\tif (\n\t\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\t\tshiftKey ||\n\t\t\t\taltKey ||\n\t\t\t\tmetaKey ||\n\t\t\t\tctrlKey ||\n\t\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { record, applyRecord } = propsRef.current;\n\t\t\tconst {\n\t\t\t\ttext,\n\t\t\t\tformats,\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t\tactiveFormats: currentActiveFormats = [],\n\t\t\t} = record.current;\n\t\t\tconst collapsed = isCollapsed( record.current );\n\t\t\tconst { ownerDocument } = element;\n\t\t\tconst { defaultView } = ownerDocument;\n\t\t\t// To do: ideally, we should look at visual position instead.\n\t\t\tconst { direction } = defaultView.getComputedStyle( element );\n\t\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t\t// navigating backward.\n\t\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t\t// navigating forward.\n\t\t\tif ( collapsed && currentActiveFormats.length === 0 ) {\n\t\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t\t// the selection for now. Later we could expand this logic to set\n\t\t\t// boundary positions if needed.\n\t\t\tif ( ! collapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\t\t\tconst destination = isReverse ? formatsBefore : formatsAfter;\n\t\t\tconst isIncreasing = currentActiveFormats.every(\n\t\t\t\t( format, index ) => format === destination[ index ]\n\t\t\t);\n\n\t\t\tlet newActiveFormatsLength = currentActiveFormats.length;\n\n\t\t\tif ( ! isIncreasing ) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t} else if ( newActiveFormatsLength < destination.length ) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\n\t\t\tif ( newActiveFormatsLength === currentActiveFormats.length ) {\n\t\t\t\trecord.current._newActiveFormats = destination;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconst origin = isReverse ? formatsAfter : formatsBefore;\n\t\t\tconst source = isIncreasing ? destination : origin;\n\t\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\t\tconst newValue = {\n\t\t\t\t...record.current,\n\t\t\t\tactiveFormats: newActiveFormats,\n\t\t\t};\n\t\t\trecord.current = newValue;\n\t\t\tapplyRecord( newValue );\n\t\t\tforceRender();\n\t\t}\n\n\t\telement.addEventListener( 'keydown', onKeyDown );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t\t};\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useRef } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\nimport { SPACE } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { isCollapsed } from '../is-collapsed';\nimport { LINE_SEPARATOR } from '../special-characters';\nimport { indentListItems } from '../indent-list-items';\n\nexport function useIndentListItemOnSpace( props ) {\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onKeyDown( event ) {\n\t\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\t\t\tconst {\n\t\t\t\tmultilineTag,\n\t\t\t\tcreateRecord,\n\t\t\t\thandleChange,\n\t\t\t} = propsRef.current;\n\n\t\t\tif (\n\t\t\t\t// Only override when no modifiers are pressed.\n\t\t\t\tshiftKey ||\n\t\t\t\taltKey ||\n\t\t\t\tmetaKey ||\n\t\t\t\tctrlKey ||\n\t\t\t\tkeyCode !== SPACE ||\n\t\t\t\tmultilineTag !== 'li'\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentValue = createRecord();\n\n\t\t\tif ( ! isCollapsed( currentValue ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { text, start } = currentValue;\n\t\t\tconst characterBefore = text[ start - 1 ];\n\n\t\t\t// The caret must be at the start of a line.\n\t\t\tif ( characterBefore && characterBefore !== LINE_SEPARATOR ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thandleChange(\n\t\t\t\tindentListItems( currentValue, {\n\t\t\t\t\ttype: element.tagName.toLowerCase(),\n\t\t\t\t} )\n\t\t\t);\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\telement.addEventListener( 'keydown', onKeyDown );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t\t};\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useRef } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { getActiveFormats } from '../get-active-formats';\nimport { updateFormats } from '../update-formats';\n\n/**\n * All inserting input types that would insert HTML into the DOM.\n *\n * @see https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes\n *\n * @type {Set}\n */\nconst INSERTION_INPUT_TYPES_TO_IGNORE = new Set( [\n\t'insertParagraph',\n\t'insertOrderedList',\n\t'insertUnorderedList',\n\t'insertHorizontalRule',\n\t'insertLink',\n] );\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\n/**\n * If the selection is set on the placeholder element, collapse the selection to\n * the start (before the placeholder).\n *\n * @param {Window} defaultView\n */\nfunction fixPlaceholderSelection( defaultView ) {\n\tconst selection = defaultView.getSelection();\n\tconst { anchorNode, anchorOffset } = selection;\n\n\tif ( anchorNode.nodeType !== anchorNode.ELEMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tconst targetNode = anchorNode.childNodes[ anchorOffset ];\n\n\tif (\n\t\t! targetNode ||\n\t\ttargetNode.nodeType !== targetNode.ELEMENT_NODE ||\n\t\t! targetNode.getAttribute( 'data-rich-text-placeholder' )\n\t) {\n\t\treturn;\n\t}\n\n\tselection.collapseToStart();\n}\n\nexport function useInputAndSelection( props ) {\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tconst { ownerDocument } = element;\n\t\tconst { defaultView } = ownerDocument;\n\n\t\tlet isComposing = false;\n\t\tlet rafId;\n\n\t\tfunction onInput( event ) {\n\t\t\t// Do not trigger a change if characters are being composed.\n\t\t\t// Browsers  will usually emit a final `input` event when the\n\t\t\t// characters are composed.\n\t\t\t// As of December 2019, Safari doesn't support\n\t\t\t// nativeEvent.isComposing.\n\t\t\tif ( isComposing ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet inputType;\n\n\t\t\tif ( event ) {\n\t\t\t\tinputType = event.inputType;\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\trecord,\n\t\t\t\tapplyRecord,\n\t\t\t\tcreateRecord,\n\t\t\t\thandleChange,\n\t\t\t} = propsRef.current;\n\n\t\t\t// The browser formatted something or tried to insert HTML.\n\t\t\t// Overwrite it. It will be handled later by the format library if\n\t\t\t// needed.\n\t\t\tif (\n\t\t\t\tinputType &&\n\t\t\t\t( inputType.indexOf( 'format' ) === 0 ||\n\t\t\t\t\tINSERTION_INPUT_TYPES_TO_IGNORE.has( inputType ) )\n\t\t\t) {\n\t\t\t\tapplyRecord( record.current );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentValue = createRecord();\n\t\t\tconst {\n\t\t\t\tstart,\n\t\t\t\tactiveFormats: oldActiveFormats = [],\n\t\t\t} = record.current;\n\n\t\t\t// Update the formats between the last and new caret position.\n\t\t\tconst change = updateFormats( {\n\t\t\t\tvalue: currentValue,\n\t\t\t\tstart,\n\t\t\t\tend: currentValue.start,\n\t\t\t\tformats: oldActiveFormats,\n\t\t\t} );\n\n\t\t\thandleChange( change );\n\t\t}\n\n\t\t/**\n\t\t * Syncs the selection to local state. A callback for the `selectionchange`\n\t\t * native events, `keyup`, `mouseup` and `touchend` synthetic events, and\n\t\t * animation frames after the `focus` event.\n\t\t *\n\t\t * @param {Event|DOMHighResTimeStamp} event\n\t\t */\n\t\tfunction handleSelectionChange( event ) {\n\t\t\tconst {\n\t\t\t\trecord,\n\t\t\t\tapplyRecord,\n\t\t\t\tcreateRecord,\n\t\t\t\tisSelected,\n\t\t\t\tonSelectionChange,\n\t\t\t} = propsRef.current;\n\n\t\t\t// Check if the implementor disabled editing. `contentEditable`\n\t\t\t// does disable input, but not text selection, so we must ignore\n\t\t\t// selection changes.\n\t\t\tif ( element.contentEditable !== 'true' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If the selection changes where the active element is a parent of\n\t\t\t// the rich text instance (writing flow), call `onSelectionChange`\n\t\t\t// for the rich text instance that contains the start or end of the\n\t\t\t// selection.\n\t\t\tif ( ownerDocument.activeElement !== element ) {\n\t\t\t\tif ( ! ownerDocument.activeElement.contains( element ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst selection = defaultView.getSelection();\n\t\t\t\tconst { anchorNode, focusNode } = selection;\n\n\t\t\t\tif (\n\t\t\t\t\telement.contains( anchorNode ) &&\n\t\t\t\t\telement !== anchorNode &&\n\t\t\t\t\telement.contains( focusNode ) &&\n\t\t\t\t\telement !== focusNode\n\t\t\t\t) {\n\t\t\t\t\tconst { start, end } = createRecord();\n\t\t\t\t\trecord.current.activeFormats = EMPTY_ACTIVE_FORMATS;\n\t\t\t\t\tonSelectionChange( start, end );\n\t\t\t\t} else if (\n\t\t\t\t\telement.contains( anchorNode ) &&\n\t\t\t\t\telement !== anchorNode\n\t\t\t\t) {\n\t\t\t\t\tconst { start, end: offset = start } = createRecord();\n\t\t\t\t\trecord.current.activeFormats = EMPTY_ACTIVE_FORMATS;\n\t\t\t\t\tonSelectionChange( offset );\n\t\t\t\t} else if (\n\t\t\t\t\telement.contains( focusNode ) &&\n\t\t\t\t\telement !== focusNode\n\t\t\t\t) {\n\t\t\t\t\tconst { start, end: offset = start } = createRecord();\n\t\t\t\t\trecord.current.activeFormats = EMPTY_ACTIVE_FORMATS;\n\t\t\t\t\tonSelectionChange( undefined, offset );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( event.type !== 'selectionchange' && ! isSelected ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case of a keyboard event, ignore selection changes during\n\t\t\t// composition.\n\t\t\tif ( isComposing ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { start, end, text } = createRecord();\n\t\t\tconst oldRecord = record.current;\n\n\t\t\t// Fallback mechanism for IE11, which doesn't support the input event.\n\t\t\t// Any input results in a selection change.\n\t\t\tif ( text !== oldRecord.text ) {\n\t\t\t\tonInput();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( start === oldRecord.start && end === oldRecord.end ) {\n\t\t\t\t// Sometimes the browser may set the selection on the placeholder\n\t\t\t\t// element, in which case the caret is not visible. We need to set\n\t\t\t\t// the caret before the placeholder if that's the case.\n\t\t\t\tif ( oldRecord.text.length === 0 && start === 0 ) {\n\t\t\t\t\tfixPlaceholderSelection( defaultView );\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newValue = {\n\t\t\t\t...oldRecord,\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t\t// _newActiveFormats may be set on arrow key navigation to control\n\t\t\t\t// the right boundary position. If undefined, getActiveFormats will\n\t\t\t\t// give the active formats according to the browser.\n\t\t\t\tactiveFormats: oldRecord._newActiveFormats,\n\t\t\t\t_newActiveFormats: undefined,\n\t\t\t};\n\n\t\t\tconst newActiveFormats = getActiveFormats(\n\t\t\t\tnewValue,\n\t\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t\t);\n\n\t\t\t// Update the value with the new active formats.\n\t\t\tnewValue.activeFormats = newActiveFormats;\n\n\t\t\t// It is important that the internal value is updated first,\n\t\t\t// otherwise the value will be wrong on render!\n\t\t\trecord.current = newValue;\n\t\t\tapplyRecord( newValue, { domOnly: true } );\n\t\t\tonSelectionChange( start, end );\n\t\t}\n\n\t\tfunction onCompositionStart() {\n\t\t\tisComposing = true;\n\t\t\t// Do not update the selection when characters are being composed as\n\t\t\t// this rerenders the component and might destroy internal browser\n\t\t\t// editing state.\n\t\t\townerDocument.removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t}\n\n\t\tfunction onCompositionEnd() {\n\t\t\tisComposing = false;\n\t\t\t// Ensure the value is up-to-date for browsers that don't emit a final\n\t\t\t// input event after composition.\n\t\t\tonInput( { inputType: 'insertText' } );\n\t\t\t// Tracking selection changes can be resumed.\n\t\t\townerDocument.addEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t}\n\n\t\tfunction onFocus() {\n\t\t\tconst {\n\t\t\t\trecord,\n\t\t\t\tisSelected,\n\t\t\t\tonSelectionChange,\n\t\t\t\tapplyRecord,\n\t\t\t} = propsRef.current;\n\n\t\t\t// When the whole editor is editable, let writing flow handle\n\t\t\t// selection.\n\t\t\tif ( element.parentElement.closest( '[contenteditable=\"true\"]' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( ! isSelected ) {\n\t\t\t\t// We know for certain that on focus, the old selection is invalid.\n\t\t\t\t// It will be recalculated on the next mouseup, keyup, or touchend\n\t\t\t\t// event.\n\t\t\t\tconst index = undefined;\n\n\t\t\t\trecord.current = {\n\t\t\t\t\t...record.current,\n\t\t\t\t\tstart: index,\n\t\t\t\t\tend: index,\n\t\t\t\t\tactiveFormats: EMPTY_ACTIVE_FORMATS,\n\t\t\t\t};\n\t\t\t\tonSelectionChange( index, index );\n\t\t\t} else {\n\t\t\t\tapplyRecord( record.current );\n\t\t\t\tonSelectionChange( record.current.start, record.current.end );\n\t\t\t}\n\n\t\t\t// Update selection as soon as possible, which is at the next animation\n\t\t\t// frame. The event listener for selection changes may be added too late\n\t\t\t// at this point, but this focus event is still too early to calculate\n\t\t\t// the selection.\n\t\t\trafId = defaultView.requestAnimationFrame( handleSelectionChange );\n\t\t}\n\n\t\telement.addEventListener( 'input', onInput );\n\t\telement.addEventListener( 'compositionstart', onCompositionStart );\n\t\telement.addEventListener( 'compositionend', onCompositionEnd );\n\t\telement.addEventListener( 'focus', onFocus );\n\t\t// Selection updates must be done at these events as they\n\t\t// happen before the `selectionchange` event. In some cases,\n\t\t// the `selectionchange` event may not even fire, for\n\t\t// example when the window receives focus again on click.\n\t\telement.addEventListener( 'keyup', handleSelectionChange );\n\t\telement.addEventListener( 'mouseup', handleSelectionChange );\n\t\telement.addEventListener( 'touchend', handleSelectionChange );\n\t\townerDocument.addEventListener(\n\t\t\t'selectionchange',\n\t\t\thandleSelectionChange\n\t\t);\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'input', onInput );\n\t\t\telement.removeEventListener(\n\t\t\t\t'compositionstart',\n\t\t\t\tonCompositionStart\n\t\t\t);\n\t\t\telement.removeEventListener( 'compositionend', onCompositionEnd );\n\t\t\telement.removeEventListener( 'focus', onFocus );\n\t\t\telement.removeEventListener( 'keyup', handleSelectionChange );\n\t\t\telement.removeEventListener( 'mouseup', handleSelectionChange );\n\t\t\telement.removeEventListener( 'touchend', handleSelectionChange );\n\t\t\townerDocument.removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t\tdefaultView.cancelAnimationFrame( rafId );\n\t\t};\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useRefEffect } from '@wordpress/compose';\n\nexport function useSelectObject() {\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onClick( event ) {\n\t\t\tconst { target } = event;\n\n\t\t\t// If the child element has no text content, it must be an object.\n\t\t\tif ( target === element || target.textContent ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { ownerDocument } = target;\n\t\t\tconst { defaultView } = ownerDocument;\n\t\t\tconst range = ownerDocument.createRange();\n\t\t\tconst selection = defaultView.getSelection();\n\n\t\t\trange.selectNode( target );\n\t\t\tselection.removeAllRanges();\n\t\t\tselection.addRange( range );\n\t\t}\n\n\t\telement.addEventListener( 'click', onClick );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'click', onClick );\n\t\t};\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useRefEffect } from '@wordpress/compose';\nimport { SPACE } from '@wordpress/keycodes';\n\n/**\n * For some elements like BUTTON and SUMMARY, the space key doesn't insert a\n * space character in some browsers even though the element is editable. We have\n * to manually insert a space and prevent default behaviour.\n *\n * DO NOT limit this behaviour to specific tag names! It would mean that this\n * behaviour is not widely tested. If there's ever any problems, we should find\n * a different solution entirely or remove it entirely.\n */\nexport function useSpace() {\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onKeyDown( event ) {\n\t\t\t// Don't insert a space if default behaviour is prevented.\n\t\t\tif ( event.defaultPrevented ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { keyCode, altKey, metaKey, ctrlKey, key } = event;\n\n\t\t\t// Only consider the space key without modifiers pressed.\n\t\t\tif ( keyCode !== SPACE || altKey || metaKey || ctrlKey ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Disregard character composition that involves the Space key.\n\t\t\t//\n\t\t\t// @see https://github.com/WordPress/gutenberg/issues/35086\n\t\t\t//\n\t\t\t// For example, to input a standalone diacritic (like ´ or `) using a\n\t\t\t// keyboard with dead keys, one must first press the dead key and then\n\t\t\t// press the Space key.\n\t\t\t//\n\t\t\t// Many operating systems handle this in such a way that the second\n\t\t\t// KeyboardEvent contains the property `keyCode: 229`. According to the\n\t\t\t// spec, 229 allows the system to indicate that an Input Method Editor\n\t\t\t// (IDE) is processing some key input.\n\t\t\t//\n\t\t\t// However, Windows doesn't use `keyCode: 229` for dead key composition,\n\t\t\t// instead emitting an event with values `keyCode: SPACE` and `key: '´'`.\n\t\t\t// That is why checking the `key` property for values other than `SPACE`\n\t\t\t// is important.\n\t\t\t//\n\t\t\t// This should serve as a reminder that the `KeyboardEvent.keyCode`\n\t\t\t// attribute is officially deprecated and that we should consider more\n\t\t\t// consistent interfaces.\n\t\t\tif ( key !== ' ' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.target.ownerDocument.execCommand( 'insertText', false, ' ' );\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\telement.addEventListener( 'keydown', onKeyDown );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t\t};\n\t}, [] );\n}\n","/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\nimport { create } from './create';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Concats a pair of rich text values. Not that this mutates `a` and does NOT\n * normalise formats!\n *\n * @param {Object} a Value to mutate.\n * @param {Object} b Value to add read from.\n *\n * @return {Object} `a`, mutated.\n */\nexport function mergePair( a, b ) {\n\ta.formats = a.formats.concat( b.formats );\n\ta.replacements = a.replacements.concat( b.replacements );\n\ta.text += b.text;\n\n\treturn a;\n}\n\n/**\n * Combine all Rich Text values into one. This is similar to\n * `String.prototype.concat`.\n *\n * @param {...RichTextValue} values Objects to combine.\n *\n * @return {RichTextValue} A new value combining all given records.\n */\nexport function concat( ...values ) {\n\treturn normaliseFormats( values.reduce( mergePair, create() ) );\n}\n","/**\n * Parse the given HTML into a body element.\n *\n * Note: The current implementation will return a shared reference, reset on\n * each call to `createElement`. Therefore, you should not hold a reference to\n * the value to operate upon asynchronously, as it may have unexpected results.\n *\n * @param {HTMLDocument} document The HTML document to use to parse.\n * @param {string}       html     The HTML to parse.\n *\n * @return {HTMLBodyElement} Body element with parsed HTML.\n */\nexport function createElement( { implementation }, html ) {\n\t// Because `createHTMLDocument` is an expensive operation, and with this\n\t// function being internal to `rich-text` (full control in avoiding a risk\n\t// of asynchronous operations on the shared reference), a single document\n\t// is reused and reset for each call to the function.\n\tif ( ! createElement.body ) {\n\t\tcreateElement.body = implementation.createHTMLDocument( '' ).body;\n\t}\n\n\tcreateElement.body.innerHTML = html;\n\n\treturn createElement.body;\n}\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\nimport { createElement } from './create-element';\nimport { mergePair } from './concat';\nimport {\n\tLINE_SEPARATOR,\n\tOBJECT_REPLACEMENT_CHARACTER,\n\tZWNBSP,\n} from './special-characters';\n\n/**\n * @typedef {Object} RichTextFormat\n *\n * @property {string} type Format type.\n */\n\n/**\n * @typedef {Array<RichTextFormat>} RichTextFormatList\n */\n\n/**\n * @typedef {Object} RichTextValue\n *\n * @property {string}                    text         Text.\n * @property {Array<RichTextFormatList>} formats      Formats.\n * @property {Array<RichTextFormat>}     replacements Replacements.\n * @property {number|undefined}          start        Selection start.\n * @property {number|undefined}          end          Selection end.\n */\n\nfunction createEmptyValue() {\n\treturn {\n\t\tformats: [],\n\t\treplacements: [],\n\t\ttext: '',\n\t};\n}\n\nfunction toFormat( { type, attributes } ) {\n\tlet formatType;\n\n\tif ( attributes && attributes.class ) {\n\t\tformatType = select( richTextStore ).getFormatTypeForClassName(\n\t\t\tattributes.class\n\t\t);\n\n\t\tif ( formatType ) {\n\t\t\t// Preserve any additional classes.\n\t\t\tattributes.class = ` ${ attributes.class } `\n\t\t\t\t.replace( ` ${ formatType.className } `, ' ' )\n\t\t\t\t.trim();\n\n\t\t\tif ( ! attributes.class ) {\n\t\t\t\tdelete attributes.class;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( ! formatType ) {\n\t\tformatType = select( richTextStore ).getFormatTypeForBareElement(\n\t\t\ttype\n\t\t);\n\t}\n\n\tif ( ! formatType ) {\n\t\treturn attributes ? { type, attributes } : { type };\n\t}\n\n\tif (\n\t\tformatType.__experimentalCreatePrepareEditableTree &&\n\t\t! formatType.__experimentalCreateOnChangeEditableValue\n\t) {\n\t\treturn null;\n\t}\n\n\tif ( ! attributes ) {\n\t\treturn { type: formatType.name };\n\t}\n\n\tconst registeredAttributes = {};\n\tconst unregisteredAttributes = {};\n\tconst _attributes = { ...attributes };\n\n\tfor ( const key in formatType.attributes ) {\n\t\tconst name = formatType.attributes[ key ];\n\n\t\tregisteredAttributes[ key ] = _attributes[ name ];\n\n\t\tif ( formatType.__unstableFilterAttributeValue ) {\n\t\t\tregisteredAttributes[\n\t\t\t\tkey\n\t\t\t] = formatType.__unstableFilterAttributeValue(\n\t\t\t\tkey,\n\t\t\t\tregisteredAttributes[ key ]\n\t\t\t);\n\t\t}\n\n\t\t// delete the attribute and what's left is considered\n\t\t// to be unregistered.\n\t\tdelete _attributes[ name ];\n\n\t\tif ( typeof registeredAttributes[ key ] === 'undefined' ) {\n\t\t\tdelete registeredAttributes[ key ];\n\t\t}\n\t}\n\n\tfor ( const name in _attributes ) {\n\t\tunregisteredAttributes[ name ] = attributes[ name ];\n\t}\n\n\treturn {\n\t\ttype: formatType.name,\n\t\tattributes: registeredAttributes,\n\t\tunregisteredAttributes,\n\t};\n}\n\n/**\n * Create a RichText value from an `Element` tree (DOM), an HTML string or a\n * plain text string, with optionally a `Range` object to set the selection. If\n * called without any input, an empty value will be created. If\n * `multilineTag` is provided, any content of direct children whose type matches\n * `multilineTag` will be separated by two newlines. The optional functions can\n * be used to filter out content.\n *\n * A value will have the following shape, which you are strongly encouraged not\n * to modify without the use of helper functions:\n *\n * ```js\n * {\n *   text: string,\n *   formats: Array,\n *   replacements: Array,\n *   ?start: number,\n *   ?end: number,\n * }\n * ```\n *\n * As you can see, text and formatting are separated. `text` holds the text,\n * including any replacement characters for objects and lines. `formats`,\n * `objects` and `lines` are all sparse arrays of the same length as `text`. It\n * holds information about the formatting at the relevant text indices. Finally\n * `start` and `end` state which text indices are selected. They are only\n * provided if a `Range` was given.\n *\n * @param {Object}  [$1]                          Optional named arguments.\n * @param {Element} [$1.element]                  Element to create value from.\n * @param {string}  [$1.text]                     Text to create value from.\n * @param {string}  [$1.html]                     HTML to create value from.\n * @param {Range}   [$1.range]                    Range to create value from.\n * @param {string}  [$1.multilineTag]             Multiline tag if the structure is\n *                                                multiline.\n * @param {Array}   [$1.multilineWrapperTags]     Tags where lines can be found if\n *                                                nesting is possible.\n * @param {boolean} [$1.preserveWhiteSpace]       Whether or not to collapse white\n *                                                space characters.\n * @param {boolean} [$1.__unstableIsEditableTree]\n *\n * @return {RichTextValue} A rich text value.\n */\nexport function create( {\n\telement,\n\ttext,\n\thtml,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\t__unstableIsEditableTree: isEditableTree,\n\tpreserveWhiteSpace,\n} = {} ) {\n\tif ( typeof text === 'string' && text.length > 0 ) {\n\t\treturn {\n\t\t\tformats: Array( text.length ),\n\t\t\treplacements: Array( text.length ),\n\t\t\ttext,\n\t\t};\n\t}\n\n\tif ( typeof html === 'string' && html.length > 0 ) {\n\t\t// It does not matter which document this is, we're just using it to\n\t\t// parse.\n\t\telement = createElement( document, html );\n\t}\n\n\tif ( typeof element !== 'object' ) {\n\t\treturn createEmptyValue();\n\t}\n\n\tif ( ! multilineTag ) {\n\t\treturn createFromElement( {\n\t\t\telement,\n\t\t\trange,\n\t\t\tisEditableTree,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t}\n\n\treturn createFromMultilineElement( {\n\t\telement,\n\t\trange,\n\t\tmultilineTag,\n\t\tmultilineWrapperTags,\n\t\tisEditableTree,\n\t\tpreserveWhiteSpace,\n\t} );\n}\n\n/**\n * Helper to accumulate the value's selection start and end from the current\n * node and range.\n *\n * @param {Object} accumulator Object to accumulate into.\n * @param {Node}   node        Node to create value with.\n * @param {Range}  range       Range to create value with.\n * @param {Object} value       Value that is being accumulated.\n */\nfunction accumulateSelection( accumulator, node, range, value ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { parentNode } = node;\n\tconst { startContainer, startOffset, endContainer, endOffset } = range;\n\tconst currentLength = accumulator.text.length;\n\n\t// Selection can be extracted from value.\n\tif ( value.start !== undefined ) {\n\t\taccumulator.start = currentLength + value.start;\n\t\t// Range indicates that the current node has selection.\n\t} else if ( node === startContainer && node.nodeType === node.TEXT_NODE ) {\n\t\taccumulator.start = currentLength + startOffset;\n\t\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset ]\n\t) {\n\t\taccumulator.start = currentLength;\n\t\t// Range indicates that the selection is after the current node.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset - 1 ]\n\t) {\n\t\taccumulator.start = currentLength + value.text.length;\n\t\t// Fallback if no child inside handled the selection.\n\t} else if ( node === startContainer ) {\n\t\taccumulator.start = currentLength;\n\t}\n\n\t// Selection can be extracted from value.\n\tif ( value.end !== undefined ) {\n\t\taccumulator.end = currentLength + value.end;\n\t\t// Range indicates that the current node has selection.\n\t} else if ( node === endContainer && node.nodeType === node.TEXT_NODE ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset - 1 ]\n\t) {\n\t\taccumulator.end = currentLength + value.text.length;\n\t\t// Range indicates that the selection is before the current node.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset ]\n\t) {\n\t\taccumulator.end = currentLength;\n\t\t// Fallback if no child inside handled the selection.\n\t} else if ( node === endContainer ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t}\n}\n\n/**\n * Adjusts the start and end offsets from a range based on a text filter.\n *\n * @param {Node}     node   Node of which the text should be filtered.\n * @param {Range}    range  The range to filter.\n * @param {Function} filter Function to use to filter the text.\n *\n * @return {Object|void} Object containing range properties.\n */\nfunction filterRange( node, range, filter ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { startContainer, endContainer } = range;\n\tlet { startOffset, endOffset } = range;\n\n\tif ( node === startContainer ) {\n\t\tstartOffset = filter( node.nodeValue.slice( 0, startOffset ) ).length;\n\t}\n\n\tif ( node === endContainer ) {\n\t\tendOffset = filter( node.nodeValue.slice( 0, endOffset ) ).length;\n\t}\n\n\treturn { startContainer, startOffset, endContainer, endOffset };\n}\n\n/**\n * Collapse any whitespace used for HTML formatting to one space character,\n * because it will also be displayed as such by the browser.\n *\n * @param {string} string\n */\nfunction collapseWhiteSpace( string ) {\n\treturn string.replace( /[\\n\\r\\t]+/g, ' ' );\n}\n\n/**\n * Removes reserved characters used by rich-text (zero width non breaking spaces added by `toTree` and object replacement characters).\n *\n * @param {string} string\n */\nexport function removeReservedCharacters( string ) {\n\t// with the global flag, note that we should create a new regex each time OR reset lastIndex state.\n\treturn string.replace(\n\t\tnew RegExp( `[${ ZWNBSP }${ OBJECT_REPLACEMENT_CHARACTER }]`, 'gu' ),\n\t\t''\n\t);\n}\n\n/**\n * Creates a Rich Text value from a DOM element and range.\n *\n * @param {Object}  $1                        Named argements.\n * @param {Element} [$1.element]              Element to create value from.\n * @param {Range}   [$1.range]                Range to create value from.\n * @param {string}  [$1.multilineTag]         Multiline tag if the structure is\n *                                            multiline.\n * @param {Array}   [$1.multilineWrapperTags] Tags where lines can be found if\n *                                            nesting is possible.\n * @param {boolean} [$1.preserveWhiteSpace]   Whether or not to collapse white\n *                                            space characters.\n * @param {Array}   [$1.currentWrapperTags]\n * @param {boolean} [$1.isEditableTree]\n *\n * @return {RichTextValue} A rich text value.\n */\nfunction createFromElement( {\n\telement,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\tcurrentWrapperTags = [],\n\tisEditableTree,\n\tpreserveWhiteSpace,\n} ) {\n\tconst accumulator = createEmptyValue();\n\n\tif ( ! element ) {\n\t\treturn accumulator;\n\t}\n\n\tif ( ! element.hasChildNodes() ) {\n\t\taccumulateSelection( accumulator, element, range, createEmptyValue() );\n\t\treturn accumulator;\n\t}\n\n\tconst length = element.childNodes.length;\n\n\t// Optimise for speed.\n\tfor ( let index = 0; index < length; index++ ) {\n\t\tconst node = element.childNodes[ index ];\n\t\tconst type = node.nodeName.toLowerCase();\n\n\t\tif ( node.nodeType === node.TEXT_NODE ) {\n\t\t\tlet filter = removeReservedCharacters;\n\n\t\t\tif ( ! preserveWhiteSpace ) {\n\t\t\t\tfilter = ( string ) =>\n\t\t\t\t\tremoveReservedCharacters( collapseWhiteSpace( string ) );\n\t\t\t}\n\n\t\t\tconst text = filter( node.nodeValue );\n\t\t\trange = filterRange( node, range, filter );\n\t\t\taccumulateSelection( accumulator, node, range, { text } );\n\t\t\t// Create a sparse array of the same length as `text`, in which\n\t\t\t// formats can be added.\n\t\t\taccumulator.formats.length += text.length;\n\t\t\taccumulator.replacements.length += text.length;\n\t\t\taccumulator.text += text;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( node.nodeType !== node.ELEMENT_NODE ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (\n\t\t\tisEditableTree &&\n\t\t\t// Ignore any placeholders.\n\t\t\t( node.getAttribute( 'data-rich-text-placeholder' ) ||\n\t\t\t\t// Ignore any line breaks that are not inserted by us.\n\t\t\t\t( type === 'br' &&\n\t\t\t\t\t! node.getAttribute( 'data-rich-text-line-break' ) ) )\n\t\t) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( type === 'script' ) {\n\t\t\tconst value = {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t'data-rich-text-script':\n\t\t\t\t\t\t\t\tnode.getAttribute( 'data-rich-text-script' ) ||\n\t\t\t\t\t\t\t\tencodeURIComponent( node.innerHTML ),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t};\n\t\t\taccumulateSelection( accumulator, node, range, value );\n\t\t\tmergePair( accumulator, value );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( type === 'br' ) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tmergePair( accumulator, create( { text: '\\n' } ) );\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst format = toFormat( {\n\t\t\ttype,\n\t\t\tattributes: getAttributes( { element: node } ),\n\t\t} );\n\n\t\tif (\n\t\t\tmultilineWrapperTags &&\n\t\t\tmultilineWrapperTags.indexOf( type ) !== -1\n\t\t) {\n\t\t\tconst value = createFromMultilineElement( {\n\t\t\t\telement: node,\n\t\t\t\trange,\n\t\t\t\tmultilineTag,\n\t\t\t\tmultilineWrapperTags,\n\t\t\t\tcurrentWrapperTags: [ ...currentWrapperTags, format ],\n\t\t\t\tisEditableTree,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} );\n\n\t\t\taccumulateSelection( accumulator, node, range, value );\n\t\t\tmergePair( accumulator, value );\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst value = createFromElement( {\n\t\t\telement: node,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags,\n\t\t\tisEditableTree,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\n\t\taccumulateSelection( accumulator, node, range, value );\n\n\t\tif ( ! format ) {\n\t\t\tmergePair( accumulator, value );\n\t\t} else if ( value.text.length === 0 ) {\n\t\t\tif ( format.attributes ) {\n\t\t\t\tmergePair( accumulator, {\n\t\t\t\t\tformats: [ , ],\n\t\t\t\t\treplacements: [ format ],\n\t\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\t// Indices should share a reference to the same formats array.\n\t\t\t// Only create a new reference if `formats` changes.\n\t\t\tfunction mergeFormats( formats ) {\n\t\t\t\tif ( mergeFormats.formats === formats ) {\n\t\t\t\t\treturn mergeFormats.newFormats;\n\t\t\t\t}\n\n\t\t\t\tconst newFormats = formats\n\t\t\t\t\t? [ format, ...formats ]\n\t\t\t\t\t: [ format ];\n\n\t\t\t\tmergeFormats.formats = formats;\n\t\t\t\tmergeFormats.newFormats = newFormats;\n\n\t\t\t\treturn newFormats;\n\t\t\t}\n\n\t\t\t// Since the formats parameter can be `undefined`, preset\n\t\t\t// `mergeFormats` with a new reference.\n\t\t\tmergeFormats.newFormats = [ format ];\n\n\t\t\tmergePair( accumulator, {\n\t\t\t\t...value,\n\t\t\t\tformats: Array.from( value.formats, mergeFormats ),\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn accumulator;\n}\n\n/**\n * Creates a rich text value from a DOM element and range that should be\n * multiline.\n *\n * @param {Object}  $1                        Named argements.\n * @param {Element} [$1.element]              Element to create value from.\n * @param {Range}   [$1.range]                Range to create value from.\n * @param {string}  [$1.multilineTag]         Multiline tag if the structure is\n *                                            multiline.\n * @param {Array}   [$1.multilineWrapperTags] Tags where lines can be found if\n *                                            nesting is possible.\n * @param {Array}   [$1.currentWrapperTags]   Whether to prepend a line\n *                                            separator.\n * @param {boolean} [$1.preserveWhiteSpace]   Whether or not to collapse white\n *                                            space characters.\n * @param {boolean} [$1.isEditableTree]\n *\n * @return {RichTextValue} A rich text value.\n */\nfunction createFromMultilineElement( {\n\telement,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\tcurrentWrapperTags = [],\n\tisEditableTree,\n\tpreserveWhiteSpace,\n} ) {\n\tconst accumulator = createEmptyValue();\n\n\tif ( ! element || ! element.hasChildNodes() ) {\n\t\treturn accumulator;\n\t}\n\n\tconst length = element.children.length;\n\n\t// Optimise for speed.\n\tfor ( let index = 0; index < length; index++ ) {\n\t\tconst node = element.children[ index ];\n\n\t\tif ( node.nodeName.toLowerCase() !== multilineTag ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst value = createFromElement( {\n\t\t\telement: node,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags,\n\t\t\tcurrentWrapperTags,\n\t\t\tisEditableTree,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\n\t\t// Multiline value text should be separated by a line separator.\n\t\tif ( index !== 0 || currentWrapperTags.length > 0 ) {\n\t\t\tmergePair( accumulator, {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements:\n\t\t\t\t\tcurrentWrapperTags.length > 0\n\t\t\t\t\t\t? [ currentWrapperTags ]\n\t\t\t\t\t\t: [ , ],\n\t\t\t\ttext: LINE_SEPARATOR,\n\t\t\t} );\n\t\t}\n\n\t\taccumulateSelection( accumulator, node, range, value );\n\t\tmergePair( accumulator, value );\n\t}\n\n\treturn accumulator;\n}\n\n/**\n * Gets the attributes of an element in object shape.\n *\n * @param {Object}  $1         Named argements.\n * @param {Element} $1.element Element to get attributes from.\n *\n * @return {Object|void} Attribute object or `undefined` if the element has no\n *                       attributes.\n */\nfunction getAttributes( { element } ) {\n\tif ( ! element.hasAttributes() ) {\n\t\treturn;\n\t}\n\n\tconst length = element.attributes.length;\n\tlet accumulator;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst { name, value } = element.attributes[ i ];\n\n\t\tif ( name.indexOf( 'data-rich-text-' ) === 0 ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst safeName = /^on/i.test( name )\n\t\t\t? 'data-disable-rich-text-' + name\n\t\t\t: name;\n\n\t\taccumulator = accumulator || {};\n\t\taccumulator[ safeName ] = value;\n\t}\n\n\treturn accumulator;\n}\n","/**\n * External dependencies\n */\n\nimport { find } from 'lodash';\n\n/**\n * Internal dependencies\n */\n\nimport { getActiveFormats } from './get-active-formats';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n/** @typedef {import('./create').RichTextFormat} RichTextFormat */\n\n/**\n * Gets the format object by type at the start of the selection. This can be\n * used to get e.g. the URL of a link format at the current selection, but also\n * to check if a format is active at the selection. Returns undefined if there\n * is no format at the selection.\n *\n * @param {RichTextValue} value      Value to inspect.\n * @param {string}        formatType Format type to look for.\n *\n * @return {RichTextFormat|undefined} Active format object of the specified\n *                                    type, or undefined.\n */\nexport function getActiveFormat( value, formatType ) {\n\treturn find( getActiveFormats( value ), { type: formatType } );\n}\n","/** @typedef {import('./create').RichTextValue} RichTextValue */\n/** @typedef {import('./create').RichTextFormatList} RichTextFormatList */\n\n/**\n * Gets the all format objects at the start of the selection.\n *\n * @param {RichTextValue} value                Value to inspect.\n * @param {Array}         EMPTY_ACTIVE_FORMATS Array to return if there are no\n *                                             active formats.\n *\n * @return {RichTextFormatList} Active format objects.\n */\nexport function getActiveFormats(\n\t{ formats, start, end, activeFormats },\n\tEMPTY_ACTIVE_FORMATS = []\n) {\n\tif ( start === undefined ) {\n\t\treturn EMPTY_ACTIVE_FORMATS;\n\t}\n\n\tif ( start === end ) {\n\t\t// For a collapsed caret, it is possible to override the active formats.\n\t\tif ( activeFormats ) {\n\t\t\treturn activeFormats;\n\t\t}\n\n\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\n\t\t// By default, select the lowest amount of formats possible (which means\n\t\t// the caret is positioned outside the format boundary). The user can\n\t\t// then use arrow keys to define `activeFormats`.\n\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\treturn formatsBefore;\n\t\t}\n\n\t\treturn formatsAfter;\n\t}\n\n\treturn formats[ start ] || EMPTY_ACTIVE_FORMATS;\n}\n","/**\n * Internal dependencies\n */\n\nimport { OBJECT_REPLACEMENT_CHARACTER } from './special-characters';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n/** @typedef {import('./create').RichTextFormat} RichTextFormat */\n\n/**\n * Gets the active object, if there is any.\n *\n * @param {RichTextValue} value Value to inspect.\n *\n * @return {RichTextFormat|void} Active object, or undefined.\n */\nexport function getActiveObject( { start, end, replacements, text } ) {\n\tif ( start + 1 !== end || text[ start ] !== OBJECT_REPLACEMENT_CHARACTER ) {\n\t\treturn;\n\t}\n\n\treturn replacements[ start ];\n}\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\n\n/** @typedef {import('./register-format-type').RichTextFormatType} RichTextFormatType */\n\n/**\n * Returns a registered format type.\n *\n * @param {string} name Format name.\n *\n * @return {RichTextFormatType|undefined} Format type.\n */\nexport function getFormatType( name ) {\n\treturn select( richTextStore ).getFormatType( name );\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Gets the line index of the last child in the list.\n *\n * @param {RichTextValue} value     Value to search.\n * @param {number}        lineIndex Line index of a list item in the list.\n *\n * @return {number} The index of the last child.\n */\nexport function getLastChildIndex( { text, replacements }, lineIndex ) {\n\tconst lineFormats = replacements[ lineIndex ] || [];\n\t// Use the given line index in case there are no next children.\n\tlet childIndex = lineIndex;\n\n\t// `lineIndex` could be `undefined` if it's the first line.\n\tfor ( let index = lineIndex || 0; index < text.length; index++ ) {\n\t\t// We're only interested in line indices.\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst formatsAtIndex = replacements[ index ] || [];\n\n\t\t// If the amout of formats is equal or more, store it, then return the\n\t\t// last one if the amount of formats is less.\n\t\tif ( formatsAtIndex.length >= lineFormats.length ) {\n\t\t\tchildIndex = index;\n\t\t} else {\n\t\t\treturn childIndex;\n\t\t}\n\t}\n\n\t// If the end of the text is reached, return the last child index.\n\treturn childIndex;\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Gets the currently selected line index, or the first line index if the\n * selection spans over multiple items.\n *\n * @param {RichTextValue} value      Value to get the line index from.\n * @param {boolean}       startIndex Optional index that should be contained by\n *                                   the line. Defaults to the selection start\n *                                   of the value.\n *\n * @return {number|void} The line index. Undefined if not found.\n */\nexport function getLineIndex( { start, text }, startIndex = start ) {\n\tlet index = startIndex;\n\n\twhile ( index-- ) {\n\t\tif ( text[ index ] === LINE_SEPARATOR ) {\n\t\t\treturn index;\n\t\t}\n\t}\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Gets the index of the first parent list. To get the parent list formats, we\n * go through every list item until we find one with exactly one format type\n * less.\n *\n * @param {RichTextValue} value     Value to search.\n * @param {number}        lineIndex Line index of a child list item.\n *\n * @return {number|void} The parent list line index.\n */\nexport function getParentLineIndex( { text, replacements }, lineIndex ) {\n\tconst startFormats = replacements[ lineIndex ] || [];\n\n\tlet index = lineIndex;\n\n\twhile ( index-- >= 0 ) {\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst formatsAtIndex = replacements[ index ] || [];\n\n\t\tif ( formatsAtIndex.length === startFormats.length - 1 ) {\n\t\t\treturn index;\n\t\t}\n\t}\n}\n","/**\n * Internal dependencies\n */\nimport {\n\tOBJECT_REPLACEMENT_CHARACTER,\n\tLINE_SEPARATOR,\n} from './special-characters';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Get the textual content of a Rich Text value. This is similar to\n * `Element.textContent`.\n *\n * @param {RichTextValue} value Value to use.\n *\n * @return {string} The text content.\n */\nexport function getTextContent( { text } ) {\n\treturn text\n\t\t.replace( new RegExp( OBJECT_REPLACEMENT_CHARACTER, 'g' ), '' )\n\t\t.replace( new RegExp( LINE_SEPARATOR, 'g' ), '\\n' );\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { getLineIndex } from './get-line-index';\nimport { canIndentListItems } from './can-indent-list-items';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n/** @typedef {import('./create').RichTextFormat} RichTextFormat */\n\n/**\n * Gets the line index of the first previous list item with higher indentation.\n *\n * @param {RichTextValue} value     Value to search.\n * @param {number}        lineIndex Line index of the list item to compare\n *                                  with.\n *\n * @return {number|void} The line index.\n */\nfunction getTargetLevelLineIndex( { text, replacements }, lineIndex ) {\n\tconst startFormats = replacements[ lineIndex ] || [];\n\n\tlet index = lineIndex;\n\n\twhile ( index-- >= 0 ) {\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst formatsAtIndex = replacements[ index ] || [];\n\n\t\t// Return the first line index that is one level higher. If the level is\n\t\t// lower or equal, there is no result.\n\t\tif ( formatsAtIndex.length === startFormats.length + 1 ) {\n\t\t\treturn index;\n\t\t} else if ( formatsAtIndex.length <= startFormats.length ) {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n/**\n * Indents any selected list items if possible.\n *\n * @param {RichTextValue}  value      Value to change.\n * @param {RichTextFormat} rootFormat Root format.\n *\n * @return {RichTextValue} The changed value.\n */\nexport function indentListItems( value, rootFormat ) {\n\tif ( ! canIndentListItems( value ) ) {\n\t\treturn value;\n\t}\n\n\tconst lineIndex = getLineIndex( value );\n\tconst previousLineIndex = getLineIndex( value, lineIndex );\n\tconst { text, replacements, end } = value;\n\tconst newFormats = replacements.slice();\n\tconst targetLevelLineIndex = getTargetLevelLineIndex( value, lineIndex );\n\n\tfor ( let index = lineIndex; index < end; index++ ) {\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Get the previous list, and if there's a child list, take over the\n\t\t// formats. If not, duplicate the last level and create a new level.\n\t\tif ( targetLevelLineIndex ) {\n\t\t\tconst targetFormats = replacements[ targetLevelLineIndex ] || [];\n\t\t\tnewFormats[ index ] = targetFormats.concat(\n\t\t\t\t( newFormats[ index ] || [] ).slice( targetFormats.length - 1 )\n\t\t\t);\n\t\t} else {\n\t\t\tconst targetFormats = replacements[ previousLineIndex ] || [];\n\t\t\tconst lastformat =\n\t\t\t\ttargetFormats[ targetFormats.length - 1 ] || rootFormat;\n\n\t\t\tnewFormats[ index ] = targetFormats.concat(\n\t\t\t\t[ lastformat ],\n\t\t\t\t( newFormats[ index ] || [] ).slice( targetFormats.length )\n\t\t\t);\n\t\t}\n\t}\n\n\treturn {\n\t\t...value,\n\t\treplacements: newFormats,\n\t};\n}\n","/**\n * Internal dependencies\n */\n\nimport { insert } from './insert';\nimport { LINE_SEPARATOR } from './special-characters';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Insert a line break character into a Rich Text value at the given\n * `startIndex`. Any content between `startIndex` and `endIndex` will be\n * removed. Indices are retrieved from the selection if none are provided.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new value with the value inserted.\n */\nexport function insertLineSeparator(\n\tvalue,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst beforeText = value.text.slice( 0, startIndex );\n\tconst previousLineSeparatorIndex = beforeText.lastIndexOf( LINE_SEPARATOR );\n\tconst previousLineSeparatorFormats =\n\t\tvalue.replacements[ previousLineSeparatorIndex ];\n\tlet replacements = [ , ];\n\n\tif ( previousLineSeparatorFormats ) {\n\t\treplacements = [ previousLineSeparatorFormats ];\n\t}\n\n\tconst valueToInsert = {\n\t\tformats: [ , ],\n\t\treplacements,\n\t\ttext: LINE_SEPARATOR,\n\t};\n\n\treturn insert( value, valueToInsert, startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { insert } from './insert';\nimport { OBJECT_REPLACEMENT_CHARACTER } from './special-characters';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n/** @typedef {import('./create').RichTextFormat} RichTextFormat */\n\n/**\n * Insert a format as an object into a Rich Text value at the given\n * `startIndex`. Any content between `startIndex` and `endIndex` will be\n * removed. Indices are retrieved from the selection if none are provided.\n *\n * @param {RichTextValue}  value          Value to modify.\n * @param {RichTextFormat} formatToInsert Format to insert as object.\n * @param {number}         [startIndex]   Start index.\n * @param {number}         [endIndex]     End index.\n *\n * @return {RichTextValue} A new value with the object inserted.\n */\nexport function insertObject( value, formatToInsert, startIndex, endIndex ) {\n\tconst valueToInsert = {\n\t\tformats: [ , ],\n\t\treplacements: [ formatToInsert ],\n\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t};\n\n\treturn insert( value, valueToInsert, startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Insert a Rich Text value, an HTML string, or a plain text string, into a\n * Rich Text value at the given `startIndex`. Any content between `startIndex`\n * and `endIndex` will be removed. Indices are retrieved from the selection if\n * none are provided.\n *\n * @param {RichTextValue}        value         Value to modify.\n * @param {RichTextValue|string} valueToInsert Value to insert.\n * @param {number}               [startIndex]  Start index.\n * @param {number}               [endIndex]    End index.\n *\n * @return {RichTextValue} A new value with the value inserted.\n */\nexport function insert(\n\tvalue,\n\tvalueToInsert,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, replacements, text } = value;\n\n\tif ( typeof valueToInsert === 'string' ) {\n\t\tvalueToInsert = create( { text: valueToInsert } );\n\t}\n\n\tconst index = startIndex + valueToInsert.text.length;\n\n\treturn normaliseFormats( {\n\t\tformats: formats\n\t\t\t.slice( 0, startIndex )\n\t\t\t.concat( valueToInsert.formats, formats.slice( endIndex ) ),\n\t\treplacements: replacements\n\t\t\t.slice( 0, startIndex )\n\t\t\t.concat(\n\t\t\t\tvalueToInsert.replacements,\n\t\t\t\treplacements.slice( endIndex )\n\t\t\t),\n\t\ttext:\n\t\t\ttext.slice( 0, startIndex ) +\n\t\t\tvalueToInsert.text +\n\t\t\ttext.slice( endIndex ),\n\t\tstart: index,\n\t\tend: index,\n\t} );\n}\n","/**\n * Internal dependencies\n */\n\nimport { getLineIndex } from './get-line-index';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Whether or not the selected list has the given tag name.\n *\n * @param {RichTextValue} value    The value to check.\n * @param {string}        type     The tag name the list should have.\n * @param {string}        rootType The current root tag name, to compare with in\n *                                 case nothing is selected.\n *\n * @return {boolean} True if the current list type matches `type`, false if not.\n */\nexport function isActiveListType( value, type, rootType ) {\n\tconst { replacements, start } = value;\n\tconst lineIndex = getLineIndex( value, start );\n\tconst replacement = replacements[ lineIndex ];\n\n\tif ( ! replacement || replacement.length === 0 ) {\n\t\treturn type === rootType;\n\t}\n\n\tconst lastFormat = replacement[ replacement.length - 1 ];\n\n\treturn lastFormat.type === type;\n}\n","/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Check if the selection of a Rich Text value is collapsed or not. Collapsed\n * means that no characters are selected, but there is a caret present. If there\n * is no selection, `undefined` will be returned. This is similar to\n * `window.getSelection().isCollapsed()`.\n *\n * @param {RichTextValue} value The rich text value to check.\n *\n * @return {boolean|undefined} True if the selection is collapsed, false if not,\n *                             undefined if there is no selection.\n */\nexport function isCollapsed( { start, end } ) {\n\tif ( start === undefined || end === undefined ) {\n\t\treturn;\n\t}\n\n\treturn start === end;\n}\n","/**\n * Internal dependencies\n */\nimport { LINE_SEPARATOR } from './special-characters';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Check if a Rich Text value is Empty, meaning it contains no text or any\n * objects (such as images).\n *\n * @param {RichTextValue} value Value to use.\n *\n * @return {boolean} True if the value is empty, false if not.\n */\nexport function isEmpty( { text } ) {\n\treturn text.length === 0;\n}\n\n/**\n * Check if the current collapsed selection is on an empty line in case of a\n * multiline value.\n *\n * @param {RichTextValue} value Value te check.\n *\n * @return {boolean} True if the line is empty, false if not.\n */\nexport function isEmptyLine( { text, start, end } ) {\n\tif ( start !== end ) {\n\t\treturn false;\n\t}\n\n\tif ( text.length === 0 ) {\n\t\treturn true;\n\t}\n\n\tif ( start === 0 && text.slice( 0, 1 ) === LINE_SEPARATOR ) {\n\t\treturn true;\n\t}\n\n\tif ( start === text.length && text.slice( -1 ) === LINE_SEPARATOR ) {\n\t\treturn true;\n\t}\n\n\treturn (\n\t\ttext.slice( start - 1, end + 1 ) ===\n\t\t`${ LINE_SEPARATOR }${ LINE_SEPARATOR }`\n\t);\n}\n","/** @typedef {import('./create').RichTextFormat} RichTextFormat */\n\n/**\n * Optimised equality check for format objects.\n *\n * @param {?RichTextFormat} format1 Format to compare.\n * @param {?RichTextFormat} format2 Format to compare.\n *\n * @return {boolean} True if formats are equal, false if not.\n */\nexport function isFormatEqual( format1, format2 ) {\n\t// Both not defined.\n\tif ( format1 === format2 ) {\n\t\treturn true;\n\t}\n\n\t// Either not defined.\n\tif ( ! format1 || ! format2 ) {\n\t\treturn false;\n\t}\n\n\tif ( format1.type !== format2.type ) {\n\t\treturn false;\n\t}\n\n\tconst attributes1 = format1.attributes;\n\tconst attributes2 = format2.attributes;\n\n\t// Both not defined.\n\tif ( attributes1 === attributes2 ) {\n\t\treturn true;\n\t}\n\n\t// Either not defined.\n\tif ( ! attributes1 || ! attributes2 ) {\n\t\treturn false;\n\t}\n\n\tconst keys1 = Object.keys( attributes1 );\n\tconst keys2 = Object.keys( attributes2 );\n\n\tif ( keys1.length !== keys2.length ) {\n\t\treturn false;\n\t}\n\n\tconst length = keys1.length;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst name = keys1[ i ];\n\n\t\tif ( attributes1[ name ] !== attributes2[ name ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n","/**\n * Internal dependencies\n */\n\nimport { getLineIndex } from './get-line-index';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Whether or not the root list is selected.\n *\n * @param {RichTextValue} value The value to check.\n *\n * @return {boolean} True if the root list or nothing is selected, false if an\n *                   inner list is selected.\n */\nexport function isListRootSelected( value ) {\n\tconst { replacements, start } = value;\n\tconst lineIndex = getLineIndex( value, start );\n\tconst replacement = replacements[ lineIndex ];\n\n\treturn ! replacement || replacement.length < 1;\n}\n","/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Combine an array of Rich Text values into one, optionally separated by\n * `separator`, which can be a Rich Text value, HTML string, or plain text\n * string. This is similar to `Array.prototype.join`.\n *\n * @param {Array<RichTextValue>} values      An array of values to join.\n * @param {string|RichTextValue} [separator] Separator string or value.\n *\n * @return {RichTextValue} A new combined value.\n */\nexport function join( values, separator = '' ) {\n\tif ( typeof separator === 'string' ) {\n\t\tseparator = create( { text: separator } );\n\t}\n\n\treturn normaliseFormats(\n\t\tvalues.reduce( ( accumlator, { formats, replacements, text } ) => ( {\n\t\t\tformats: accumlator.formats.concat( separator.formats, formats ),\n\t\t\treplacements: accumlator.replacements.concat(\n\t\t\t\tseparator.replacements,\n\t\t\t\treplacements\n\t\t\t),\n\t\t\ttext: accumlator.text + separator.text + text,\n\t\t} ) )\n\t);\n}\n","/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Normalises formats: ensures subsequent adjacent equal formats have the same\n * reference.\n *\n * @param {RichTextValue} value Value to normalise formats of.\n *\n * @return {RichTextValue} New value with normalised formats.\n */\nexport function normaliseFormats( value ) {\n\tconst newFormats = value.formats.slice();\n\n\tnewFormats.forEach( ( formatsAtIndex, index ) => {\n\t\tconst formatsAtPreviousIndex = newFormats[ index - 1 ];\n\n\t\tif ( formatsAtPreviousIndex ) {\n\t\t\tconst newFormatsAtIndex = formatsAtIndex.slice();\n\n\t\t\tnewFormatsAtIndex.forEach( ( format, formatIndex ) => {\n\t\t\t\tconst previousFormat = formatsAtPreviousIndex[ formatIndex ];\n\n\t\t\t\tif ( isFormatEqual( format, previousFormat ) ) {\n\t\t\t\t\tnewFormatsAtIndex[ formatIndex ] = previousFormat;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tnewFormats[ index ] = newFormatsAtIndex;\n\t\t}\n\t} );\n\n\treturn {\n\t\t...value,\n\t\tformats: newFormats,\n\t};\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { getLineIndex } from './get-line-index';\nimport { getParentLineIndex } from './get-parent-line-index';\nimport { getLastChildIndex } from './get-last-child-index';\nimport { canOutdentListItems } from './can-outdent-list-items';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Outdents any selected list items if possible.\n *\n * @param {RichTextValue} value Value to change.\n *\n * @return {RichTextValue} The changed value.\n */\nexport function outdentListItems( value ) {\n\tif ( ! canOutdentListItems( value ) ) {\n\t\treturn value;\n\t}\n\n\tconst { text, replacements, start, end } = value;\n\tconst startingLineIndex = getLineIndex( value, start );\n\tconst newFormats = replacements.slice( 0 );\n\tconst parentFormats =\n\t\treplacements[ getParentLineIndex( value, startingLineIndex ) ] || [];\n\tconst endingLineIndex = getLineIndex( value, end );\n\tconst lastChildIndex = getLastChildIndex( value, endingLineIndex );\n\n\t// Outdent all list items from the starting line index until the last child\n\t// index of the ending list. All children of the ending list need to be\n\t// outdented, otherwise they'll be orphaned.\n\tfor ( let index = startingLineIndex; index <= lastChildIndex; index++ ) {\n\t\t// Skip indices that are not line separators.\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// In the case of level 0, the formats at the index are undefined.\n\t\tconst currentFormats = newFormats[ index ] || [];\n\n\t\t// Omit the indentation level where the selection starts.\n\t\tnewFormats[ index ] = parentFormats.concat(\n\t\t\tcurrentFormats.slice( parentFormats.length + 1 )\n\t\t);\n\n\t\tif ( newFormats[ index ].length === 0 ) {\n\t\t\tdelete newFormats[ index ];\n\t\t}\n\t}\n\n\treturn {\n\t\t...value,\n\t\treplacements: newFormats,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\n/**\n * @typedef {Object} WPFormat\n *\n * @property {string}   name        A string identifying the format. Must be\n *                                  unique across all registered formats.\n * @property {string}   tagName     The HTML tag this format will wrap the\n *                                  selection with.\n * @property {string}   [className] A class to match the format.\n * @property {string}   title       Name of the format.\n * @property {Function} edit        Should return a component for the user to\n *                                  interact with the new registered format.\n */\n\n/**\n * Registers a new format provided a unique name and an object defining its\n * behavior.\n *\n * @param {string}   name     Format name.\n * @param {WPFormat} settings Format settings.\n *\n * @return {WPFormat|undefined} The format, if it has been successfully\n *                              registered; otherwise `undefined`.\n */\nexport function registerFormatType( name, settings ) {\n\tsettings = {\n\t\tname,\n\t\t...settings,\n\t};\n\n\tif ( typeof settings.name !== 'string' ) {\n\t\twindow.console.error( 'Format names must be strings.' );\n\t\treturn;\n\t}\n\n\tif ( ! /^[a-z][a-z0-9-]*\\/[a-z][a-z0-9-]*$/.test( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-format'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( select( richTextStore ).getFormatType( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format \"' + settings.name + '\" is already registered.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.tagName !== 'string' || settings.tagName === '' ) {\n\t\twindow.console.error( 'Format tag names must be a string.' );\n\t\treturn;\n\t}\n\n\tif (\n\t\t( typeof settings.className !== 'string' ||\n\t\t\tsettings.className === '' ) &&\n\t\tsettings.className !== null\n\t) {\n\t\twindow.console.error(\n\t\t\t'Format class names must be a string, or null to handle bare elements.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! /^[_a-zA-Z]+[a-zA-Z0-9-]*$/.test( settings.className ) ) {\n\t\twindow.console.error(\n\t\t\t'A class name must begin with a letter, followed by any number of hyphens, letters, or numbers.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( settings.className === null ) {\n\t\tconst formatTypeForBareElement = select(\n\t\t\trichTextStore\n\t\t).getFormatTypeForBareElement( settings.tagName );\n\n\t\tif ( formatTypeForBareElement ) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForBareElement.name }\" is already registered to handle bare tag name \"${ settings.tagName }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\tconst formatTypeForClassName = select(\n\t\t\trichTextStore\n\t\t).getFormatTypeForClassName( settings.className );\n\n\t\tif ( formatTypeForClassName ) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForClassName.name }\" is already registered to handle class name \"${ settings.className }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif ( ! ( 'title' in settings ) || settings.title === '' ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' + settings.name + '\" must have a title.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( 'keywords' in settings && settings.keywords.length > 3 ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' +\n\t\t\t\tsettings.name +\n\t\t\t\t'\" can have a maximum of 3 keywords.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.title !== 'string' ) {\n\t\twindow.console.error( 'Format titles must be strings.' );\n\t\treturn;\n\t}\n\n\tdispatch( richTextStore ).addFormatTypes( settings );\n\n\treturn settings;\n}\n","/**\n * External dependencies\n */\n\nimport { find, reject } from 'lodash';\n\n/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Remove any format object from a Rich Text value by type from the given\n * `startIndex` to the given `endIndex`. Indices are retrieved from the\n * selection if none are provided.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {string}        formatType   Format type to remove.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new value with the format applied.\n */\nexport function removeFormat(\n\tvalue,\n\tformatType,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, activeFormats } = value;\n\tconst newFormats = formats.slice();\n\n\t// If the selection is collapsed, expand start and end to the edges of the\n\t// format.\n\tif ( startIndex === endIndex ) {\n\t\tconst format = find( newFormats[ startIndex ], { type: formatType } );\n\n\t\tif ( format ) {\n\t\t\twhile ( find( newFormats[ startIndex ], format ) ) {\n\t\t\t\tfilterFormats( newFormats, startIndex, formatType );\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tendIndex++;\n\n\t\t\twhile ( find( newFormats[ endIndex ], format ) ) {\n\t\t\t\tfilterFormats( newFormats, endIndex, formatType );\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( let i = startIndex; i < endIndex; i++ ) {\n\t\t\tif ( newFormats[ i ] ) {\n\t\t\t\tfilterFormats( newFormats, i, formatType );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn normaliseFormats( {\n\t\t...value,\n\t\tformats: newFormats,\n\t\tactiveFormats: reject( activeFormats, { type: formatType } ),\n\t} );\n}\n\nfunction filterFormats( formats, index, formatType ) {\n\tconst newFormats = formats[ index ].filter(\n\t\t( { type } ) => type !== formatType\n\t);\n\n\tif ( newFormats.length ) {\n\t\tformats[ index ] = newFormats;\n\t} else {\n\t\tdelete formats[ index ];\n\t}\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { isCollapsed } from './is-collapsed';\nimport { remove } from './remove';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Removes a line separator character, if existing, from a Rich Text value at\n * the current indices. If no line separator exists on the indices it will\n * return undefined.\n *\n * @param {RichTextValue} value    Value to modify.\n * @param {boolean}       backward Indicates if are removing from the start\n *                                 index or the end index.\n *\n * @return {RichTextValue|undefined} A new value with the line separator\n *                                   removed. Or undefined if no line separator\n *                                   is found on the position.\n */\nexport function removeLineSeparator( value, backward = true ) {\n\tconst { replacements, text, start, end } = value;\n\tconst collapsed = isCollapsed( value );\n\tlet index = start - 1;\n\tlet removeStart = collapsed ? start - 1 : start;\n\tlet removeEnd = end;\n\tif ( ! backward ) {\n\t\tindex = end;\n\t\tremoveStart = start;\n\t\tremoveEnd = collapsed ? end + 1 : end;\n\t}\n\n\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\treturn;\n\t}\n\n\tlet newValue;\n\t// If the line separator that is about te be removed\n\t// contains wrappers, remove the wrappers first.\n\tif ( collapsed && replacements[ index ] && replacements[ index ].length ) {\n\t\tconst newReplacements = replacements.slice();\n\n\t\tnewReplacements[ index ] = replacements[ index ].slice( 0, -1 );\n\t\tnewValue = {\n\t\t\t...value,\n\t\t\treplacements: newReplacements,\n\t\t};\n\t} else {\n\t\tnewValue = remove( value, removeStart, removeEnd );\n\t}\n\treturn newValue;\n}\n","/**\n * Internal dependencies\n */\n\nimport { insert } from './insert';\nimport { create } from './create';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Remove content from a Rich Text value between the given `startIndex` and\n * `endIndex`. Indices are retrieved from the selection if none are provided.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new value with the content removed.\n */\nexport function remove( value, startIndex, endIndex ) {\n\treturn insert( value, create(), startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Search a Rich Text value and replace the match(es) with `replacement`. This\n * is similar to `String.prototype.replace`.\n *\n * @param {RichTextValue}   value       The value to modify.\n * @param {RegExp|string}   pattern     A RegExp object or literal. Can also be\n *                                      a string. It is treated as a verbatim\n *                                      string and is not interpreted as a\n *                                      regular expression. Only the first\n *                                      occurrence will be replaced.\n * @param {Function|string} replacement The match or matches are replaced with\n *                                      the specified or the value returned by\n *                                      the specified function.\n *\n * @return {RichTextValue} A new value with replacements applied.\n */\nexport function replace(\n\t{ formats, replacements, text, start, end },\n\tpattern,\n\treplacement\n) {\n\ttext = text.replace( pattern, ( match, ...rest ) => {\n\t\tconst offset = rest[ rest.length - 2 ];\n\t\tlet newText = replacement;\n\t\tlet newFormats;\n\t\tlet newReplacements;\n\n\t\tif ( typeof newText === 'function' ) {\n\t\t\tnewText = replacement( match, ...rest );\n\t\t}\n\n\t\tif ( typeof newText === 'object' ) {\n\t\t\tnewFormats = newText.formats;\n\t\t\tnewReplacements = newText.replacements;\n\t\t\tnewText = newText.text;\n\t\t} else {\n\t\t\tnewFormats = Array( newText.length );\n\t\t\tnewReplacements = Array( newText.length );\n\n\t\t\tif ( formats[ offset ] ) {\n\t\t\t\tnewFormats = newFormats.fill( formats[ offset ] );\n\t\t\t}\n\t\t}\n\n\t\tformats = formats\n\t\t\t.slice( 0, offset )\n\t\t\t.concat( newFormats, formats.slice( offset + match.length ) );\n\t\treplacements = replacements\n\t\t\t.slice( 0, offset )\n\t\t\t.concat(\n\t\t\t\tnewReplacements,\n\t\t\t\treplacements.slice( offset + match.length )\n\t\t\t);\n\n\t\tif ( start ) {\n\t\t\tstart = end = offset + newText.length;\n\t\t}\n\n\t\treturn newText;\n\t} );\n\n\treturn normaliseFormats( { formats, replacements, text, start, end } );\n}\n","/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Slice a Rich Text value from `startIndex` to `endIndex`. Indices are\n * retrieved from the selection if none are provided. This is similar to\n * `String.prototype.slice`.\n *\n * @param {RichTextValue} value        Value to modify.\n * @param {number}        [startIndex] Start index.\n * @param {number}        [endIndex]   End index.\n *\n * @return {RichTextValue} A new extracted value.\n */\nexport function slice( value, startIndex = value.start, endIndex = value.end ) {\n\tconst { formats, replacements, text } = value;\n\n\tif ( startIndex === undefined || endIndex === undefined ) {\n\t\treturn { ...value };\n\t}\n\n\treturn {\n\t\tformats: formats.slice( startIndex, endIndex ),\n\t\treplacements: replacements.slice( startIndex, endIndex ),\n\t\ttext: text.slice( startIndex, endIndex ),\n\t};\n}\n","/**\n * Line separator character, used for multiline text.\n */\nexport const LINE_SEPARATOR = '\\u2028';\n\n/**\n * Object replacement character, used as a placeholder for objects.\n */\nexport const OBJECT_REPLACEMENT_CHARACTER = '\\ufffc';\n\n/**\n * Zero width non-breaking space, used as padding in the editable DOM tree when\n * it is empty otherwise.\n */\nexport const ZWNBSP = '\\ufeff';\n","/**\n * Internal dependencies\n */\n\nimport { replace } from './replace';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Split a Rich Text value in two at the given `startIndex` and `endIndex`, or\n * split at the given separator. This is similar to `String.prototype.split`.\n * Indices are retrieved from the selection if none are provided.\n *\n * @param {RichTextValue} value\n * @param {number|string} [string] Start index, or string at which to split.\n *\n * @return {Array<RichTextValue>|undefined} An array of new values.\n */\nexport function split( { formats, replacements, text, start, end }, string ) {\n\tif ( typeof string !== 'string' ) {\n\t\treturn splitAtSelection( ...arguments );\n\t}\n\n\tlet nextStart = 0;\n\n\treturn text.split( string ).map( ( substring ) => {\n\t\tconst startIndex = nextStart;\n\t\tconst value = {\n\t\t\tformats: formats.slice( startIndex, startIndex + substring.length ),\n\t\t\treplacements: replacements.slice(\n\t\t\t\tstartIndex,\n\t\t\t\tstartIndex + substring.length\n\t\t\t),\n\t\t\ttext: substring,\n\t\t};\n\n\t\tnextStart += string.length + substring.length;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\t\t\tif ( start >= startIndex && start < nextStart ) {\n\t\t\t\tvalue.start = start - startIndex;\n\t\t\t} else if ( start < startIndex && end > startIndex ) {\n\t\t\t\tvalue.start = 0;\n\t\t\t}\n\n\t\t\tif ( end >= startIndex && end < nextStart ) {\n\t\t\t\tvalue.end = end - startIndex;\n\t\t\t} else if ( start < nextStart && end > nextStart ) {\n\t\t\t\tvalue.end = substring.length;\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t} );\n}\n\nfunction splitAtSelection(\n\t{ formats, replacements, text, start, end },\n\tstartIndex = start,\n\tendIndex = end\n) {\n\tif ( start === undefined || end === undefined ) {\n\t\treturn;\n\t}\n\n\tconst before = {\n\t\tformats: formats.slice( 0, startIndex ),\n\t\treplacements: replacements.slice( 0, startIndex ),\n\t\ttext: text.slice( 0, startIndex ),\n\t};\n\tconst after = {\n\t\tformats: formats.slice( endIndex ),\n\t\treplacements: replacements.slice( endIndex ),\n\t\ttext: text.slice( endIndex ),\n\t\tstart: 0,\n\t\tend: 0,\n\t};\n\n\treturn [\n\t\t// Ensure newlines are trimmed.\n\t\treplace( before, /\\u2028+$/, '' ),\n\t\treplace( after, /^\\u2028+/, '' ),\n\t];\n}\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\n\n/**\n * Returns an action object used in signalling that format types have been\n * added.\n *\n * @param {Array|Object} formatTypes Format types received.\n *\n * @return {Object} Action object.\n */\nexport function addFormatTypes( formatTypes ) {\n\treturn {\n\t\ttype: 'ADD_FORMAT_TYPES',\n\t\tformatTypes: castArray( formatTypes ),\n\t};\n}\n\n/**\n * Returns an action object used to remove a registered format type.\n *\n * @param {string|Array} names Format name.\n *\n * @return {Object} Action object.\n */\nexport function removeFormatTypes( names ) {\n\treturn {\n\t\ttype: 'REMOVE_FORMAT_TYPES',\n\t\tnames: castArray( names ),\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\n\nconst STORE_NAME = 'core/rich-text';\n\n/**\n * Store definition for the rich-text namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tselectors,\n\tactions,\n} );\n\nregister( store );\n","/**\n * External dependencies\n */\nimport { keyBy, omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer managing the format types\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function formatTypes( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_FORMAT_TYPES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...keyBy( action.formatTypes, 'name' ),\n\t\t\t};\n\t\tcase 'REMOVE_FORMAT_TYPES':\n\t\t\treturn omit( state, action.names );\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( { formatTypes } );\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport { find } from 'lodash';\n\n/**\n * Returns all the available format types.\n *\n * @param {Object} state Data state.\n *\n * @return {Array} Format types.\n */\nexport const getFormatTypes = createSelector(\n\t( state ) => Object.values( state.formatTypes ),\n\t( state ) => [ state.formatTypes ]\n);\n\n/**\n * Returns a format type by name.\n *\n * @param {Object} state Data state.\n * @param {string} name  Format type name.\n *\n * @return {Object?} Format type.\n */\nexport function getFormatType( state, name ) {\n\treturn state.formatTypes[ name ];\n}\n\n/**\n * Gets the format type, if any, that can handle a bare element (without a\n * data-format-type attribute), given the tag name of this element.\n *\n * @param {Object} state              Data state.\n * @param {string} bareElementTagName The tag name of the element to find a\n *                                    format type for.\n * @return {?Object} Format type.\n */\nexport function getFormatTypeForBareElement( state, bareElementTagName ) {\n\treturn find( getFormatTypes( state ), ( { className, tagName } ) => {\n\t\treturn className === null && bareElementTagName === tagName;\n\t} );\n}\n\n/**\n * Gets the format type, if any, that can handle an element, given its classes.\n *\n * @param {Object} state            Data state.\n * @param {string} elementClassName The classes of the element to find a format\n *                                  type for.\n * @return {?Object} Format type.\n */\nexport function getFormatTypeForClassName( state, elementClassName ) {\n\treturn find( getFormatTypes( state ), ( { className } ) => {\n\t\tif ( className === null ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ` ${ elementClassName } `.indexOf( ` ${ className } ` ) >= 0;\n\t} );\n}\n","/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\nimport { createElement } from './create-element';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Creates a path as an array of indices from the given root node to the given\n * node.\n *\n * @param {Node}        node     Node to find the path of.\n * @param {HTMLElement} rootNode Root node to find the path from.\n * @param {Array}       path     Initial path to build on.\n *\n * @return {Array} The path from the root node to the node.\n */\nfunction createPathToNode( node, rootNode, path ) {\n\tconst parentNode = node.parentNode;\n\tlet i = 0;\n\n\twhile ( ( node = node.previousSibling ) ) {\n\t\ti++;\n\t}\n\n\tpath = [ i, ...path ];\n\n\tif ( parentNode !== rootNode ) {\n\t\tpath = createPathToNode( parentNode, rootNode, path );\n\t}\n\n\treturn path;\n}\n\n/**\n * Gets a node given a path (array of indices) from the given node.\n *\n * @param {HTMLElement} node Root node to find the wanted node in.\n * @param {Array}       path Path (indices) to the wanted node.\n *\n * @return {Object} Object with the found node and the remaining offset (if any).\n */\nfunction getNodeByPath( node, path ) {\n\tpath = [ ...path ];\n\n\twhile ( node && path.length > 1 ) {\n\t\tnode = node.childNodes[ path.shift() ];\n\t}\n\n\treturn {\n\t\tnode,\n\t\toffset: path[ 0 ],\n\t};\n}\n\nfunction append( element, child ) {\n\tif ( typeof child === 'string' ) {\n\t\tchild = element.ownerDocument.createTextNode( child );\n\t}\n\n\tconst { type, attributes } = child;\n\n\tif ( type ) {\n\t\tchild = element.ownerDocument.createElement( type );\n\n\t\tfor ( const key in attributes ) {\n\t\t\tchild.setAttribute( key, attributes[ key ] );\n\t\t}\n\t}\n\n\treturn element.appendChild( child );\n}\n\nfunction appendText( node, text ) {\n\tnode.appendData( text );\n}\n\nfunction getLastChild( { lastChild } ) {\n\treturn lastChild;\n}\n\nfunction getParent( { parentNode } ) {\n\treturn parentNode;\n}\n\nfunction isText( node ) {\n\treturn node.nodeType === node.TEXT_NODE;\n}\n\nfunction getText( { nodeValue } ) {\n\treturn nodeValue;\n}\n\nfunction remove( node ) {\n\treturn node.parentNode.removeChild( node );\n}\n\nexport function toDom( {\n\tvalue,\n\tmultilineTag,\n\tprepareEditableTree,\n\tisEditableTree = true,\n\tplaceholder,\n\tdoc = document,\n} ) {\n\tlet startPath = [];\n\tlet endPath = [];\n\n\tif ( prepareEditableTree ) {\n\t\tvalue = {\n\t\t\t...value,\n\t\t\tformats: prepareEditableTree( value ),\n\t\t};\n\t}\n\n\t/**\n\t * Returns a new instance of a DOM tree upon which RichText operations can be\n\t * applied.\n\t *\n\t * Note: The current implementation will return a shared reference, reset on\n\t * each call to `createEmpty`. Therefore, you should not hold a reference to\n\t * the value to operate upon asynchronously, as it may have unexpected results.\n\t *\n\t * @return {Object} RichText tree.\n\t */\n\tconst createEmpty = () => createElement( doc, '' );\n\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tmultilineTag,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t\tonStartIndex( body, pointer ) {\n\t\t\tstartPath = createPathToNode( pointer, body, [\n\t\t\t\tpointer.nodeValue.length,\n\t\t\t] );\n\t\t},\n\t\tonEndIndex( body, pointer ) {\n\t\t\tendPath = createPathToNode( pointer, body, [\n\t\t\t\tpointer.nodeValue.length,\n\t\t\t] );\n\t\t},\n\t\tisEditableTree,\n\t\tplaceholder,\n\t} );\n\n\treturn {\n\t\tbody: tree,\n\t\tselection: { startPath, endPath },\n\t};\n}\n\n/**\n * Create an `Element` tree from a Rich Text value and applies the difference to\n * the `Element` tree contained by `current`. If a `multilineTag` is provided,\n * text separated by two new lines will be wrapped in an `Element` of that type.\n *\n * @param {Object}        $1                       Named arguments.\n * @param {RichTextValue} $1.value                 Value to apply.\n * @param {HTMLElement}   $1.current               The live root node to apply the element tree to.\n * @param {string}        [$1.multilineTag]        Multiline tag.\n * @param {Function}      [$1.prepareEditableTree] Function to filter editorable formats.\n * @param {boolean}       [$1.__unstableDomOnly]   Only apply elements, no selection.\n * @param {string}        [$1.placeholder]         Placeholder text.\n */\nexport function apply( {\n\tvalue,\n\tcurrent,\n\tmultilineTag,\n\tprepareEditableTree,\n\t__unstableDomOnly,\n\tplaceholder,\n} ) {\n\t// Construct a new element tree in memory.\n\tconst { body, selection } = toDom( {\n\t\tvalue,\n\t\tmultilineTag,\n\t\tprepareEditableTree,\n\t\tplaceholder,\n\t\tdoc: current.ownerDocument,\n\t} );\n\n\tapplyValue( body, current );\n\n\tif ( value.start !== undefined && ! __unstableDomOnly ) {\n\t\tapplySelection( selection, current );\n\t}\n}\n\nexport function applyValue( future, current ) {\n\tlet i = 0;\n\tlet futureChild;\n\n\twhile ( ( futureChild = future.firstChild ) ) {\n\t\tconst currentChild = current.childNodes[ i ];\n\n\t\tif ( ! currentChild ) {\n\t\t\tcurrent.appendChild( futureChild );\n\t\t} else if ( ! currentChild.isEqualNode( futureChild ) ) {\n\t\t\tif (\n\t\t\t\tcurrentChild.nodeName !== futureChild.nodeName ||\n\t\t\t\t( currentChild.nodeType === currentChild.TEXT_NODE &&\n\t\t\t\t\tcurrentChild.data !== futureChild.data )\n\t\t\t) {\n\t\t\t\tcurrent.replaceChild( futureChild, currentChild );\n\t\t\t} else {\n\t\t\t\tconst currentAttributes = currentChild.attributes;\n\t\t\t\tconst futureAttributes = futureChild.attributes;\n\n\t\t\t\tif ( currentAttributes ) {\n\t\t\t\t\tlet ii = currentAttributes.length;\n\n\t\t\t\t\t// Reverse loop because `removeAttribute` on `currentChild`\n\t\t\t\t\t// changes `currentAttributes`.\n\t\t\t\t\twhile ( ii-- ) {\n\t\t\t\t\t\tconst { name } = currentAttributes[ ii ];\n\n\t\t\t\t\t\tif ( ! futureChild.getAttribute( name ) ) {\n\t\t\t\t\t\t\tcurrentChild.removeAttribute( name );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( futureAttributes ) {\n\t\t\t\t\tfor ( let ii = 0; ii < futureAttributes.length; ii++ ) {\n\t\t\t\t\t\tconst { name, value } = futureAttributes[ ii ];\n\n\t\t\t\t\t\tif ( currentChild.getAttribute( name ) !== value ) {\n\t\t\t\t\t\t\tcurrentChild.setAttribute( name, value );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tapplyValue( futureChild, currentChild );\n\t\t\t\tfuture.removeChild( futureChild );\n\t\t\t}\n\t\t} else {\n\t\t\tfuture.removeChild( futureChild );\n\t\t}\n\n\t\ti++;\n\t}\n\n\twhile ( current.childNodes[ i ] ) {\n\t\tcurrent.removeChild( current.childNodes[ i ] );\n\t}\n}\n\n/**\n * Returns true if two ranges are equal, or false otherwise. Ranges are\n * considered equal if their start and end occur in the same container and\n * offset.\n *\n * @param {Range} a First range object to test.\n * @param {Range} b First range object to test.\n *\n * @return {boolean} Whether the two ranges are equal.\n */\nfunction isRangeEqual( a, b ) {\n\treturn (\n\t\ta.startContainer === b.startContainer &&\n\t\ta.startOffset === b.startOffset &&\n\t\ta.endContainer === b.endContainer &&\n\t\ta.endOffset === b.endOffset\n\t);\n}\n\nexport function applySelection( { startPath, endPath }, current ) {\n\tconst { node: startContainer, offset: startOffset } = getNodeByPath(\n\t\tcurrent,\n\t\tstartPath\n\t);\n\tconst { node: endContainer, offset: endOffset } = getNodeByPath(\n\t\tcurrent,\n\t\tendPath\n\t);\n\tconst { ownerDocument } = current;\n\tconst { defaultView } = ownerDocument;\n\tconst selection = defaultView.getSelection();\n\tconst range = ownerDocument.createRange();\n\n\trange.setStart( startContainer, startOffset );\n\trange.setEnd( endContainer, endOffset );\n\n\tconst { activeElement } = ownerDocument;\n\n\tif ( selection.rangeCount > 0 ) {\n\t\t// If the to be added range and the live range are the same, there's no\n\t\t// need to remove the live range and add the equivalent range.\n\t\tif ( isRangeEqual( range, selection.getRangeAt( 0 ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tselection.removeAllRanges();\n\t}\n\n\tselection.addRange( range );\n\n\t// This function is not intended to cause a shift in focus. Since the above\n\t// selection manipulations may shift focus, ensure that focus is restored to\n\t// its previous state.\n\tif ( activeElement !== ownerDocument.activeElement ) {\n\t\t// The `instanceof` checks protect against edge cases where the focused\n\t\t// element is not of the interface HTMLElement (does not have a `focus`\n\t\t// or `blur` property).\n\t\t//\n\t\t// See: https://github.com/Microsoft/TypeScript/issues/5901#issuecomment-431649653\n\t\tif ( activeElement instanceof defaultView.HTMLElement ) {\n\t\t\tactiveElement.focus();\n\t\t}\n\t}\n}\n","/**\n * WordPress dependencies\n */\n\nimport {\n\tescapeEditableHTML,\n\tescapeAttribute,\n\tisValidAttributeName,\n} from '@wordpress/escape-html';\n\n/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Create an HTML string from a Rich Text value. If a `multilineTag` is\n * provided, text separated by a line separator will be wrapped in it.\n *\n * @param {Object}        $1                      Named argements.\n * @param {RichTextValue} $1.value                Rich text value.\n * @param {string}        [$1.multilineTag]       Multiline tag.\n * @param {boolean}       [$1.preserveWhiteSpace] Whether or not to use newline\n *                                                characters for line breaks.\n *\n * @return {string} HTML string.\n */\nexport function toHTMLString( { value, multilineTag, preserveWhiteSpace } ) {\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tmultilineTag,\n\t\tpreserveWhiteSpace,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t} );\n\n\treturn createChildrenHTML( tree.children );\n}\n\nfunction createEmpty() {\n\treturn {};\n}\n\nfunction getLastChild( { children } ) {\n\treturn children && children[ children.length - 1 ];\n}\n\nfunction append( parent, object ) {\n\tif ( typeof object === 'string' ) {\n\t\tobject = { text: object };\n\t}\n\n\tobject.parent = parent;\n\tparent.children = parent.children || [];\n\tparent.children.push( object );\n\treturn object;\n}\n\nfunction appendText( object, text ) {\n\tobject.text += text;\n}\n\nfunction getParent( { parent } ) {\n\treturn parent;\n}\n\nfunction isText( { text } ) {\n\treturn typeof text === 'string';\n}\n\nfunction getText( { text } ) {\n\treturn text;\n}\n\nfunction remove( object ) {\n\tconst index = object.parent.children.indexOf( object );\n\n\tif ( index !== -1 ) {\n\t\tobject.parent.children.splice( index, 1 );\n\t}\n\n\treturn object;\n}\n\nfunction createElementHTML( { type, attributes, object, children } ) {\n\tlet attributeString = '';\n\n\tfor ( const key in attributes ) {\n\t\tif ( ! isValidAttributeName( key ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tattributeString += ` ${ key }=\"${ escapeAttribute(\n\t\t\tattributes[ key ]\n\t\t) }\"`;\n\t}\n\n\tif ( object ) {\n\t\treturn `<${ type }${ attributeString }>`;\n\t}\n\n\treturn `<${ type }${ attributeString }>${ createChildrenHTML(\n\t\tchildren\n\t) }</${ type }>`;\n}\n\nfunction createChildrenHTML( children = [] ) {\n\treturn children\n\t\t.map( ( child ) => {\n\t\t\tif ( child.html !== undefined ) {\n\t\t\t\treturn child.html;\n\t\t\t}\n\n\t\t\treturn child.text === undefined\n\t\t\t\t? createElementHTML( child )\n\t\t\t\t: escapeEditableHTML( child.text );\n\t\t} )\n\t\t.join( '' );\n}\n","/**\n * Internal dependencies\n */\n\nimport { getActiveFormats } from './get-active-formats';\nimport { getFormatType } from './get-format-type';\nimport {\n\tLINE_SEPARATOR,\n\tOBJECT_REPLACEMENT_CHARACTER,\n\tZWNBSP,\n} from './special-characters';\n\nfunction restoreOnAttributes( attributes, isEditableTree ) {\n\tif ( isEditableTree ) {\n\t\treturn attributes;\n\t}\n\n\tconst newAttributes = {};\n\n\tfor ( const key in attributes ) {\n\t\tlet newKey = key;\n\t\tif ( key.startsWith( 'data-disable-rich-text-' ) ) {\n\t\t\tnewKey = key.slice( 'data-disable-rich-text-'.length );\n\t\t}\n\n\t\tnewAttributes[ newKey ] = attributes[ key ];\n\t}\n\n\treturn newAttributes;\n}\n\n/**\n * Converts a format object to information that can be used to create an element\n * from (type, attributes and object).\n *\n * @param {Object}  $1                        Named parameters.\n * @param {string}  $1.type                   The format type.\n * @param {Object}  $1.attributes             The format attributes.\n * @param {Object}  $1.unregisteredAttributes The unregistered format\n *                                            attributes.\n * @param {boolean} $1.object                 Whether or not it is an object\n *                                            format.\n * @param {boolean} $1.boundaryClass          Whether or not to apply a boundary\n *                                            class.\n * @param {boolean} $1.isEditableTree\n *\n * @return {Object} Information to be used for element creation.\n */\nfunction fromFormat( {\n\ttype,\n\tattributes,\n\tunregisteredAttributes,\n\tobject,\n\tboundaryClass,\n\tisEditableTree,\n} ) {\n\tconst formatType = getFormatType( type );\n\n\tlet elementAttributes = {};\n\n\tif ( boundaryClass ) {\n\t\telementAttributes[ 'data-rich-text-format-boundary' ] = 'true';\n\t}\n\n\tif ( ! formatType ) {\n\t\tif ( attributes ) {\n\t\t\telementAttributes = { ...attributes, ...elementAttributes };\n\t\t}\n\n\t\treturn {\n\t\t\ttype,\n\t\t\tattributes: restoreOnAttributes(\n\t\t\t\telementAttributes,\n\t\t\t\tisEditableTree\n\t\t\t),\n\t\t\tobject,\n\t\t};\n\t}\n\n\telementAttributes = { ...unregisteredAttributes, ...elementAttributes };\n\n\tfor ( const name in attributes ) {\n\t\tconst key = formatType.attributes\n\t\t\t? formatType.attributes[ name ]\n\t\t\t: false;\n\n\t\tif ( key ) {\n\t\t\telementAttributes[ key ] = attributes[ name ];\n\t\t} else {\n\t\t\telementAttributes[ name ] = attributes[ name ];\n\t\t}\n\t}\n\n\tif ( formatType.className ) {\n\t\tif ( elementAttributes.class ) {\n\t\t\telementAttributes.class = `${ formatType.className } ${ elementAttributes.class }`;\n\t\t} else {\n\t\t\telementAttributes.class = formatType.className;\n\t\t}\n\t}\n\n\treturn {\n\t\ttype: formatType.tagName,\n\t\tobject: formatType.object,\n\t\tattributes: restoreOnAttributes( elementAttributes, isEditableTree ),\n\t};\n}\n\n/**\n * Checks if both arrays of formats up until a certain index are equal.\n *\n * @param {Array}  a     Array of formats to compare.\n * @param {Array}  b     Array of formats to compare.\n * @param {number} index Index to check until.\n */\nfunction isEqualUntil( a, b, index ) {\n\tdo {\n\t\tif ( a[ index ] !== b[ index ] ) {\n\t\t\treturn false;\n\t\t}\n\t} while ( index-- );\n\n\treturn true;\n}\n\nexport function toTree( {\n\tvalue,\n\tmultilineTag,\n\tpreserveWhiteSpace,\n\tcreateEmpty,\n\tappend,\n\tgetLastChild,\n\tgetParent,\n\tisText,\n\tgetText,\n\tremove,\n\tappendText,\n\tonStartIndex,\n\tonEndIndex,\n\tisEditableTree,\n\tplaceholder,\n} ) {\n\tconst { formats, replacements, text, start, end } = value;\n\tconst formatsLength = formats.length + 1;\n\tconst tree = createEmpty();\n\tconst multilineFormat = { type: multilineTag };\n\tconst activeFormats = getActiveFormats( value );\n\tconst deepestActiveFormat = activeFormats[ activeFormats.length - 1 ];\n\n\tlet lastSeparatorFormats;\n\tlet lastCharacterFormats;\n\tlet lastCharacter;\n\n\t// If we're building a multiline tree, start off with a multiline element.\n\tif ( multilineTag ) {\n\t\tappend( append( tree, { type: multilineTag } ), '' );\n\t\tlastCharacterFormats = lastSeparatorFormats = [ multilineFormat ];\n\t} else {\n\t\tappend( tree, '' );\n\t}\n\n\tfor ( let i = 0; i < formatsLength; i++ ) {\n\t\tconst character = text.charAt( i );\n\t\tconst shouldInsertPadding =\n\t\t\tisEditableTree &&\n\t\t\t// Pad the line if the line is empty.\n\t\t\t( ! lastCharacter ||\n\t\t\t\tlastCharacter === LINE_SEPARATOR ||\n\t\t\t\t// Pad the line if the previous character is a line break, otherwise\n\t\t\t\t// the line break won't be visible.\n\t\t\t\tlastCharacter === '\\n' );\n\n\t\tlet characterFormats = formats[ i ];\n\n\t\t// Set multiline tags in queue for building the tree.\n\t\tif ( multilineTag ) {\n\t\t\tif ( character === LINE_SEPARATOR ) {\n\t\t\t\tcharacterFormats = lastSeparatorFormats = (\n\t\t\t\t\treplacements[ i ] || []\n\t\t\t\t).reduce(\n\t\t\t\t\t( accumulator, format ) => {\n\t\t\t\t\t\taccumulator.push( format, multilineFormat );\n\t\t\t\t\t\treturn accumulator;\n\t\t\t\t\t},\n\t\t\t\t\t[ multilineFormat ]\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcharacterFormats = [\n\t\t\t\t\t...lastSeparatorFormats,\n\t\t\t\t\t...( characterFormats || [] ),\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\tlet pointer = getLastChild( tree );\n\n\t\tif ( shouldInsertPadding && character === LINE_SEPARATOR ) {\n\t\t\tlet node = pointer;\n\n\t\t\twhile ( ! isText( node ) ) {\n\t\t\t\tnode = getLastChild( node );\n\t\t\t}\n\n\t\t\tappend( getParent( node ), ZWNBSP );\n\t\t}\n\n\t\t// Set selection for the start of line.\n\t\tif ( lastCharacter === LINE_SEPARATOR ) {\n\t\t\tlet node = pointer;\n\n\t\t\twhile ( ! isText( node ) ) {\n\t\t\t\tnode = getLastChild( node );\n\t\t\t}\n\n\t\t\tif ( onStartIndex && start === i ) {\n\t\t\t\tonStartIndex( tree, node );\n\t\t\t}\n\n\t\t\tif ( onEndIndex && end === i ) {\n\t\t\t\tonEndIndex( tree, node );\n\t\t\t}\n\t\t}\n\n\t\tif ( characterFormats ) {\n\t\t\tcharacterFormats.forEach( ( format, formatIndex ) => {\n\t\t\t\tif (\n\t\t\t\t\tpointer &&\n\t\t\t\t\tlastCharacterFormats &&\n\t\t\t\t\t// Reuse the last element if all formats remain the same.\n\t\t\t\t\tisEqualUntil(\n\t\t\t\t\t\tcharacterFormats,\n\t\t\t\t\t\tlastCharacterFormats,\n\t\t\t\t\t\tformatIndex\n\t\t\t\t\t) &&\n\t\t\t\t\t// Do not reuse the last element if the character is a\n\t\t\t\t\t// line separator.\n\t\t\t\t\t( character !== LINE_SEPARATOR ||\n\t\t\t\t\t\tcharacterFormats.length - 1 !== formatIndex )\n\t\t\t\t) {\n\t\t\t\t\tpointer = getLastChild( pointer );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { type, attributes, unregisteredAttributes } = format;\n\n\t\t\t\tconst boundaryClass =\n\t\t\t\t\tisEditableTree &&\n\t\t\t\t\tcharacter !== LINE_SEPARATOR &&\n\t\t\t\t\tformat === deepestActiveFormat;\n\n\t\t\t\tconst parent = getParent( pointer );\n\t\t\t\tconst newNode = append(\n\t\t\t\t\tparent,\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\tunregisteredAttributes,\n\t\t\t\t\t\tboundaryClass,\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tif ( isText( pointer ) && getText( pointer ).length === 0 ) {\n\t\t\t\t\tremove( pointer );\n\t\t\t\t}\n\n\t\t\t\tpointer = append( newNode, '' );\n\t\t\t} );\n\t\t}\n\n\t\t// No need for further processing if the character is a line separator.\n\t\tif ( character === LINE_SEPARATOR ) {\n\t\t\tlastCharacterFormats = characterFormats;\n\t\t\tlastCharacter = character;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If there is selection at 0, handle it before characters are inserted.\n\t\tif ( i === 0 ) {\n\t\t\tif ( onStartIndex && start === 0 ) {\n\t\t\t\tonStartIndex( tree, pointer );\n\t\t\t}\n\n\t\t\tif ( onEndIndex && end === 0 ) {\n\t\t\t\tonEndIndex( tree, pointer );\n\t\t\t}\n\t\t}\n\n\t\tif ( character === OBJECT_REPLACEMENT_CHARACTER ) {\n\t\t\tif ( ! isEditableTree && replacements[ i ]?.type === 'script' ) {\n\t\t\t\tpointer = append(\n\t\t\t\t\tgetParent( pointer ),\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\ttype: 'script',\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t\tappend( pointer, {\n\t\t\t\t\thtml: decodeURIComponent(\n\t\t\t\t\t\treplacements[ i ].attributes[ 'data-rich-text-script' ]\n\t\t\t\t\t),\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tpointer = append(\n\t\t\t\t\tgetParent( pointer ),\n\t\t\t\t\tfromFormat( {\n\t\t\t\t\t\t...replacements[ i ],\n\t\t\t\t\t\tobject: true,\n\t\t\t\t\t\tisEditableTree,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t}\n\t\t\t// Ensure pointer is text node.\n\t\t\tpointer = append( getParent( pointer ), '' );\n\t\t} else if ( ! preserveWhiteSpace && character === '\\n' ) {\n\t\t\tpointer = append( getParent( pointer ), {\n\t\t\t\ttype: 'br',\n\t\t\t\tattributes: isEditableTree\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t'data-rich-text-line-break': 'true',\n\t\t\t\t\t  }\n\t\t\t\t\t: undefined,\n\t\t\t\tobject: true,\n\t\t\t} );\n\t\t\t// Ensure pointer is text node.\n\t\t\tpointer = append( getParent( pointer ), '' );\n\t\t} else if ( ! isText( pointer ) ) {\n\t\t\tpointer = append( getParent( pointer ), character );\n\t\t} else {\n\t\t\tappendText( pointer, character );\n\t\t}\n\n\t\tif ( onStartIndex && start === i + 1 ) {\n\t\t\tonStartIndex( tree, pointer );\n\t\t}\n\n\t\tif ( onEndIndex && end === i + 1 ) {\n\t\t\tonEndIndex( tree, pointer );\n\t\t}\n\n\t\tif ( shouldInsertPadding && i === text.length ) {\n\t\t\tappend( getParent( pointer ), ZWNBSP );\n\n\t\t\tif ( placeholder && text.length === 0 ) {\n\t\t\t\tappend( getParent( pointer ), {\n\t\t\t\t\ttype: 'span',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t'data-rich-text-placeholder': placeholder,\n\t\t\t\t\t\t// Necessary to prevent the placeholder from catching\n\t\t\t\t\t\t// selection. The placeholder is also not editable after\n\t\t\t\t\t\t// all.\n\t\t\t\t\t\tcontenteditable: 'false',\n\t\t\t\t\t\tstyle:\n\t\t\t\t\t\t\t'pointer-events:none;user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;',\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\tlastCharacterFormats = characterFormats;\n\t\tlastCharacter = character;\n\t}\n\n\treturn tree;\n}\n","/**\n * WordPress dependencies\n */\n\nimport { speak } from '@wordpress/a11y';\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\n\nimport { getActiveFormat } from './get-active-format';\nimport { removeFormat } from './remove-format';\nimport { applyFormat } from './apply-format';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n/** @typedef {import('./create').RichTextFormat} RichTextFormat */\n\n/**\n * Toggles a format object to a Rich Text value at the current selection.\n *\n * @param {RichTextValue}  value  Value to modify.\n * @param {RichTextFormat} format Format to apply or remove.\n *\n * @return {RichTextValue} A new value with the format applied or removed.\n */\nexport function toggleFormat( value, format ) {\n\tif ( getActiveFormat( value, format.type ) ) {\n\t\t// For screen readers, will announce if formatting control is disabled.\n\t\tif ( format.title ) {\n\t\t\t// translators: %s: title of the formatting control\n\t\t\tspeak( sprintf( __( '%s removed.' ), format.title ), 'assertive' );\n\t\t}\n\t\treturn removeFormat( value, format.type );\n\t}\n\t// For screen readers, will announce if formatting control is enabled.\n\tif ( format.title ) {\n\t\t// translators: %s: title of the formatting control\n\t\tspeak( sprintf( __( '%s applied.' ), format.title ), 'assertive' );\n\t}\n\treturn applyFormat( value, format );\n}\n","/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\n\n/** @typedef {import('./register-format-type').RichTextFormatType} RichTextFormatType */\n\n/**\n * Unregisters a format.\n *\n * @param {string} name Format name.\n *\n * @return {RichTextFormatType|undefined} The previous format value, if it has\n *                                        been successfully unregistered;\n *                                        otherwise `undefined`.\n */\nexport function unregisterFormatType( name ) {\n\tconst oldFormat = select( richTextStore ).getFormatType( name );\n\n\tif ( ! oldFormat ) {\n\t\twindow.console.error( `Format ${ name } is not registered.` );\n\t\treturn;\n\t}\n\n\tdispatch( richTextStore ).removeFormatTypes( name );\n\n\treturn oldFormat;\n}\n","/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Efficiently updates all the formats from `start` (including) until `end`\n * (excluding) with the active formats. Mutates `value`.\n *\n * @param {Object}        $1         Named paramentes.\n * @param {RichTextValue} $1.value   Value te update.\n * @param {number}        $1.start   Index to update from.\n * @param {number}        $1.end     Index to update until.\n * @param {Array}         $1.formats Replacement formats.\n *\n * @return {RichTextValue} Mutated value.\n */\nexport function updateFormats( { value, start, end, formats } ) {\n\t// Start and end may be switched in case of delete.\n\tconst min = Math.min( start, end );\n\tconst max = Math.max( start, end );\n\tconst formatsBefore = value.formats[ min - 1 ] || [];\n\tconst formatsAfter = value.formats[ max ] || [];\n\n\t// First, fix the references. If any format right before or after are\n\t// equal, the replacement format should use the same reference.\n\tvalue.activeFormats = formats.map( ( format, index ) => {\n\t\tif ( formatsBefore[ index ] ) {\n\t\t\tif ( isFormatEqual( format, formatsBefore[ index ] ) ) {\n\t\t\t\treturn formatsBefore[ index ];\n\t\t\t}\n\t\t} else if ( formatsAfter[ index ] ) {\n\t\t\tif ( isFormatEqual( format, formatsAfter[ index ] ) ) {\n\t\t\t\treturn formatsAfter[ index ];\n\t\t\t}\n\t\t}\n\n\t\treturn format;\n\t} );\n\n\twhile ( --end >= start ) {\n\t\tif ( value.activeFormats.length > 0 ) {\n\t\t\tvalue.formats[ end ] = value.activeFormats;\n\t\t} else {\n\t\t\tdelete value.formats[ end ];\n\t\t}\n\t}\n\n\treturn value;\n}\n","'use strict';\n\nvar LEAF_KEY, hasWeakMap;\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {Object}\n */\nLEAF_KEY = {};\n\n/**\n * Whether environment supports WeakMap.\n *\n * @type {boolean}\n */\nhasWeakMap = typeof WeakMap !== 'undefined';\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @param {*} value Value to return.\n *\n * @return {Array} Value returned as entry in array.\n */\nfunction arrayOf( value ) {\n\treturn [ value ];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike( value ) {\n\treturn !! value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Object} Cache object.\n */\nfunction createCache() {\n\tvar cache = {\n\t\tclear: function() {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {Array}  a         First array.\n * @param {Array}  b         Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual( a, b, fromIndex ) {\n\tvar i;\n\n\tif ( a.length !== b.length ) {\n\t\treturn false;\n\t}\n\n\tfor ( i = fromIndex; i < a.length; i++ ) {\n\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @param {Function} selector      Selector function.\n * @param {Function} getDependants Dependant getter returning an immutable\n *                                 reference or array of reference used in\n *                                 cache bust consideration.\n *\n * @return {Function} Memoized selector.\n */\nexport default function( selector, getDependants ) {\n\tvar rootCache, getCache;\n\n\t// Use object source as dependant if getter not provided\n\tif ( ! getDependants ) {\n\t\tgetDependants = arrayOf;\n\t}\n\n\t/**\n\t * Returns the root cache. If WeakMap is supported, this is assigned to the\n\t * root WeakMap cache set, otherwise it is a shared instance of the default\n\t * cache object.\n\t *\n\t * @return {(WeakMap|Object)} Root cache object.\n\t */\n\tfunction getRootCache() {\n\t\treturn rootCache;\n\t}\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {Array} dependants Selector dependants.\n\t *\n\t * @return {Object} Cache object.\n\t */\n\tfunction getWeakMapCache( dependants ) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti, dependant, map, cache;\n\n\t\tfor ( i = 0; i < dependants.length; i++ ) {\n\t\t\tdependant = dependants[ i ];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif ( ! isObjectLike( dependant ) ) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif ( caches.has( dependant ) ) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get( dependant );\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set( dependant, map );\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif ( ! caches.has( LEAF_KEY ) ) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set( LEAF_KEY, cache );\n\t\t}\n\n\t\treturn caches.get( LEAF_KEY );\n\t}\n\n\t// Assign cache handler by availability of WeakMap\n\tgetCache = hasWeakMap ? getWeakMapCache : getRootCache;\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = hasWeakMap ? new WeakMap() : createCache();\n\t}\n\n\t// eslint-disable-next-line jsdoc/check-param-names\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {Object} source    Source object for derivation.\n\t * @param {...*}   extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\tfunction callSelector( /* source, ...extraArgs */ ) {\n\t\tvar len = arguments.length,\n\t\t\tcache, node, i, args, dependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tdependants = getDependants.apply( null, args );\n\t\tcache = getCache( dependants );\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type or lack\n\t\t// of WeakMap support), shallow compare against last dependants and, if\n\t\t// references have changed, destroy cache to recalculate result.\n\t\tif ( ! cache.isUniqueByDependants ) {\n\t\t\tif ( cache.lastDependants && ! isShallowEqual( dependants, cache.lastDependants, 0 ) ) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile ( node ) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif ( ! isShallowEqual( node.args, args, 1 ) ) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif ( node !== cache.head ) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\tnode.prev.next = node.next;\n\t\t\t\tif ( node.next ) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\tcache.head.prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = {\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply( null, args ),\n\t\t};\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[ 0 ] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif ( cache.head ) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = getDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn callSelector;\n}\n","module.exports = window[\"lodash\"];","module.exports = window[\"wp\"][\"a11y\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"escapeHtml\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"keycodes\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { store } from './store';\nexport { applyFormat } from './apply-format';\nexport { concat } from './concat';\nexport { create } from './create';\nexport { getActiveFormat } from './get-active-format';\nexport { getActiveObject } from './get-active-object';\nexport { getTextContent } from './get-text-content';\nexport { isListRootSelected as __unstableIsListRootSelected } from './is-list-root-selected';\nexport { isActiveListType as __unstableIsActiveListType } from './is-active-list-type';\nexport { isCollapsed } from './is-collapsed';\nexport { isEmpty, isEmptyLine as __unstableIsEmptyLine } from './is-empty';\nexport { join } from './join';\nexport { registerFormatType } from './register-format-type';\nexport { removeFormat } from './remove-format';\nexport { remove } from './remove';\nexport { replace } from './replace';\nexport { insert } from './insert';\nexport { insertLineSeparator as __unstableInsertLineSeparator } from './insert-line-separator';\nexport { removeLineSeparator as __unstableRemoveLineSeparator } from './remove-line-separator';\nexport { insertObject } from './insert-object';\nexport { slice } from './slice';\nexport { split } from './split';\nexport { toDom as __unstableToDom } from './to-dom';\nexport { toHTMLString } from './to-html-string';\nexport { toggleFormat } from './toggle-format';\nexport { LINE_SEPARATOR as __UNSTABLE_LINE_SEPARATOR } from './special-characters';\nexport { unregisterFormatType } from './unregister-format-type';\nexport { canIndentListItems as __unstableCanIndentListItems } from './can-indent-list-items';\nexport { canOutdentListItems as __unstableCanOutdentListItems } from './can-outdent-list-items';\nexport { indentListItems as __unstableIndentListItems } from './indent-list-items';\nexport { outdentListItems as __unstableOutdentListItems } from './outdent-list-items';\nexport { changeListType as __unstableChangeListType } from './change-list-type';\nexport { createElement as __unstableCreateElement } from './create-element';\n\nexport { useAnchorRef } from './component/use-anchor-ref';\n\nexport {\n\tdefault as __experimentalRichText,\n\tuseRichText as __unstableUseRichText,\n} from './component';\nexport { default as __unstableFormatEdit } from './component/format-edit';\n"],"names":["find","reject","normaliseFormats","replace","array","index","value","slice","applyFormat","format","startIndex","start","endIndex","end","formats","activeFormats","newFormats","startFormat","type","indexOf","position","Infinity","filter","length","splice","getLineIndex","canIndentListItems","lineIndex","undefined","replacements","previousLineIndex","formatsAtLineIndex","formatsAtPreviousLineIndex","canOutdentListItems","startingLineIndex","LINE_SEPARATOR","getParentLineIndex","changeListType","newFormat","text","startLineFormats","endLineFormats","newReplacements","startCount","endCount","changed","map","i","getActiveFormat","getActiveObject","FormatEdit","formatTypes","onChange","onFocus","forwardedRef","settings","name","edit","Edit","activeFormat","isActive","activeObject","isObjectActive","attributes","useRef","useLayoutEffect","useReducer","useMergeRefs","useRefEffect","useRegistry","create","apply","toHTMLString","useDefaultStyle","useBoundaryStyle","useCopyHandler","useFormatBoundaries","useSelectObject","useIndentListItemOnSpace","useInputAndSelection","useDelete","useSpace","useRichText","selectionStart","selectionEnd","placeholder","preserveWhiteSpace","onSelectionChange","__unstableMultilineTag","multilineTag","__unstableDisableFormats","disableFormats","__unstableIsSelected","isSelected","__unstableDependencies","__unstableAfterParse","__unstableBeforeSerialize","__unstableAddInvisibleFormats","registry","forceRender","ref","createRecord","ownerDocument","defaultView","current","selection","getSelection","range","rangeCount","getRangeAt","element","multilineWrapperTags","__unstableIsEditableTree","applyRecord","newRecord","domOnly","prepareEditableTree","__unstableDomOnly","_value","record","setRecordFromProps","html","Array","hadSelectionUpdate","hasRelevantInitFormat","handleChangesUponInit","handleChange","batch","__unstableFormats","__unstableText","applyFromProps","didMount","activeElement","focus","mergedRefs","__experimentalRichText","useMemo","useAnchorRef","tagName","className","startContainer","nextElementSibling","nodeType","ELEMENT_NODE","parentNode","closest","useEffect","boundarySelector","querySelector","computedStyle","getComputedStyle","newColor","color","selector","rule","style","globalStyleId","globalStyle","getElementById","createElement","id","head","appendChild","innerHTML","isCollapsed","getTextContent","props","propsRef","onCopy","event","contains","selectedRecord","plainText","clipboardData","setData","preventDefault","addEventListener","removeEventListener","useCallback","whiteSpace","minWidth","BACKSPACE","DELETE","remove","removeLineSeparator","isEmptyLine","onKeyDown","keyCode","defaultPrevented","currentValue","isReverse","newValue","LEFT","RIGHT","EMPTY_ACTIVE_FORMATS","shiftKey","altKey","metaKey","ctrlKey","currentActiveFormats","collapsed","direction","reverseKey","formatsBefore","formatsAfter","destination","isIncreasing","every","newActiveFormatsLength","_newActiveFormats","origin","source","newActiveFormats","SPACE","indentListItems","characterBefore","toLowerCase","getActiveFormats","updateFormats","INSERTION_INPUT_TYPES_TO_IGNORE","Set","fixPlaceholderSelection","anchorNode","anchorOffset","targetNode","childNodes","getAttribute","collapseToStart","isComposing","rafId","onInput","inputType","has","oldActiveFormats","change","handleSelectionChange","contentEditable","focusNode","offset","oldRecord","onCompositionStart","onCompositionEnd","parentElement","requestAnimationFrame","cancelAnimationFrame","onClick","target","textContent","createRange","selectNode","removeAllRanges","addRange","key","execCommand","mergePair","a","b","concat","values","reduce","implementation","body","createHTMLDocument","select","store","richTextStore","OBJECT_REPLACEMENT_CHARACTER","ZWNBSP","createEmptyValue","toFormat","formatType","class","getFormatTypeForClassName","trim","getFormatTypeForBareElement","__experimentalCreatePrepareEditableTree","__experimentalCreateOnChangeEditableValue","registeredAttributes","unregisteredAttributes","_attributes","__unstableFilterAttributeValue","isEditableTree","document","createFromElement","createFromMultilineElement","accumulateSelection","accumulator","node","startOffset","endContainer","endOffset","currentLength","TEXT_NODE","filterRange","nodeValue","collapseWhiteSpace","string","removeReservedCharacters","RegExp","currentWrapperTags","hasChildNodes","nodeName","encodeURIComponent","getAttributes","mergeFormats","from","children","hasAttributes","safeName","test","getFormatType","getLastChildIndex","lineFormats","childIndex","formatsAtIndex","startFormats","getTargetLevelLineIndex","rootFormat","targetLevelLineIndex","targetFormats","lastformat","insert","insertLineSeparator","beforeText","previousLineSeparatorIndex","lastIndexOf","previousLineSeparatorFormats","valueToInsert","insertObject","formatToInsert","isActiveListType","rootType","replacement","lastFormat","isEmpty","isFormatEqual","format1","format2","attributes1","attributes2","keys1","Object","keys","keys2","isListRootSelected","join","separator","accumlator","forEach","formatsAtPreviousIndex","newFormatsAtIndex","formatIndex","previousFormat","outdentListItems","parentFormats","endingLineIndex","lastChildIndex","currentFormats","dispatch","registerFormatType","window","console","error","formatTypeForBareElement","formatTypeForClassName","title","keywords","addFormatTypes","removeFormat","filterFormats","backward","removeStart","removeEnd","pattern","match","rest","newText","fill","split","splitAtSelection","arguments","nextStart","substring","before","after","castArray","removeFormatTypes","names","createReduxStore","register","reducer","selectors","actions","STORE_NAME","keyBy","omit","combineReducers","state","action","createSelector","getFormatTypes","bareElementTagName","elementClassName","toTree","createPathToNode","rootNode","path","previousSibling","getNodeByPath","shift","append","child","createTextNode","setAttribute","appendText","appendData","getLastChild","lastChild","getParent","isText","getText","removeChild","toDom","doc","startPath","endPath","createEmpty","tree","onStartIndex","pointer","onEndIndex","applyValue","applySelection","future","futureChild","firstChild","currentChild","isEqualNode","data","replaceChild","currentAttributes","futureAttributes","ii","removeAttribute","isRangeEqual","setStart","setEnd","HTMLElement","escapeEditableHTML","escapeAttribute","isValidAttributeName","createChildrenHTML","parent","object","push","createElementHTML","attributeString","restoreOnAttributes","newAttributes","newKey","startsWith","fromFormat","boundaryClass","elementAttributes","isEqualUntil","formatsLength","multilineFormat","deepestActiveFormat","lastSeparatorFormats","lastCharacterFormats","lastCharacter","character","charAt","shouldInsertPadding","characterFormats","newNode","decodeURIComponent","contenteditable","speak","__","sprintf","toggleFormat","unregisterFormatType","oldFormat","min","Math","max","__unstableIsListRootSelected","__unstableIsActiveListType","__unstableIsEmptyLine","__unstableInsertLineSeparator","__unstableRemoveLineSeparator","__unstableToDom","__UNSTABLE_LINE_SEPARATOR","__unstableCanIndentListItems","__unstableCanOutdentListItems","__unstableIndentListItems","__unstableOutdentListItems","__unstableChangeListType","__unstableCreateElement","default","__unstableUseRichText","__unstableFormatEdit"],"sourceRoot":""}