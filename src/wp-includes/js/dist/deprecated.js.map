{"version":3,"file":"deprecated.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAe,IAAf,CAAf;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASC,UAAT,CAAqBC,OAArB,EAA6C;AAAA,MAAfC,OAAe,uEAAL,EAAK;AAC3D,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,WAAlB;AAA+BC,IAAAA,MAA/B;AAAuCC,IAAAA,IAAvC;AAA6CC,IAAAA;AAA7C,MAAsDN,OAA5D;AAEA,QAAMO,aAAa,GAAGH,MAAM,GAAI,SAASA,MAAQ,EAArB,GAAyB,EAArD;AACA,QAAMI,YAAY,GAAGP,KAAK,GAAI,kBAAkBA,KAAO,EAA7B,GAAiC,EAA3D;AACA,QAAMQ,cAAc,GAAGP,OAAO,GAC1B,uBAAuBK,aAAe,eAAeL,OAAS,EADpC,GAE3B,EAFH;AAGA,QAAMQ,iBAAiB,GAAGP,WAAW,GACjC,eAAeA,WAAa,WADK,GAElC,EAFH;AAGA,QAAMQ,WAAW,GAAGN,IAAI,GAAI,SAASA,IAAM,EAAnB,GAAuB,EAA/C;AACA,QAAMO,WAAW,GAAGN,IAAI,GAAI,UAAUA,IAAM,EAApB,GAAwB,EAAhD;AACA,QAAMO,OAAO,GAAI,GAAGd,OAAS,iBAAiBS,YAAc,GAAGC,cAAgB,IAAIC,iBAAmB,GAAGC,WAAa,GAAGC,WAAa,EAAtI,CAb2D,CAe3D;;AACA,MAAKC,OAAO,IAAIlB,MAAhB,EAAyB;AACxB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCD,EAAAA,0DAAQ,CAAE,YAAF,EAAgBK,OAAhB,EAAyBC,OAAzB,EAAkCa,OAAlC,CAAR,CAjC2D,CAmC3D;;AACAC,EAAAA,OAAO,CAACC,IAAR,CAAcF,OAAd;AAEAlB,EAAAA,MAAM,CAAEkB,OAAF,CAAN,GAAoB,IAApB;AACA;AAED","sources":["webpack://wp/external window [\"wp\",\"hooks\"]","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/./node_modules/@wordpress/deprecated/build-module/@wordpress/deprecated/src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"hooks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { doAction } from '@wordpress/hooks';\n\n/**\n * Object map tracking messages which have been logged, for use in ensuring a\n * message is only logged once.\n *\n * @type {Record<string, true | undefined>}\n */\nexport const logged = Object.create( null );\n\n/**\n * Logs a message to notify developers about a deprecated feature.\n *\n * @param {string} feature               Name of the deprecated feature.\n * @param {Object} [options]             Personalisation options\n * @param {string} [options.since]       Version in which the feature was deprecated.\n * @param {string} [options.version]     Version in which the feature will be removed.\n * @param {string} [options.alternative] Feature to use instead\n * @param {string} [options.plugin]      Plugin name if it's a plugin feature\n * @param {string} [options.link]        Link to documentation\n * @param {string} [options.hint]        Additional message to help transition away from the deprecated feature.\n *\n * @example\n * ```js\n * import deprecated from '@wordpress/deprecated';\n *\n * deprecated( 'Eating meat', {\n * \tsince: '2019.01.01'\n * \tversion: '2020.01.01',\n * \talternative: 'vegetables',\n * \tplugin: 'the earth',\n * \thint: 'You may find it beneficial to transition gradually.',\n * } );\n *\n * // Logs: 'Eating meat is deprecated since version 2019.01.01 and will be removed from the earth in version 2020.01.01. Please use vegetables instead. Note: You may find it beneficial to transition gradually.'\n * ```\n */\nexport default function deprecated( feature, options = {} ) {\n\tconst { since, version, alternative, plugin, link, hint } = options;\n\n\tconst pluginMessage = plugin ? ` from ${ plugin }` : '';\n\tconst sinceMessage = since ? ` since version ${ since }` : '';\n\tconst versionMessage = version\n\t\t? ` and will be removed${ pluginMessage } in version ${ version }`\n\t\t: '';\n\tconst useInsteadMessage = alternative\n\t\t? ` Please use ${ alternative } instead.`\n\t\t: '';\n\tconst linkMessage = link ? ` See: ${ link }` : '';\n\tconst hintMessage = hint ? ` Note: ${ hint }` : '';\n\tconst message = `${ feature } is deprecated${ sinceMessage }${ versionMessage }.${ useInsteadMessage }${ linkMessage }${ hintMessage }`;\n\n\t// Skip if already logged.\n\tif ( message in logged ) {\n\t\treturn;\n\t}\n\n\t/**\n\t * Fires whenever a deprecated feature is encountered\n\t *\n\t * @param {string}  feature             Name of the deprecated feature.\n\t * @param {?Object} options             Personalisation options\n\t * @param {string}  options.since       Version in which the feature was deprecated.\n\t * @param {?string} options.version     Version in which the feature will be removed.\n\t * @param {?string} options.alternative Feature to use instead\n\t * @param {?string} options.plugin      Plugin name if it's a plugin feature\n\t * @param {?string} options.link        Link to documentation\n\t * @param {?string} options.hint        Additional message to help transition away from the deprecated feature.\n\t * @param {?string} message             Message sent to console.warn\n\t */\n\tdoAction( 'deprecated', feature, options, message );\n\n\t// eslint-disable-next-line no-console\n\tconsole.warn( message );\n\n\tlogged[ message ] = true;\n}\n\n/** @typedef {import('utility-types').NonUndefined<Parameters<typeof deprecated>[1]>} DeprecatedOptions */\n"],"names":["doAction","logged","Object","create","deprecated","feature","options","since","version","alternative","plugin","link","hint","pluginMessage","sinceMessage","versionMessage","useInsteadMessage","linkMessage","hintMessage","message","console","warn"],"sourceRoot":""}