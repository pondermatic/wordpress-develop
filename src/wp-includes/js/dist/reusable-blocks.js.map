{"version":3,"file":"reusable-blocks.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA,MAAME,MAAM,GACX,kEAAC,sDAAD;AAAK,OAAK,EAAC,4BAAX;AAAwC,SAAO,EAAC;AAAhD,GACC,kEAAC,uDAAD;AAAM,GAAC,EAAC;AAAR,EADD,CADD;AAMA,+DAAeA,MAAf;;;;;;;;;;;;;;;;ACXA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;;AAEA,SAASE,uBAAT,OAAgE;AAAA,MAA9B;AAAEM,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA8B;AAC/D,SACC,kIACC,kEAAC,sEAAD;AACC,aAAS,EAAGD,SADb;AAEC,gBAAY,EAAGC;AAFhB,IADD,EAKGD,SAAS,CAACE,MAAV,KAAqB,CAArB,IACD,kEAAC,sEAAD;AAA4B,YAAQ,EAAGF,SAAS,CAAE,CAAF;AAAhD,IANF,CADD;AAWA;;AAED,+DAAeL,2DAAU,CAAIQ,MAAF,IAAc;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAgCD,MAAM,CAAEN,0DAAF,CAA5C;AACA,SAAO;AACNG,IAAAA,SAAS,EAAEI,yBAAyB;AAD9B,GAAP;AAGA,CALwB,CAAV,CAKVV,uBALU,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AAIA;AACA;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASI,0BAAT,OAGX;AAAA,MAHgD;AACnDE,IAAAA,SADmD;AAEnDC,IAAAA;AAFmD,GAGhD;AACH,QAAM,CAAEoB,WAAF,EAAeC,cAAf,IAAkCb,4DAAQ,CAAE,KAAF,CAAhD;AACA,QAAM,CAAEc,KAAF,EAASC,QAAT,IAAsBf,4DAAQ,CAAE,EAAF,CAApC;AACA,QAAMgB,UAAU,GAAGR,0DAAS,CACzBd,MAAF,IAAc;AAAA;;AACb,UAAM;AAAEuB,MAAAA;AAAF,QAAcvB,MAAM,CAAEiB,uDAAF,CAA1B;AACA,UAAM;AAAEO,MAAAA,mBAAF;AAAuBC,MAAAA;AAAvB,QAA8CzB,MAAM,CACzDN,0DADyD,CAA1D;AAIA,UAAMgC,MAAM,2BAAGF,mBAAmB,CAAE3B,SAAF,CAAtB,uEAAuC,EAAnD;AAEA,UAAM8B,UAAU,GACfD,MAAM,CAAC3B,MAAP,KAAkB,CAAlB,IACA2B,MAAM,CAAE,CAAF,CADN,IAEAvB,kEAAe,CAAEuB,MAAM,CAAE,CAAF,CAAR,CAFf,IAGA,CAAC,CAAE1B,MAAM,CAAEiB,uDAAF,CAAN,CAAoBW,eAApB,CACF,UADE,EAEF,UAFE,EAGFF,MAAM,CAAE,CAAF,CAAN,CAAYG,UAAZ,CAAuBC,GAHrB,CAJJ;;AAUA,UAAMC,WAAW,GAChB;AACA,KAAEJ,UAAF,IACA;AACAF,IAAAA,kBAAkB,CAAE,YAAF,EAAgB3B,YAAhB,CAFlB,IAGA4B,MAAM,CAACM,KAAP,CACGC,KAAF,IACC;AACA,KAAC,CAAEA,KAAH,IACA;AACAA,IAAAA,KAAK,CAACC,OAFN,IAGA;AACAhC,IAAAA,kEAAe,CAAE+B,KAAK,CAACE,IAAR,EAAc,UAAd,EAA0B,IAA1B,CAPjB,CAHA,IAYA;AACA,KAAC,CAAEZ,OAAO,CAAE,QAAF,EAAY,QAAZ,CAfX;;AAiBA,WAAOQ,WAAP;AACA,GArC0B,EAsC3B,CAAElC,SAAF,CAtC2B,CAA5B;AAyCA,QAAM;AACLuC,IAAAA,qCAAqC,EAAEC;AADlC,MAEFxB,4DAAW,CAAEpB,yCAAF,CAFf;AAIA,QAAM;AAAE6C,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAA6C1B,4DAAW,CAC7DG,qDAD6D,CAA9D;AAGA,QAAMwB,SAAS,GAAGnC,+DAAW,CAC5B,gBAAiBoC,kBAAjB,EAAsC;AACrC,QAAI;AACH,YAAMJ,uBAAuB,CAAExC,SAAF,EAAa4C,kBAAb,CAA7B;AACAH,MAAAA,mBAAmB,CAAEvB,mDAAE,CAAE,yBAAF,CAAJ,EAAmC;AACrD2B,QAAAA,IAAI,EAAE;AAD+C,OAAnC,CAAnB;AAGA,KALD,CAKE,OAAQC,KAAR,EAAgB;AACjBJ,MAAAA,iBAAiB,CAAEI,KAAK,CAACC,OAAR,EAAiB;AACjCF,QAAAA,IAAI,EAAE;AAD2B,OAAjB,CAAjB;AAGA;AACD,GAZ2B,EAa5B,CAAE7C,SAAF,CAb4B,CAA7B;;AAgBA,MAAK,CAAEyB,UAAP,EAAoB;AACnB,WAAO,IAAP;AACA;;AAED,SACC,kEAAC,8EAAD,QACG;AAAA,QAAE;AAAEuB,MAAAA;AAAF,KAAF;AAAA,WACD,kIACC,kEAAC,2DAAD;AACC,UAAI,EAAGxD,wDADR;AAEC,aAAO,EAAG,MAAM;AACf8B,QAAAA,cAAc,CAAE,IAAF,CAAd;AACA;AAJF,OAMGJ,mDAAE,CAAE,wBAAF,CANL,CADD,EASGG,WAAW,IACZ,kEAAC,wDAAD;AACC,WAAK,EAAGH,mDAAE,CAAE,uBAAF,CADX;AAEC,gBAAU,EAAGA,mDAAE,CAAE,OAAF,CAFhB;AAGC,oBAAc,EAAG,MAAM;AACtBI,QAAAA,cAAc,CAAE,KAAF,CAAd;AACAE,QAAAA,QAAQ,CAAE,EAAF,CAAR;AACA,OANF;AAOC,sBAAgB,EAAC;AAPlB,OASC;AACC,cAAQ,EAAKyB,KAAF,IAAa;AACvBA,QAAAA,KAAK,CAACC,cAAN;AACAP,QAAAA,SAAS,CAAEpB,KAAF,CAAT;AACAD,QAAAA,cAAc,CAAE,KAAF,CAAd;AACAE,QAAAA,QAAQ,CAAE,EAAF,CAAR;AACAwB,QAAAA,OAAO;AACP;AAPF,OASC,kEAAC,8DAAD;AACC,WAAK,EAAG9B,mDAAE,CAAE,MAAF,CADX;AAEC,WAAK,EAAGK,KAFT;AAGC,cAAQ,EAAGC;AAHZ,MATD,EAcC,kEAAC,uDAAD;AACC,eAAS,EAAC,mDADX;AAEC,aAAO,EAAC;AAFT,OAIC,kEAAC,2DAAD,QACC,kEAAC,yDAAD;AACC,aAAO,EAAC,UADT;AAEC,aAAO,EAAG,MAAM;AACfF,QAAAA,cAAc,CAAE,KAAF,CAAd;AACAE,QAAAA,QAAQ,CAAE,EAAF,CAAR;AACA;AALF,OAOGN,mDAAE,CAAE,QAAF,CAPL,CADD,CAJD,EAeC,kEAAC,2DAAD,QACC,kEAAC,yDAAD;AAAQ,aAAO,EAAC,SAAhB;AAA0B,UAAI,EAAC;AAA/B,OACGA,mDAAE,CAAE,MAAF,CADL,CADD,CAfD,CAdD,CATD,CAVF,CADC;AAAA,GADH,CADD;AAgEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9KD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;;AACA;;AAEA,SAASnB,0BAAT,OAAoD;AAAA,MAAf;AAAEsD,IAAAA;AAAF,GAAe;AACnD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BtC,0DAAS,CACvCd,MAAF,IAAc;AACb,UAAM;AAAEqD,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA+BtD,MAAM,CAAEN,0DAAF,CAA3C;AACA,UAAM;AAAE6B,MAAAA;AAAF,QAAcvB,MAAM,CAAEiB,uDAAF,CAA1B;AACA,UAAMsC,aAAa,GAAGF,QAAQ,CAAEH,QAAF,CAA9B;AAEA,WAAO;AACNC,MAAAA,SAAS,EAAEG,cAAc,CAAEJ,QAAF,CADnB;AAENE,MAAAA,SAAS,EACR,CAAC,CAAEG,aAAH,IACApD,kEAAe,CAAEoD,aAAF,CADf,IAEA,CAAC,CAAEhC,OAAO,CACT,QADS,EAET,QAFS,EAGTgC,aAAa,CAAC1B,UAAd,CAAyBC,GAHhB;AALL,KAAP;AAWA,GAjBwC,EAkBzC,CAAEoB,QAAF,CAlByC,CAA1C;AAqBA,QAAM;AACLM,IAAAA,kCAAkC,EAAEC;AAD/B,MAEF5C,4DAAW,CAAEoC,yCAAF,CAFf;;AAIA,MAAK,CAAEG,SAAP,EAAmB;AAClB,WAAO,IAAP;AACA;;AAED,SACC,kEAAC,8EAAD,QACC,kEAAC,2DAAD;AACC,QAAI,EAAGJ,4DAAY,CAAE,UAAF,EAAc;AAAEU,MAAAA,SAAS,EAAE;AAAb,KAAd;AADpB,KAGG3C,mDAAE,CAAE,wBAAF,CAHL,CADD,EAMGoC,SAAS,IACV,kEAAC,2DAAD;AAAU,WAAO,EAAG,MAAMM,oBAAoB,CAAEP,QAAF;AAA9C,KACGnC,mDAAE,CAAE,2BAAF,CADL,CAPF,CADD;AAcA;;AAED,+DAAenB,0BAAf;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;;AACO,MAAM4D,kCAAkC,GAAKN,QAAF,IAAgB,QAE3D;AAAA,MAF6D;AACnEa,IAAAA;AADmE,GAE7D;AACN,QAAMC,QAAQ,GAAGD,QAAQ,CAAC/D,MAAT,CAAiBN,0DAAjB,EAAoC2D,QAApC,CAA8CH,QAA9C,CAAjB;AACA,QAAMK,aAAa,GAAGQ,QAAQ,CAC5B/D,MADoB,CACZ,MADY,EAEpBiE,qBAFoB,CAGpB,UAHoB,EAIpB,UAJoB,EAKpBD,QAAQ,CAACnC,UAAT,CAAoBC,GALA,CAAtB;AAQA,QAAMoC,SAAS,GAAGL,wDAAK,CACtBF,kDAAU,CAAEJ,aAAa,CAACY,OAAhB,CAAV,GACGZ,aAAa,CAACY,OAAd,CAAuBZ,aAAvB,CADH,GAEGA,aAAa,CAACY,OAHK,CAAvB;AAKAJ,EAAAA,QAAQ,CACNK,QADF,CACY1E,0DADZ,EAEE2E,aAFF,CAEiBL,QAAQ,CAACd,QAF1B,EAEoCgB,SAFpC;AAGA,CApBM;AAsBP;AACA;AACA;AACA;AACA;AACA;;AACO,MAAM9B,qCAAqC,GAAG,CACpDvC,SADoD,EAEpDuB,KAFoD,KAGhD,eAAoC;AAAA,MAA5B;AAAE2C,IAAAA,QAAF;AAAYK,IAAAA;AAAZ,GAA4B;AACxC,QAAMb,aAAa,GAAG;AACrBnC,IAAAA,KAAK,EAAEA,KAAK,IAAIL,mDAAE,CAAE,yBAAF,CADG;AAErBoD,IAAAA,OAAO,EAAEL,4DAAS,CACjBC,QAAQ,CAAC/D,MAAT,CAAiBN,0DAAjB,EAAoC8B,mBAApC,CAAyD3B,SAAzD,CADiB,CAFG;AAKrByE,IAAAA,MAAM,EAAE;AALa,GAAtB;AAQA,QAAMC,aAAa,GAAG,MAAMR,QAAQ,CAClCK,QAD0B,CAChB,MADgB,EAE1BI,gBAF0B,CAER,UAFQ,EAEI,UAFJ,EAEgBjB,aAFhB,CAA5B;AAIA,QAAMkB,QAAQ,GAAGb,8DAAW,CAAE,YAAF,EAAgB;AAC3C9B,IAAAA,GAAG,EAAEyC,aAAa,CAACG;AADwB,GAAhB,CAA5B;AAGAX,EAAAA,QAAQ,CAACK,QAAT,CAAmB1E,0DAAnB,EAAsC2E,aAAtC,CAAqDxE,SAArD,EAAgE4E,QAAhE;;AACAL,EAAAA,QAAQ,CAACO,qCAAT,CAAgDF,QAAQ,CAACvB,QAAzD,EAAmE,IAAnE;AACA,CArBM;AAuBP;AACA;AACA;AACA;AACA;;AACO,MAAM0B,iCAAiC,GAAKF,EAAF,IAAU,eAEpD;AAAA,MAF4D;AAClEX,IAAAA;AADkE,GAE5D;AACN,QAAMR,aAAa,GAAGQ,QAAQ,CAC5B/D,MADoB,CACZ,MADY,EAEpBiE,qBAFoB,CAEG,UAFH,EAEe,UAFf,EAE2BS,EAF3B,CAAtB,CADM,CAKN;;AACA,MAAK,CAAEnB,aAAP,EAAuB;AACtB;AACA,GARK,CAUN;;;AACA,QAAMsB,SAAS,GAAGd,QAAQ,CAAC/D,MAAT,CAAiBN,0DAAjB,EAAoCoF,SAApC,EAAlB;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,MAAV,CACtB/C,KAAF,IAAa9B,kEAAe,CAAE8B,KAAF,CAAf,IAA4BA,KAAK,CAACJ,UAAN,CAAiBC,GAAjB,KAAyB4C,EAD1C,CAAzB;AAGA,QAAMO,wBAAwB,GAAGF,gBAAgB,CAACG,GAAjB,CAC9BjD,KAAF,IAAaA,KAAK,CAACiB,QADa,CAAjC,CAfM,CAmBN;;AACA,MAAK+B,wBAAwB,CAAClF,MAA9B,EAAuC;AACtCgE,IAAAA,QAAQ,CACNK,QADF,CACY1E,0DADZ,EAEEyF,YAFF,CAEgBF,wBAFhB;AAGA;;AAED,QAAMlB,QAAQ,CACZK,QADI,CACM,MADN,EAEJgB,kBAFI,CAEgB,UAFhB,EAE4B,UAF5B,EAEwCV,EAFxC,CAAN;AAGA,CA/BM;AAiCP;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,qCAAT,CAAgDzB,QAAhD,EAA0DmC,SAA1D,EAAsE;AAC5E,SAAO;AACN3C,IAAAA,IAAI,EAAE,4BADA;AAENQ,IAAAA,QAFM;AAGNmC,IAAAA;AAHM,GAAP;AAKA;;;;;;;;;;;;;;;;;;;;AC5HD;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAEA,MAAMM,UAAU,GAAG,sBAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMlG,KAAK,GAAG6F,iEAAgB,CAAEK,UAAF,EAAc;AAClDH,EAAAA,OADkD;AAElDC,EAAAA,OAFkD;AAGlDC,EAAAA,SAASA,yCAAAA;AAHyC,CAAd,CAA9B;AAMPH,yDAAQ,CAAE9F,KAAF,CAAR;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AAEO,SAASoG,sBAAT,GAAsD;AAAA,MAArBC,KAAqB,uEAAb,EAAa;AAAA,MAATC,MAAS;;AAC5D,MAAK,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAErD,IAAR,MAAiB,4BAAtB,EAAqD;AACpD,WAAO,EACN,GAAGoD,KADG;AAEN,OAAEC,MAAM,CAAC7C,QAAT,GAAqB6C,MAAM,CAACV;AAFtB,KAAP;AAIA;;AAED,SAAOS,KAAP;AACA;AAED,+DAAeF,gEAAe,CAAE;AAC/BC,EAAAA;AAD+B,CAAF,CAA9B;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,oCAAT,CAA+CF,KAA/C,EAAsD5C,QAAtD,EAAiE;AACvE,SAAO4C,KAAK,CAACD,sBAAN,CAA8B3C,QAA9B,CAAP;AACA;;;;;;;;;;;ACTD;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNA;AACA","sources":["webpack://wp/./node_modules/@wordpress/icons/build-module/library/@wordpress/icons/src/library/symbol.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/components/@wordpress/reusable-blocks/src/components/index.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/components/reusable-blocks-menu-items/@wordpress/reusable-blocks/src/components/reusable-blocks-menu-items/index.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/components/reusable-blocks-menu-items/@wordpress/reusable-blocks/src/components/reusable-blocks-menu-items/reusable-block-convert-button.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/components/reusable-blocks-menu-items/@wordpress/reusable-blocks/src/components/reusable-blocks-menu-items/reusable-blocks-manage-button.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/store/@wordpress/reusable-blocks/src/store/actions.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/store/@wordpress/reusable-blocks/src/store/index.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/store/@wordpress/reusable-blocks/src/store/reducer.js","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/store/@wordpress/reusable-blocks/src/store/selectors.js","webpack://wp/external window \"lodash\"","webpack://wp/external window [\"wp\",\"blockEditor\"]","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"components\"]","webpack://wp/external window [\"wp\",\"coreData\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"notices\"]","webpack://wp/external window [\"wp\",\"primitives\"]","webpack://wp/external window [\"wp\",\"url\"]","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/./node_modules/@wordpress/reusable-blocks/build-module/@wordpress/reusable-blocks/src/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst symbol = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M21.3 10.8l-5.6-5.6c-.7-.7-1.8-.7-2.5 0l-5.6 5.6c-.7.7-.7 1.8 0 2.5l5.6 5.6c.3.3.8.5 1.2.5s.9-.2 1.2-.5l5.6-5.6c.8-.7.8-1.9.1-2.5zm-1 1.4l-5.6 5.6c-.1.1-.3.1-.4 0l-5.6-5.6c-.1-.1-.1-.3 0-.4l5.6-5.6s.1-.1.2-.1.1 0 .2.1l5.6 5.6c.1.1.1.3 0 .4zm-16.6-.4L10 5.5l-1-1-6.3 6.3c-.7.7-.7 1.8 0 2.5L9 19.5l1.1-1.1-6.3-6.3c-.2 0-.2-.2-.1-.3z\" />\n\t</SVG>\n);\n\nexport default symbol;\n","export { default as ReusableBlocksMenuItems } from './reusable-blocks-menu-items';\n","/**\n * WordPress dependencies\n */\nimport { withSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport ReusableBlockConvertButton from './reusable-block-convert-button';\nimport ReusableBlocksManageButton from './reusable-blocks-manage-button';\n\nfunction ReusableBlocksMenuItems( { clientIds, rootClientId } ) {\n\treturn (\n\t\t<>\n\t\t\t<ReusableBlockConvertButton\n\t\t\t\tclientIds={ clientIds }\n\t\t\t\trootClientId={ rootClientId }\n\t\t\t/>\n\t\t\t{ clientIds.length === 1 && (\n\t\t\t\t<ReusableBlocksManageButton clientId={ clientIds[ 0 ] } />\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default withSelect( ( select ) => {\n\tconst { getSelectedBlockClientIds } = select( blockEditorStore );\n\treturn {\n\t\tclientIds: getSelectedBlockClientIds(),\n\t};\n} )( ReusableBlocksMenuItems );\n","/**\n * WordPress dependencies\n */\nimport { hasBlockSupport, isReusableBlock } from '@wordpress/blocks';\nimport {\n\tBlockSettingsMenuControls,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useCallback, useState } from '@wordpress/element';\nimport {\n\tMenuItem,\n\tModal,\n\tButton,\n\tTextControl,\n\tFlex,\n\tFlexItem,\n} from '@wordpress/components';\nimport { symbol } from '@wordpress/icons';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store } from '../../store';\n\n/**\n * Menu control to convert block(s) to reusable block.\n *\n * @param {Object}   props              Component props.\n * @param {string[]} props.clientIds    Client ids of selected blocks.\n * @param {string}   props.rootClientId ID of the currently selected top-level block.\n * @return {import('@wordpress/element').WPComponent} The menu control or null.\n */\nexport default function ReusableBlockConvertButton( {\n\tclientIds,\n\trootClientId,\n} ) {\n\tconst [ isModalOpen, setIsModalOpen ] = useState( false );\n\tconst [ title, setTitle ] = useState( '' );\n\tconst canConvert = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canUser } = select( coreStore );\n\t\t\tconst { getBlocksByClientId, canInsertBlockType } = select(\n\t\t\t\tblockEditorStore\n\t\t\t);\n\n\t\t\tconst blocks = getBlocksByClientId( clientIds ) ?? [];\n\n\t\t\tconst isReusable =\n\t\t\t\tblocks.length === 1 &&\n\t\t\t\tblocks[ 0 ] &&\n\t\t\t\tisReusableBlock( blocks[ 0 ] ) &&\n\t\t\t\t!! select( coreStore ).getEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\t'wp_block',\n\t\t\t\t\tblocks[ 0 ].attributes.ref\n\t\t\t\t);\n\n\t\t\tconst _canConvert =\n\t\t\t\t// Hide when this is already a reusable block.\n\t\t\t\t! isReusable &&\n\t\t\t\t// Hide when reusable blocks are disabled.\n\t\t\t\tcanInsertBlockType( 'core/block', rootClientId ) &&\n\t\t\t\tblocks.every(\n\t\t\t\t\t( block ) =>\n\t\t\t\t\t\t// Guard against the case where a regular block has *just* been converted.\n\t\t\t\t\t\t!! block &&\n\t\t\t\t\t\t// Hide on invalid blocks.\n\t\t\t\t\t\tblock.isValid &&\n\t\t\t\t\t\t// Hide when block doesn't support being made reusable.\n\t\t\t\t\t\thasBlockSupport( block.name, 'reusable', true )\n\t\t\t\t) &&\n\t\t\t\t// Hide when current doesn't have permission to do that.\n\t\t\t\t!! canUser( 'create', 'blocks' );\n\n\t\t\treturn _canConvert;\n\t\t},\n\t\t[ clientIds ]\n\t);\n\n\tconst {\n\t\t__experimentalConvertBlocksToReusable: convertBlocksToReusable,\n\t} = useDispatch( store );\n\n\tconst { createSuccessNotice, createErrorNotice } = useDispatch(\n\t\tnoticesStore\n\t);\n\tconst onConvert = useCallback(\n\t\tasync function ( reusableBlockTitle ) {\n\t\t\ttry {\n\t\t\t\tawait convertBlocksToReusable( clientIds, reusableBlockTitle );\n\t\t\t\tcreateSuccessNotice( __( 'Reusable block created.' ), {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\t} catch ( error ) {\n\t\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\t[ clientIds ]\n\t);\n\n\tif ( ! canConvert ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<BlockSettingsMenuControls>\n\t\t\t{ ( { onClose } ) => (\n\t\t\t\t<>\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\ticon={ symbol }\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tsetIsModalOpen( true );\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Add to Reusable blocks' ) }\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t{ isModalOpen && (\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\ttitle={ __( 'Create Reusable block' ) }\n\t\t\t\t\t\t\tcloseLabel={ __( 'Close' ) }\n\t\t\t\t\t\t\tonRequestClose={ () => {\n\t\t\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t\t\t\tsetTitle( '' );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\toverlayClassName=\"reusable-blocks-menu-items__convert-modal\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\tonSubmit={ ( event ) => {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tonConvert( title );\n\t\t\t\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t\t\t\t\tsetTitle( '' );\n\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\t\t\t\tonChange={ setTitle }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\t\t\tclassName=\"reusable-blocks-menu-items__convert-modal-actions\"\n\t\t\t\t\t\t\t\t\tjustify=\"flex-end\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t\t\t\t\t\t\t\tsetTitle( '' );\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\t\t\t\t{ __( 'Save' ) }\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t) }\n\t\t\t\t</>\n\t\t\t) }\n\t\t</BlockSettingsMenuControls>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { isReusableBlock } from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tBlockSettingsMenuControls,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { addQueryArgs } from '@wordpress/url';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as reusableBlocksStore } from '../../store';\n\nfunction ReusableBlocksManageButton( { clientId } ) {\n\tconst { canRemove, isVisible } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlock, canRemoveBlock } = select( blockEditorStore );\n\t\t\tconst { canUser } = select( coreStore );\n\t\t\tconst reusableBlock = getBlock( clientId );\n\n\t\t\treturn {\n\t\t\t\tcanRemove: canRemoveBlock( clientId ),\n\t\t\t\tisVisible:\n\t\t\t\t\t!! reusableBlock &&\n\t\t\t\t\tisReusableBlock( reusableBlock ) &&\n\t\t\t\t\t!! canUser(\n\t\t\t\t\t\t'update',\n\t\t\t\t\t\t'blocks',\n\t\t\t\t\t\treusableBlock.attributes.ref\n\t\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst {\n\t\t__experimentalConvertBlockToStatic: convertBlockToStatic,\n\t} = useDispatch( reusableBlocksStore );\n\n\tif ( ! isVisible ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<BlockSettingsMenuControls>\n\t\t\t<MenuItem\n\t\t\t\thref={ addQueryArgs( 'edit.php', { post_type: 'wp_block' } ) }\n\t\t\t>\n\t\t\t\t{ __( 'Manage Reusable blocks' ) }\n\t\t\t</MenuItem>\n\t\t\t{ canRemove && (\n\t\t\t\t<MenuItem onClick={ () => convertBlockToStatic( clientId ) }>\n\t\t\t\t\t{ __( 'Convert to regular blocks' ) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t</BlockSettingsMenuControls>\n\t);\n}\n\nexport default ReusableBlocksManageButton;\n","/**\n * External dependencies\n */\nimport { isFunction } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport {\n\tcreateBlock,\n\tisReusableBlock,\n\tparse,\n\tserialize,\n} from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Returns a generator converting a reusable block into a static block.\n *\n * @param {string} clientId The client ID of the block to attach.\n */\nexport const __experimentalConvertBlockToStatic = ( clientId ) => ( {\n\tregistry,\n} ) => {\n\tconst oldBlock = registry.select( blockEditorStore ).getBlock( clientId );\n\tconst reusableBlock = registry\n\t\t.select( 'core' )\n\t\t.getEditedEntityRecord(\n\t\t\t'postType',\n\t\t\t'wp_block',\n\t\t\toldBlock.attributes.ref\n\t\t);\n\n\tconst newBlocks = parse(\n\t\tisFunction( reusableBlock.content )\n\t\t\t? reusableBlock.content( reusableBlock )\n\t\t\t: reusableBlock.content\n\t);\n\tregistry\n\t\t.dispatch( blockEditorStore )\n\t\t.replaceBlocks( oldBlock.clientId, newBlocks );\n};\n\n/**\n * Returns a generator converting one or more static blocks into a reusable block.\n *\n * @param {string[]} clientIds The client IDs of the block to detach.\n * @param {string}   title     Reusable block title.\n */\nexport const __experimentalConvertBlocksToReusable = (\n\tclientIds,\n\ttitle\n) => async ( { registry, dispatch } ) => {\n\tconst reusableBlock = {\n\t\ttitle: title || __( 'Untitled Reusable block' ),\n\t\tcontent: serialize(\n\t\t\tregistry.select( blockEditorStore ).getBlocksByClientId( clientIds )\n\t\t),\n\t\tstatus: 'publish',\n\t};\n\n\tconst updatedRecord = await registry\n\t\t.dispatch( 'core' )\n\t\t.saveEntityRecord( 'postType', 'wp_block', reusableBlock );\n\n\tconst newBlock = createBlock( 'core/block', {\n\t\tref: updatedRecord.id,\n\t} );\n\tregistry.dispatch( blockEditorStore ).replaceBlocks( clientIds, newBlock );\n\tdispatch.__experimentalSetEditingReusableBlock( newBlock.clientId, true );\n};\n\n/**\n * Returns a generator deleting a reusable block.\n *\n * @param {string} id The ID of the reusable block to delete.\n */\nexport const __experimentalDeleteReusableBlock = ( id ) => async ( {\n\tregistry,\n} ) => {\n\tconst reusableBlock = registry\n\t\t.select( 'core' )\n\t\t.getEditedEntityRecord( 'postType', 'wp_block', id );\n\n\t// Don't allow a reusable block with a temporary ID to be deleted.\n\tif ( ! reusableBlock ) {\n\t\treturn;\n\t}\n\n\t// Remove any other blocks that reference this reusable block.\n\tconst allBlocks = registry.select( blockEditorStore ).getBlocks();\n\tconst associatedBlocks = allBlocks.filter(\n\t\t( block ) => isReusableBlock( block ) && block.attributes.ref === id\n\t);\n\tconst associatedBlockClientIds = associatedBlocks.map(\n\t\t( block ) => block.clientId\n\t);\n\n\t// Remove the parsed block.\n\tif ( associatedBlockClientIds.length ) {\n\t\tregistry\n\t\t\t.dispatch( blockEditorStore )\n\t\t\t.removeBlocks( associatedBlockClientIds );\n\t}\n\n\tawait registry\n\t\t.dispatch( 'core' )\n\t\t.deleteEntityRecord( 'postType', 'wp_block', id );\n};\n\n/**\n * Returns an action descriptor for SET_EDITING_REUSABLE_BLOCK action.\n *\n * @param {string}  clientId  The clientID of the reusable block to target.\n * @param {boolean} isEditing Whether the block should be in editing state.\n * @return {Object} Action descriptor.\n */\nexport function __experimentalSetEditingReusableBlock( clientId, isEditing ) {\n\treturn {\n\t\ttype: 'SET_EDITING_REUSABLE_BLOCK',\n\t\tclientId,\n\t\tisEditing,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport * as actions from './actions';\nimport reducer from './reducer';\nimport * as selectors from './selectors';\n\nconst STORE_NAME = 'core/reusable-blocks';\n\n/**\n * Store definition for the reusable blocks namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\tactions,\n\treducer,\n\tselectors,\n} );\n\nregister( store );\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\nexport function isEditingReusableBlock( state = {}, action ) {\n\tif ( action?.type === 'SET_EDITING_REUSABLE_BLOCK' ) {\n\t\treturn {\n\t\t\t...state,\n\t\t\t[ action.clientId ]: action.isEditing,\n\t\t};\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tisEditingReusableBlock,\n} );\n","/**\n * Returns true if reusable block is in the editing state.\n *\n * @param {Object} state    Global application state.\n * @param {number} clientId the clientID of the block.\n * @return {boolean} Whether the reusable block is in the editing state.\n */\nexport function __experimentalIsEditingReusableBlock( state, clientId ) {\n\treturn state.isEditingReusableBlock[ clientId ];\n}\n","module.exports = window[\"lodash\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"notices\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"wp\"][\"url\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { store } from './store';\nexport * from './components';\n"],"names":["SVG","Path","symbol","default","ReusableBlocksMenuItems","withSelect","store","blockEditorStore","ReusableBlockConvertButton","ReusableBlocksManageButton","clientIds","rootClientId","length","select","getSelectedBlockClientIds","hasBlockSupport","isReusableBlock","BlockSettingsMenuControls","useCallback","useState","MenuItem","Modal","Button","TextControl","Flex","FlexItem","useDispatch","useSelect","__","noticesStore","coreStore","isModalOpen","setIsModalOpen","title","setTitle","canConvert","canUser","getBlocksByClientId","canInsertBlockType","blocks","isReusable","getEntityRecord","attributes","ref","_canConvert","every","block","isValid","name","__experimentalConvertBlocksToReusable","convertBlocksToReusable","createSuccessNotice","createErrorNotice","onConvert","reusableBlockTitle","type","error","message","onClose","event","preventDefault","addQueryArgs","reusableBlocksStore","clientId","canRemove","isVisible","getBlock","canRemoveBlock","reusableBlock","__experimentalConvertBlockToStatic","convertBlockToStatic","post_type","isFunction","createBlock","parse","serialize","registry","oldBlock","getEditedEntityRecord","newBlocks","content","dispatch","replaceBlocks","status","updatedRecord","saveEntityRecord","newBlock","id","__experimentalSetEditingReusableBlock","__experimentalDeleteReusableBlock","allBlocks","getBlocks","associatedBlocks","filter","associatedBlockClientIds","map","removeBlocks","deleteEntityRecord","isEditing","createReduxStore","register","actions","reducer","selectors","STORE_NAME","combineReducers","isEditingReusableBlock","state","action","__experimentalIsEditingReusableBlock"],"sourceRoot":""}