{"version":3,"file":"core-data.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASe,gBAAT,CAA2BC,OAA3B,EAAoCC,KAApC,EAA4C;AAClD,SAAO;AACNC,IAAAA,IAAI,EAAE,oBADA;AAEND,IAAAA,KAAK,EAAEjB,iDAAS,CAAEiB,KAAF,CAFV;AAGND,IAAAA;AAHM,GAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASG,kBAAT,CAA6BC,WAA7B,EAA2C;AACjD,SAAO;AACNF,IAAAA,IAAI,EAAE,sBADA;AAENE,IAAAA;AAFM,GAAP;AAIA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,WAAT,CAAsBC,QAAtB,EAAiC;AACvC,SAAO;AACNJ,IAAAA,IAAI,EAAE,cADA;AAENI,IAAAA;AAFM,GAAP;AAIA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,oBAAT,CACNC,IADM,EAENC,IAFM,EAGNC,OAHM,EAINC,KAJM,EAOL;AAAA,MAFDC,eAEC,uEAFiB,KAEjB;AAAA,MADDC,KACC;;AACD;AACA;AACA,MAAKL,IAAI,KAAK,UAAd,EAA2B;AAC1BE,IAAAA,OAAO,GAAG1B,iDAAS,CAAE0B,OAAF,CAAT,CAAqBI,GAArB,CAA4BC,MAAF,IACnCA,MAAM,CAACC,MAAP,KAAkB,YAAlB,GAAiC,EAAE,GAAGD,MAAL;AAAaE,MAAAA,KAAK,EAAE;AAApB,KAAjC,GAA4DF,MADnD,CAAV;AAGA;;AACD,MAAIG,MAAJ;;AACA,MAAKP,KAAL,EAAa;AACZO,IAAAA,MAAM,GAAGxB,kEAAmB,CAAEgB,OAAF,EAAWC,KAAX,EAAkBE,KAAlB,CAA5B;AACA,GAFD,MAEO;AACNK,IAAAA,MAAM,GAAG1B,2DAAY,CAAEkB,OAAF,EAAWG,KAAX,CAArB;AACA;;AAED,SAAO,EACN,GAAGK,MADG;AAENV,IAAAA,IAFM;AAGNC,IAAAA,IAHM;AAING,IAAAA;AAJM,GAAP;AAMA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASO,mBAAT,CAA8BC,YAA9B,EAA6C;AACnD,SAAO;AACNlB,IAAAA,IAAI,EAAE,uBADA;AAENkB,IAAAA;AAFM,GAAP;AAIA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,0CAAT,CACNC,qBADM,EAEL;AACD,SAAO;AACNpB,IAAAA,IAAI,EAAE,kCADA;AAENqB,IAAAA,EAAE,EAAED;AAFE,GAAP;AAIA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASE,0CAAT,CACNC,UADM,EAENC,YAFM,EAGL;AACD,SAAO;AACNxB,IAAAA,IAAI,EAAE,6BADA;AAENuB,IAAAA,UAFM;AAGNC,IAAAA;AAHM,GAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,+CAAT,CACNF,UADM,EAENG,UAFM,EAGL;AACD,SAAO;AACN1B,IAAAA,IAAI,EAAE,uCADA;AAENuB,IAAAA,UAFM;AAGNG,IAAAA;AAHM,GAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,oBAAT,GAAgC;AACtCtC,EAAAA,4DAAU,CAAE,iDAAF,EAAqD;AAC9DuC,IAAAA,KAAK,EAAE;AADuD,GAArD,CAAV;AAIA,SAAO;AACN5B,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAAS6B,mBAAT,CAA8BC,GAA9B,EAAmCC,OAAnC,EAA6C;AACnD,SAAO;AACN/B,IAAAA,IAAI,EAAE,uBADA;AAEN8B,IAAAA,GAFM;AAGNC,IAAAA;AAHM,GAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMC,kBAAkB,GAAG,UACjC1B,IADiC,EA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ACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR;AACA,oCAAoC;;AAEpC;;AAEA,sBAAsB,uBAAuB;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB,IAAI;AACpB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB,SAAS;AACzB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB,SAAS;AACzB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,UAAU;AACzB;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;;;;;;;;;;;AClTA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C,cAAc,4BAA4B;AAC1C;AACA,cAAc,4BAA4B;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,UAAU;AACxB;;AAEA;AACA;AACA;AACA;AACA,cAAc,UAAU;AACxB;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B;AACA,YAAY,4BAA4B;AACxC;AACA;AACA;;AAEA,YAAY,4BAA4B;AACxC;;AAEA,YAAY,4BAA4B;AACxC;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,2BAA2B,eAAe;AAC1C,qBAAqB,iBAAiB;AACtC,cAAc,iBAAiB;AAC/B,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAM,KAA+B,GAAG,EAMtC;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACtKa;;AAEb;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA,6BAAe,oCAAU;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA,eAAe,uBAAuB;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACjRA,+DAAe,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,GAAG,yCAAyC;;;;;;;;;;;;;;;ACApI;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AClBqC;AACrC;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,SAAS;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,0gBAA0gB;AAC1gB;AACA;AACA;AACA;;AAEA,OAAO,wDAAQ;AACf;AACA;;AAEA;AACA;;AAEA,+DAAe,SAAS;;;;;;;;;;;;;;AC7BG;AACY;;AAEvC;AACA;AACA,+CAA+C,+CAAG,KAAK;;AAEvD;AACA,mCAAmC;;AAEnC;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;;AAEA,SAAS,yDAAS;AAClB;;AAEA,+DAAe,EAAE;;;;;;;;;;;;;ACvBc;;AAE/B;AACA,qCAAqC,sDAAU;AAC/C;;AAEA,+DAAe,QAAQ;;;;;;;;;;;ACNvB;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://wp/./node_modules/@wordpress/core-data/build-module/@wordpress/core-data/src/actions.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/batch/@wordpress/core-data/src/batch/create-batch.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/batch/@wordpress/core-data/src/batch/default-processor.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/@wordpress/core-data/src/entities.ts","webpack://wp/./node_modules/@wordpress/core-data/build-module/@wordpress/core-data/src/entity-provider.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/fetch/@wordpress/core-data/src/fetch/__experimental-fetch-link-suggestions.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/fetch/@wordpress/core-data/src/fetch/__experimental-fetch-url-data.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/fetch/@wordpress/core-data/src/fetch/index.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/hooks/@wordpress/core-data/src/hooks/constants.ts","webpack://wp/./node_modules/@wordpress/core-data/build-module/hooks/@wordpress/core-data/src/hooks/memoize.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/hooks/@wordpress/core-data/src/hooks/use-entity-record.ts","webpack://wp/./node_modules/@wordpress/core-data/build-module/hooks/@wordpress/core-data/src/hooks/use-entity-records.ts","webpack://wp/./node_modules/@wordpress/core-data/build-module/hooks/@wordpress/core-data/src/hooks/use-query-select.ts","webpack://wp/./node_modules/@wordpress/core-data/build-module/@wordpress/core-data/src/index.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/locks/@wordpress/core-data/src/locks/actions.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/locks/@wordpress/core-data/src/locks/engine.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/locks/@wordpress/core-data/src/locks/reducer.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/locks/@wordpress/core-data/src/locks/selectors.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/locks/@wordpress/core-data/src/locks/utils.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/@wordpress/core-data/src/name.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/queried-data/@wordpress/core-data/src/queried-data/actions.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/queried-data/@wordpress/core-data/src/queried-data/get-query-parts.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/queried-data/@wordpress/core-data/src/queried-data/reducer.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/queried-data/@wordpress/core-data/src/queried-data/selectors.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/@wordpress/core-data/src/reducer.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/@wordpress/core-data/src/resolvers.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/@wordpress/core-data/src/selectors.ts","webpack://wp/./node_modules/@wordpress/core-data/build-module/utils/@wordpress/core-data/src/utils/conservative-map-item.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/utils/@wordpress/core-data/src/utils/forward-resolver.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/utils/@wordpress/core-data/src/utils/get-normalized-comma-separable.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/utils/@wordpress/core-data/src/utils/if-matching-action.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/utils/@wordpress/core-data/src/utils/is-raw-attribute.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/utils/@wordpress/core-data/src/utils/on-sub-key.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/utils/@wordpress/core-data/src/utils/replace-action.js","webpack://wp/./node_modules/@wordpress/core-data/build-module/utils/@wordpress/core-data/src/utils/with-weak-map-cache.js","webpack://wp/./node_modules/equivalent-key-map/equivalent-key-map.js","webpack://wp/./node_modules/memize/index.js","webpack://wp/./node_modules/rememo/es/rememo.js","webpack://wp/./node_modules/uuid/dist/esm-browser/regex.js","webpack://wp/./node_modules/uuid/dist/esm-browser/rng.js","webpack://wp/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://wp/./node_modules/uuid/dist/esm-browser/v4.js","webpack://wp/./node_modules/uuid/dist/esm-browser/validate.js","webpack://wp/external window \"lodash\"","webpack://wp/external window [\"wp\",\"apiFetch\"]","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"deprecated\"]","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"htmlEntities\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"isShallowEqual\"]","webpack://wp/external window [\"wp\",\"url\"]","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/webpack/before-startup","webpack://wp/webpack/startup","webpack://wp/webpack/after-startup"],"sourcesContent":["/**\n * External dependencies\n */\nimport { castArray, isEqual, find } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { receiveItems, removeItems, receiveQueriedItems } from './queried-data';\nimport { getOrLoadEntitiesConfig, DEFAULT_ENTITY_KEY } from './entities';\nimport { createBatch } from './batch';\nimport { STORE_NAME } from './name';\n\n/**\n * Returns an action object used in signalling that authors have been received.\n *\n * @param {string}       queryID Query ID.\n * @param {Array|Object} users   Users received.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserQuery( queryID, users ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_QUERY',\n\t\tusers: castArray( users ),\n\t\tqueryID,\n\t};\n}\n\n/**\n * Returns an action used in signalling that the current user has been received.\n *\n * @param {Object} currentUser Current user object.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentUser( currentUser ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_USER',\n\t\tcurrentUser,\n\t};\n}\n\n/**\n * Returns an action object used in adding new entities.\n *\n * @param {Array} entities Entities received.\n *\n * @return {Object} Action object.\n */\nexport function addEntities( entities ) {\n\treturn {\n\t\ttype: 'ADD_ENTITIES',\n\t\tentities,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been received.\n *\n * @param {string}       kind            Kind of the received entity record.\n * @param {string}       name            Name of the received entity record.\n * @param {Array|Object} records         Records received.\n * @param {?Object}      query           Query Object.\n * @param {?boolean}     invalidateCache Should invalidate query caches.\n * @param {?Object}      edits           Edits to reset.\n * @return {Object} Action object.\n */\nexport function receiveEntityRecords(\n\tkind,\n\tname,\n\trecords,\n\tquery,\n\tinvalidateCache = false,\n\tedits\n) {\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\n\t// on the server.\n\tif ( kind === 'postType' ) {\n\t\trecords = castArray( records ).map( ( record ) =>\n\t\t\trecord.status === 'auto-draft' ? { ...record, title: '' } : record\n\t\t);\n\t}\n\tlet action;\n\tif ( query ) {\n\t\taction = receiveQueriedItems( records, query, edits );\n\t} else {\n\t\taction = receiveItems( records, edits );\n\t}\n\n\treturn {\n\t\t...action,\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current theme has been received.\n *\n * @param {Object} currentTheme The current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentTheme( currentTheme ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_THEME',\n\t\tcurrentTheme,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current global styles id has been received.\n *\n * @param {string} currentGlobalStylesId The current global styles id.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveCurrentGlobalStylesId(\n\tcurrentGlobalStylesId\n) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_GLOBAL_STYLES_ID',\n\t\tid: currentGlobalStylesId,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the theme base global styles have been received\n *\n * @param {string} stylesheet   The theme's identifier\n * @param {Object} globalStyles The global styles object.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveThemeBaseGlobalStyles(\n\tstylesheet,\n\tglobalStyles\n) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLES',\n\t\tstylesheet,\n\t\tglobalStyles,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the theme global styles variations have been received.\n *\n * @param {string} stylesheet The theme's identifier\n * @param {Array}  variations The global styles variations.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveThemeGlobalStyleVariations(\n\tstylesheet,\n\tvariations\n) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLE_VARIATIONS',\n\t\tstylesheet,\n\t\tvariations,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the index has been received.\n *\n * @deprecated since WP 5.9, this is not useful anymore, use the selector direclty.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeSupports() {\n\tdeprecated( \"wp.data.dispatch( 'core' ).receiveThemeSupports\", {\n\t\tsince: '5.9',\n\t} );\n\n\treturn {\n\t\ttype: 'DO_NOTHING',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the preview data for\n * a given URl has been received.\n *\n * @param {string} url     URL to preview the embed for.\n * @param {*}      preview Preview data.\n *\n * @return {Object} Action object.\n */\nexport function receiveEmbedPreview( url, preview ) {\n\treturn {\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\n\t\turl,\n\t\tpreview,\n\t};\n}\n\n/**\n * Action triggered to delete an entity record.\n *\n * @param {string}   kind                         Kind of the deleted entity.\n * @param {string}   name                         Name of the deleted entity.\n * @param {string}   recordId                     Record ID of the deleted entity.\n * @param {?Object}  query                        Special query parameters for the\n *                                                DELETE API call.\n * @param {Object}   [options]                    Delete options.\n * @param {Function} [options.__unstableFetch]    Internal use only. Function to\n *                                                call instead of `apiFetch()`.\n *                                                Must return a promise.\n * @param {boolean}  [options.throwOnError=false] If false, this action suppresses all\n *                                                the exceptions. Defaults to false.\n */\nexport const deleteEntityRecord = (\n\tkind,\n\tname,\n\trecordId,\n\tquery,\n\t{ __unstableFetch = apiFetch, throwOnError = false } = {}\n) => async ( { dispatch } ) => {\n\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind ) );\n\tconst entityConfig = find( configs, { kind, name } );\n\tlet error;\n\tlet deletedRecord = false;\n\tif ( ! entityConfig || entityConfig?.__experimentalNoFetch ) {\n\t\treturn;\n\t}\n\n\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\tSTORE_NAME,\n\t\t[ 'entities', 'records', kind, name, recordId ],\n\t\t{ exclusive: true }\n\t);\n\n\ttry {\n\t\tdispatch( {\n\t\t\ttype: 'DELETE_ENTITY_RECORD_START',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t} );\n\n\t\tlet hasError = false;\n\t\ttry {\n\t\t\tlet path = `${ entityConfig.baseURL }/${ recordId }`;\n\n\t\t\tif ( query ) {\n\t\t\t\tpath = addQueryArgs( path, query );\n\t\t\t}\n\n\t\t\tdeletedRecord = await __unstableFetch( {\n\t\t\t\tpath,\n\t\t\t\tmethod: 'DELETE',\n\t\t\t} );\n\n\t\t\tawait dispatch( removeItems( kind, name, recordId, true ) );\n\t\t} catch ( _error ) {\n\t\t\thasError = true;\n\t\t\terror = _error;\n\t\t}\n\n\t\tdispatch( {\n\t\t\ttype: 'DELETE_ENTITY_RECORD_FINISH',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\terror,\n\t\t} );\n\n\t\tif ( hasError && throwOnError ) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn deletedRecord;\n\t} finally {\n\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t}\n};\n\n/**\n * Returns an action object that triggers an\n * edit to an entity record.\n *\n * @param {string}  kind                 Kind of the edited entity record.\n * @param {string}  name                 Name of the edited entity record.\n * @param {number}  recordId             Record ID of the edited entity record.\n * @param {Object}  edits                The edits.\n * @param {Object}  options              Options for the edit.\n * @param {boolean} [options.undoIgnore] Whether to ignore the edit in undo history or not.\n *\n * @return {Object} Action object.\n */\nexport const editEntityRecord = (\n\tkind,\n\tname,\n\trecordId,\n\tedits,\n\toptions = {}\n) => ( { select, dispatch } ) => {\n\tconst entityConfig = select.getEntityConfig( kind, name );\n\tif ( ! entityConfig ) {\n\t\tthrow new Error(\n\t\t\t`The entity being edited (${ kind }, ${ name }) does not have a loaded config.`\n\t\t);\n\t}\n\tconst { transientEdits = {}, mergedEdits = {} } = entityConfig;\n\tconst record = select.getRawEntityRecord( kind, name, recordId );\n\tconst editedRecord = select.getEditedEntityRecord( kind, name, recordId );\n\n\tconst edit = {\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\t// Clear edits when they are equal to their persisted counterparts\n\t\t// so that the property is not considered dirty.\n\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tconst recordValue = record[ key ];\n\t\t\tconst editedRecordValue = editedRecord[ key ];\n\t\t\tconst value = mergedEdits[ key ]\n\t\t\t\t? { ...editedRecordValue, ...edits[ key ] }\n\t\t\t\t: edits[ key ];\n\t\t\tacc[ key ] = isEqual( recordValue, value ) ? undefined : value;\n\t\t\treturn acc;\n\t\t}, {} ),\n\t\ttransientEdits,\n\t};\n\tdispatch( {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...edit,\n\t\tmeta: {\n\t\t\tundo: ! options.undoIgnore && {\n\t\t\t\t...edit,\n\t\t\t\t// Send the current values for things like the first undo stack entry.\n\t\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\t\tacc[ key ] = editedRecord[ key ];\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} ),\n\t\t\t},\n\t\t},\n\t} );\n};\n\n/**\n * Action triggered to undo the last edit to\n * an entity record, if any.\n */\nexport const undo = () => ( { select, dispatch } ) => {\n\tconst undoEdit = select.getUndoEdit();\n\tif ( ! undoEdit ) {\n\t\treturn;\n\t}\n\tdispatch( {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...undoEdit,\n\t\tmeta: { isUndo: true },\n\t} );\n};\n\n/**\n * Action triggered to redo the last undoed\n * edit to an entity record, if any.\n */\nexport const redo = () => ( { select, dispatch } ) => {\n\tconst redoEdit = select.getRedoEdit();\n\tif ( ! redoEdit ) {\n\t\treturn;\n\t}\n\tdispatch( {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...redoEdit,\n\t\tmeta: { isRedo: true },\n\t} );\n};\n\n/**\n * Forces the creation of a new undo level.\n *\n * @return {Object} Action object.\n */\nexport function __unstableCreateUndoLevel() {\n\treturn { type: 'CREATE_UNDO_LEVEL' };\n}\n\n/**\n * Action triggered to save an entity record.\n *\n * @param {string}   kind                         Kind of the received entity.\n * @param {string}   name                         Name of the received entity.\n * @param {Object}   record                       Record to be saved.\n * @param {Object}   options                      Saving options.\n * @param {boolean}  [options.isAutosave=false]   Whether this is an autosave.\n * @param {Function} [options.__unstableFetch]    Internal use only. Function to\n *                                                call instead of `apiFetch()`.\n *                                                Must return a promise.\n * @param {boolean}  [options.throwOnError=false] If false, this action suppresses all\n *                                                the exceptions. Defaults to false.\n */\nexport const saveEntityRecord = (\n\tkind,\n\tname,\n\trecord,\n\t{\n\t\tisAutosave = false,\n\t\t__unstableFetch = apiFetch,\n\t\tthrowOnError = false,\n\t} = {}\n) => async ( { select, resolveSelect, dispatch } ) => {\n\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind ) );\n\tconst entityConfig = find( configs, { kind, name } );\n\tif ( ! entityConfig || entityConfig?.__experimentalNoFetch ) {\n\t\treturn;\n\t}\n\tconst entityIdKey = entityConfig.key || DEFAULT_ENTITY_KEY;\n\tconst recordId = record[ entityIdKey ];\n\n\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\tSTORE_NAME,\n\t\t[ 'entities', 'records', kind, name, recordId || uuid() ],\n\t\t{ exclusive: true }\n\t);\n\n\ttry {\n\t\t// Evaluate optimized edits.\n\t\t// (Function edits that should be evaluated on save to avoid expensive computations on every edit.)\n\t\tfor ( const [ key, value ] of Object.entries( record ) ) {\n\t\t\tif ( typeof value === 'function' ) {\n\t\t\t\tconst evaluatedValue = value(\n\t\t\t\t\tselect.getEditedEntityRecord( kind, name, recordId )\n\t\t\t\t);\n\t\t\t\tdispatch.editEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId,\n\t\t\t\t\t{\n\t\t\t\t\t\t[ key ]: evaluatedValue,\n\t\t\t\t\t},\n\t\t\t\t\t{ undoIgnore: true }\n\t\t\t\t);\n\t\t\t\trecord[ key ] = evaluatedValue;\n\t\t\t}\n\t\t}\n\n\t\tdispatch( {\n\t\t\ttype: 'SAVE_ENTITY_RECORD_START',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\tisAutosave,\n\t\t} );\n\t\tlet updatedRecord;\n\t\tlet error;\n\t\tlet hasError = false;\n\t\ttry {\n\t\t\tconst path = `${ entityConfig.baseURL }${\n\t\t\t\trecordId ? '/' + recordId : ''\n\t\t\t}`;\n\t\t\tconst persistedRecord = select.getRawEntityRecord(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId\n\t\t\t);\n\n\t\t\tif ( isAutosave ) {\n\t\t\t\t// Most of this autosave logic is very specific to posts.\n\t\t\t\t// This is fine for now as it is the only supported autosave,\n\t\t\t\t// but ideally this should all be handled in the back end,\n\t\t\t\t// so the client just sends and receives objects.\n\t\t\t\tconst currentUser = select.getCurrentUser();\n\t\t\t\tconst currentUserId = currentUser ? currentUser.id : undefined;\n\t\t\t\tconst autosavePost = await resolveSelect.getAutosave(\n\t\t\t\t\tpersistedRecord.type,\n\t\t\t\t\tpersistedRecord.id,\n\t\t\t\t\tcurrentUserId\n\t\t\t\t);\n\t\t\t\t// Autosaves need all expected fields to be present.\n\t\t\t\t// So we fallback to the previous autosave and then\n\t\t\t\t// to the actual persisted entity if the edits don't\n\t\t\t\t// have a value.\n\t\t\t\tlet data = { ...persistedRecord, ...autosavePost, ...record };\n\t\t\t\tdata = Object.keys( data ).reduce(\n\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes( key )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tacc[ key ] = data[ key ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tstatus:\n\t\t\t\t\t\t\tdata.status === 'auto-draft'\n\t\t\t\t\t\t\t\t? 'draft'\n\t\t\t\t\t\t\t\t: data.status,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tupdatedRecord = await __unstableFetch( {\n\t\t\t\t\tpath: `${ path }/autosaves`,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tdata,\n\t\t\t\t} );\n\n\t\t\t\t// An autosave may be processed by the server as a regular save\n\t\t\t\t// when its update is requested by the author and the post had\n\t\t\t\t// draft or auto-draft status.\n\t\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\n\t\t\t\t\tlet newRecord = {\n\t\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t\t...data,\n\t\t\t\t\t\t...updatedRecord,\n\t\t\t\t\t};\n\t\t\t\t\tnewRecord = Object.keys( newRecord ).reduce(\n\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\t// These properties are persisted in autosaves.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes(\n\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tacc[ key ] = newRecord[ key ];\n\t\t\t\t\t\t\t} else if ( key === 'status' ) {\n\t\t\t\t\t\t\t\t// Status is only persisted in autosaves when going from\n\t\t\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\n\t\t\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\t\t\tpersistedRecord.status === 'auto-draft' &&\n\t\t\t\t\t\t\t\t\tnewRecord.status === 'draft'\n\t\t\t\t\t\t\t\t\t\t? newRecord.status\n\t\t\t\t\t\t\t\t\t\t: persistedRecord.status;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// These properties are not persisted in autosaves.\n\t\t\t\t\t\t\t\tacc[ key ] = persistedRecord[ key ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{}\n\t\t\t\t\t);\n\t\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tnewRecord,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdispatch.receiveAutosaves(\n\t\t\t\t\t\tpersistedRecord.id,\n\t\t\t\t\t\tupdatedRecord\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet edits = record;\n\t\t\t\tif ( entityConfig.__unstablePrePersist ) {\n\t\t\t\t\tedits = {\n\t\t\t\t\t\t...edits,\n\t\t\t\t\t\t...entityConfig.__unstablePrePersist(\n\t\t\t\t\t\t\tpersistedRecord,\n\t\t\t\t\t\t\tedits\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tupdatedRecord = await __unstableFetch( {\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\n\t\t\t\t\tdata: edits,\n\t\t\t\t} );\n\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\tupdatedRecord,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\tedits\n\t\t\t\t);\n\t\t\t}\n\t\t} catch ( _error ) {\n\t\t\thasError = true;\n\t\t\terror = _error;\n\t\t}\n\t\tdispatch( {\n\t\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\terror,\n\t\t\tisAutosave,\n\t\t} );\n\n\t\tif ( hasError && throwOnError ) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn updatedRecord;\n\t} finally {\n\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t}\n};\n\n/**\n * Runs multiple core-data actions at the same time using one API request.\n *\n * Example:\n *\n * ```\n * const [ savedRecord, updatedRecord, deletedRecord ] =\n *   await dispatch( 'core' ).__experimentalBatch( [\n *     ( { saveEntityRecord } ) => saveEntityRecord( 'root', 'widget', widget ),\n *     ( { saveEditedEntityRecord } ) => saveEntityRecord( 'root', 'widget', 123 ),\n *     ( { deleteEntityRecord } ) => deleteEntityRecord( 'root', 'widget', 123, null ),\n *   ] );\n * ```\n *\n * @param {Array} requests Array of functions which are invoked simultaneously.\n *                         Each function is passed an object containing\n *                         `saveEntityRecord`, `saveEditedEntityRecord`, and\n *                         `deleteEntityRecord`.\n *\n * @return {(thunkArgs: Object) => Promise} A promise that resolves to an array containing the return\n *                                          values of each function given in `requests`.\n */\nexport const __experimentalBatch = ( requests ) => async ( { dispatch } ) => {\n\tconst batch = createBatch();\n\tconst api = {\n\t\tsaveEntityRecord( kind, name, record, options ) {\n\t\t\treturn batch.add( ( add ) =>\n\t\t\t\tdispatch.saveEntityRecord( kind, name, record, {\n\t\t\t\t\t...options,\n\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t} )\n\t\t\t);\n\t\t},\n\t\tsaveEditedEntityRecord( kind, name, recordId, options ) {\n\t\t\treturn batch.add( ( add ) =>\n\t\t\t\tdispatch.saveEditedEntityRecord( kind, name, recordId, {\n\t\t\t\t\t...options,\n\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t} )\n\t\t\t);\n\t\t},\n\t\tdeleteEntityRecord( kind, name, recordId, query, options ) {\n\t\t\treturn batch.add( ( add ) =>\n\t\t\t\tdispatch.deleteEntityRecord( kind, name, recordId, query, {\n\t\t\t\t\t...options,\n\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t} )\n\t\t\t);\n\t\t},\n\t};\n\tconst resultPromises = requests.map( ( request ) => request( api ) );\n\tconst [ , ...results ] = await Promise.all( [\n\t\tbatch.run(),\n\t\t...resultPromises,\n\t] );\n\treturn results;\n};\n\n/**\n * Action triggered to save an entity record's edits.\n *\n * @param {string} kind     Kind of the entity.\n * @param {string} name     Name of the entity.\n * @param {Object} recordId ID of the record.\n * @param {Object} options  Saving options.\n */\nexport const saveEditedEntityRecord = (\n\tkind,\n\tname,\n\trecordId,\n\toptions\n) => async ( { select, dispatch } ) => {\n\tif ( ! select.hasEditsForEntityRecord( kind, name, recordId ) ) {\n\t\treturn;\n\t}\n\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind ) );\n\tconst entityConfig = find( configs, { kind, name } );\n\tif ( ! entityConfig ) {\n\t\treturn;\n\t}\n\tconst entityIdKey = entityConfig.key || DEFAULT_ENTITY_KEY;\n\n\tconst edits = select.getEntityRecordNonTransientEdits(\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst record = { [ entityIdKey ]: recordId, ...edits };\n\treturn await dispatch.saveEntityRecord( kind, name, record, options );\n};\n\n/**\n * Action triggered to save only specified properties for the entity.\n *\n * @param {string} kind        Kind of the entity.\n * @param {string} name        Name of the entity.\n * @param {Object} recordId    ID of the record.\n * @param {Array}  itemsToSave List of entity properties to save.\n * @param {Object} options     Saving options.\n */\nexport const __experimentalSaveSpecifiedEntityEdits = (\n\tkind,\n\tname,\n\trecordId,\n\titemsToSave,\n\toptions\n) => async ( { select, dispatch } ) => {\n\tif ( ! select.hasEditsForEntityRecord( kind, name, recordId ) ) {\n\t\treturn;\n\t}\n\tconst edits = select.getEntityRecordNonTransientEdits(\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst editsToSave = {};\n\tfor ( const edit in edits ) {\n\t\tif ( itemsToSave.some( ( item ) => item === edit ) ) {\n\t\t\teditsToSave[ edit ] = edits[ edit ];\n\t\t}\n\t}\n\treturn await dispatch.saveEntityRecord( kind, name, editsToSave, options );\n};\n\n/**\n * Returns an action object used in signalling that Upload permissions have been received.\n *\n * @deprecated since WP 5.9, use receiveUserPermission instead.\n *\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\n *\n * @return {Object} Action object.\n */\nexport function receiveUploadPermissions( hasUploadPermissions ) {\n\tdeprecated( \"wp.data.dispatch( 'core' ).receiveUploadPermissions\", {\n\t\tsince: '5.9',\n\t\talternative: 'receiveUserPermission',\n\t} );\n\n\treturn receiveUserPermission( 'create/media', hasUploadPermissions );\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource.\n *\n * @param {string}  key       A key that represents the action and REST resource.\n * @param {boolean} isAllowed Whether or not the user can perform the action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermission( key, isAllowed ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey,\n\t\tisAllowed,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the autosaves for a\n * post have been received.\n *\n * @param {number}       postId    The id of the post that is parent to the autosave.\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\n *\n * @return {Object} Action object.\n */\nexport function receiveAutosaves( postId, autosaves ) {\n\treturn {\n\t\ttype: 'RECEIVE_AUTOSAVES',\n\t\tpostId,\n\t\tautosaves: castArray( autosaves ),\n\t};\n}\n","/**\n * External dependencies\n */\nimport { isFunction, zip } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport defaultProcessor from './default-processor';\n\n/**\n * Creates a batch, which can be used to combine multiple API requests into one\n * API request using the WordPress batch processing API (/v1/batch).\n *\n * ```\n * const batch = createBatch();\n * const dunePromise = batch.add( {\n *   path: '/v1/books',\n *   method: 'POST',\n *   data: { title: 'Dune' }\n * } );\n * const lotrPromise = batch.add( {\n *   path: '/v1/books',\n *   method: 'POST',\n *   data: { title: 'Lord of the Rings' }\n * } );\n * const isSuccess = await batch.run(); // Sends one POST to /v1/batch.\n * if ( isSuccess ) {\n *   console.log(\n *     'Saved two books:',\n *     await dunePromise,\n *     await lotrPromise\n *   );\n * }\n * ```\n *\n * @param {Function} [processor] Processor function. Can be used to replace the\n *                               default functionality which is to send an API\n *                               request to /v1/batch. Is given an array of\n *                               inputs and must return a promise that\n *                               resolves to an array of objects containing\n *                               either `output` or `error`.\n */\nexport default function createBatch( processor = defaultProcessor ) {\n\tlet lastId = 0;\n\t/** @type {Array<{ input: any; resolve: ( value: any ) => void; reject: ( error: any ) => void }>} */\n\tlet queue = [];\n\tconst pending = new ObservableSet();\n\n\treturn {\n\t\t/**\n\t\t * Adds an input to the batch and returns a promise that is resolved or\n\t\t * rejected when the input is processed by `batch.run()`.\n\t\t *\n\t\t * You may also pass a thunk which allows inputs to be added\n\t\t * asychronously.\n\t\t *\n\t\t * ```\n\t\t * // Both are allowed:\n\t\t * batch.add( { path: '/v1/books', ... } );\n\t\t * batch.add( ( add ) => add( { path: '/v1/books', ... } ) );\n\t\t * ```\n\t\t *\n\t\t * If a thunk is passed, `batch.run()` will pause until either:\n\t\t *\n\t\t * - The thunk calls its `add` argument, or;\n\t\t * - The thunk returns a promise and that promise resolves, or;\n\t\t * - The thunk returns a non-promise.\n\t\t *\n\t\t * @param {any|Function} inputOrThunk Input to add or thunk to execute.\n\t\t *\n\t\t * @return {Promise|any} If given an input, returns a promise that\n\t\t *                       is resolved or rejected when the batch is\n\t\t *                       processed. If given a thunk, returns the return\n\t\t *                       value of that thunk.\n\t\t */\n\t\tadd( inputOrThunk ) {\n\t\t\tconst id = ++lastId;\n\t\t\tpending.add( id );\n\n\t\t\tconst add = ( input ) =>\n\t\t\t\tnew Promise( ( resolve, reject ) => {\n\t\t\t\t\tqueue.push( {\n\t\t\t\t\t\tinput,\n\t\t\t\t\t\tresolve,\n\t\t\t\t\t\treject,\n\t\t\t\t\t} );\n\t\t\t\t\tpending.delete( id );\n\t\t\t\t} );\n\n\t\t\tif ( isFunction( inputOrThunk ) ) {\n\t\t\t\treturn Promise.resolve( inputOrThunk( add ) ).finally( () => {\n\t\t\t\t\tpending.delete( id );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn add( inputOrThunk );\n\t\t},\n\n\t\t/**\n\t\t * Runs the batch. This calls `batchProcessor` and resolves or rejects\n\t\t * all promises returned by `add()`.\n\t\t *\n\t\t * @return {Promise<boolean>} A promise that resolves to a boolean that is true\n\t\t *                   if the processor returned no errors.\n\t\t */\n\t\tasync run() {\n\t\t\tif ( pending.size ) {\n\t\t\t\tawait new Promise( ( resolve ) => {\n\t\t\t\t\tconst unsubscribe = pending.subscribe( () => {\n\t\t\t\t\t\tif ( ! pending.size ) {\n\t\t\t\t\t\t\tunsubscribe();\n\t\t\t\t\t\t\tresolve( undefined );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tlet results;\n\n\t\t\ttry {\n\t\t\t\tresults = await processor(\n\t\t\t\t\tqueue.map( ( { input } ) => input )\n\t\t\t\t);\n\n\t\t\t\tif ( results.length !== queue.length ) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'run: Array returned by processor must be same size as input array.'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch ( error ) {\n\t\t\t\tfor ( const { reject } of queue ) {\n\t\t\t\t\treject( error );\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tlet isSuccess = true;\n\n\t\t\tfor ( const pair of zip( results, queue ) ) {\n\t\t\t\t/** @type {{error?: unknown, output?: unknown}} */\n\t\t\t\tconst result = pair[ 0 ];\n\n\t\t\t\t/** @type {{resolve: (value: any) => void; reject: (error: any) => void} | undefined} */\n\t\t\t\tconst queueItem = pair[ 1 ];\n\n\t\t\t\tif ( result?.error ) {\n\t\t\t\t\tqueueItem?.reject( result.error );\n\t\t\t\t\tisSuccess = false;\n\t\t\t\t} else {\n\t\t\t\t\tqueueItem?.resolve( result?.output ?? result );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tqueue = [];\n\n\t\t\treturn isSuccess;\n\t\t},\n\t};\n}\n\nclass ObservableSet {\n\tconstructor( ...args ) {\n\t\tthis.set = new Set( ...args );\n\t\tthis.subscribers = new Set();\n\t}\n\n\tget size() {\n\t\treturn this.set.size;\n\t}\n\n\tadd( value ) {\n\t\tthis.set.add( value );\n\t\tthis.subscribers.forEach( ( subscriber ) => subscriber() );\n\t\treturn this;\n\t}\n\n\tdelete( value ) {\n\t\tconst isSuccess = this.set.delete( value );\n\t\tthis.subscribers.forEach( ( subscriber ) => subscriber() );\n\t\treturn isSuccess;\n\t}\n\n\tsubscribe( subscriber ) {\n\t\tthis.subscribers.add( subscriber );\n\t\treturn () => {\n\t\t\tthis.subscribers.delete( subscriber );\n\t\t};\n\t}\n}\n","/**\n * External dependencies\n */\nimport { chunk } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * Maximum number of requests to place in a single batch request. Obtained by\n * sending a preflight OPTIONS request to /batch/v1/.\n *\n * @type {number?}\n */\nlet maxItems = null;\n\n/**\n * Default batch processor. Sends its input requests to /batch/v1.\n *\n * @param {Array} requests List of API requests to perform at once.\n *\n * @return {Promise} Promise that resolves to a list of objects containing\n *                   either `output` (if that request was succesful) or `error`\n *                   (if not ).\n */\nexport default async function defaultProcessor( requests ) {\n\tif ( maxItems === null ) {\n\t\tconst preflightResponse = await apiFetch( {\n\t\t\tpath: '/batch/v1',\n\t\t\tmethod: 'OPTIONS',\n\t\t} );\n\t\tmaxItems = preflightResponse.endpoints[ 0 ].args.requests.maxItems;\n\t}\n\n\tconst results = [];\n\n\t// @ts-ignore We would have crashed or never gotten to this point if we hadn't received the maxItems count.\n\tfor ( const batchRequests of chunk( requests, maxItems ) ) {\n\t\tconst batchResponse = await apiFetch( {\n\t\t\tpath: '/batch/v1',\n\t\t\tmethod: 'POST',\n\t\t\tdata: {\n\t\t\t\tvalidation: 'require-all-validate',\n\t\t\t\trequests: batchRequests.map( ( request ) => ( {\n\t\t\t\t\tpath: request.path,\n\t\t\t\t\tbody: request.data, // Rename 'data' to 'body'.\n\t\t\t\t\tmethod: request.method,\n\t\t\t\t\theaders: request.headers,\n\t\t\t\t} ) ),\n\t\t\t},\n\t\t} );\n\n\t\tlet batchResults;\n\n\t\tif ( batchResponse.failed ) {\n\t\t\tbatchResults = batchResponse.responses.map( ( response ) => ( {\n\t\t\t\terror: response?.body,\n\t\t\t} ) );\n\t\t} else {\n\t\t\tbatchResults = batchResponse.responses.map( ( response ) => {\n\t\t\t\tconst result = {};\n\t\t\t\tif ( response.status >= 200 && response.status < 300 ) {\n\t\t\t\t\tresult.output = response.body;\n\t\t\t\t} else {\n\t\t\t\t\tresult.error = response.body;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} );\n\t\t}\n\n\t\tresults.push( ...batchResults );\n\t}\n\n\treturn results;\n}\n","/**\n * External dependencies\n */\nimport { upperFirst, camelCase, map, find, get, startCase } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { addEntities } from './actions';\nimport type { Post, Taxonomy, Type, Updatable } from './entity-types';\n\nexport const DEFAULT_ENTITY_KEY = 'id';\n\nconst POST_RAW_ATTRIBUTES = [ 'title', 'excerpt', 'content' ];\n\nexport const rootEntitiesConfig = [\n\t{\n\t\tlabel: __( 'Base' ),\n\t\tname: '__unstableBase',\n\t\tkind: 'root',\n\t\tbaseURL: '/',\n\t\tbaseURLParams: {\n\t\t\t_fields: [\n\t\t\t\t'description',\n\t\t\t\t'gmt_offset',\n\t\t\t\t'home',\n\t\t\t\t'name',\n\t\t\t\t'site_icon',\n\t\t\t\t'site_icon_url',\n\t\t\t\t'site_logo',\n\t\t\t\t'timezone_string',\n\t\t\t\t'url',\n\t\t\t].join( ',' ),\n\t\t},\n\t},\n\t{\n\t\tlabel: __( 'Site' ),\n\t\tname: 'site',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/settings',\n\t\tgetTitle: ( record ) => {\n\t\t\treturn get( record, [ 'title' ], __( 'Site Title' ) );\n\t\t},\n\t},\n\t{\n\t\tlabel: __( 'Post Type' ),\n\t\tname: 'postType',\n\t\tkind: 'root',\n\t\tkey: 'slug',\n\t\tbaseURL: '/wp/v2/types',\n\t\tbaseURLParams: { context: 'edit' },\n\t\trawAttributes: POST_RAW_ATTRIBUTES,\n\t},\n\t{\n\t\tname: 'media',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/media',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'mediaItems',\n\t\tlabel: __( 'Media' ),\n\t\trawAttributes: [ 'caption', 'title', 'description' ],\n\t},\n\t{\n\t\tname: 'taxonomy',\n\t\tkind: 'root',\n\t\tkey: 'slug',\n\t\tbaseURL: '/wp/v2/taxonomies',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'taxonomies',\n\t\tlabel: __( 'Taxonomy' ),\n\t},\n\t{\n\t\tname: 'sidebar',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/sidebars',\n\t\tplural: 'sidebars',\n\t\ttransientEdits: { blocks: true },\n\t\tlabel: __( 'Widget areas' ),\n\t},\n\t{\n\t\tname: 'widget',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/widgets',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'widgets',\n\t\ttransientEdits: { blocks: true },\n\t\tlabel: __( 'Widgets' ),\n\t},\n\t{\n\t\tname: 'widgetType',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/widget-types',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'widgetTypes',\n\t\tlabel: __( 'Widget types' ),\n\t},\n\t{\n\t\tlabel: __( 'User' ),\n\t\tname: 'user',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/users',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'users',\n\t},\n\t{\n\t\tname: 'comment',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/comments',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'comments',\n\t\tlabel: __( 'Comment' ),\n\t},\n\t{\n\t\tname: 'menu',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/menus',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'menus',\n\t\tlabel: __( 'Menu' ),\n\t},\n\t{\n\t\tname: 'menuItem',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/menu-items',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'menuItems',\n\t\tlabel: __( 'Menu Item' ),\n\t\trawAttributes: [ 'title', 'content' ],\n\t},\n\t{\n\t\tname: 'menuLocation',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/menu-locations',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'menuLocations',\n\t\tlabel: __( 'Menu Location' ),\n\t\tkey: 'name',\n\t},\n\t{\n\t\tlabel: __( 'Global Styles' ),\n\t\tname: 'globalStyles',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/global-styles',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'globalStylesVariations', // Should be different than name.\n\t\tgetTitle: ( record ) => record?.title?.rendered || record?.title,\n\t},\n\t{\n\t\tlabel: __( 'Themes' ),\n\t\tname: 'theme',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/themes',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tkey: 'stylesheet',\n\t},\n\t{\n\t\tlabel: __( 'Plugins' ),\n\t\tname: 'plugin',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/plugins',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tkey: 'plugin',\n\t},\n];\n\nexport const additionalEntityConfigLoaders = [\n\t{ kind: 'postType', loadEntities: loadPostTypeEntities },\n\t{ kind: 'taxonomy', loadEntities: loadTaxonomyEntities },\n];\n\n/**\n * Returns a function to be used to retrieve extra edits to apply before persisting a post type.\n *\n * @param {Object} persistedRecord Already persisted Post\n * @param {Object} edits           Edits.\n * @return {Object} Updated edits.\n */\nexport const prePersistPostType = ( persistedRecord, edits ) => {\n\tconst newEdits = {} as Partial< Updatable< Post< 'edit' > > >;\n\n\tif ( persistedRecord?.status === 'auto-draft' ) {\n\t\t// Saving an auto-draft should create a draft by default.\n\t\tif ( ! edits.status && ! newEdits.status ) {\n\t\t\tnewEdits.status = 'draft';\n\t\t}\n\n\t\t// Fix the auto-draft default title.\n\t\tif (\n\t\t\t( ! edits.title || edits.title === 'Auto Draft' ) &&\n\t\t\t! newEdits.title &&\n\t\t\t( ! persistedRecord?.title ||\n\t\t\t\tpersistedRecord?.title === 'Auto Draft' )\n\t\t) {\n\t\t\tnewEdits.title = '';\n\t\t}\n\t}\n\n\treturn newEdits;\n};\n\n/**\n * Returns the list of post type entities.\n *\n * @return {Promise} Entities promise\n */\nasync function loadPostTypeEntities() {\n\tconst postTypes = ( await apiFetch( {\n\t\tpath: '/wp/v2/types?context=view',\n\t} ) ) as Record< string, Type< 'view' > >;\n\treturn map( postTypes, ( postType, name ) => {\n\t\tconst isTemplate = [ 'wp_template', 'wp_template_part' ].includes(\n\t\t\tname\n\t\t);\n\t\tconst namespace = postType?.rest_namespace ?? 'wp/v2';\n\t\treturn {\n\t\t\tkind: 'postType',\n\t\t\tbaseURL: `/${ namespace }/${ postType.rest_base }`,\n\t\t\tbaseURLParams: { context: 'edit' },\n\t\t\tname,\n\t\t\tlabel: postType.name,\n\t\t\ttransientEdits: {\n\t\t\t\tblocks: true,\n\t\t\t\tselection: true,\n\t\t\t},\n\t\t\tmergedEdits: { meta: true },\n\t\t\trawAttributes: POST_RAW_ATTRIBUTES,\n\t\t\tgetTitle: ( record ) =>\n\t\t\t\trecord?.title?.rendered ||\n\t\t\t\trecord?.title ||\n\t\t\t\t( isTemplate ? startCase( record.slug ) : String( record.id ) ),\n\t\t\t__unstablePrePersist: isTemplate ? undefined : prePersistPostType,\n\t\t\t__unstable_rest_base: postType.rest_base,\n\t\t};\n\t} );\n}\n\n/**\n * Returns the list of the taxonomies entities.\n *\n * @return {Promise} Entities promise\n */\nasync function loadTaxonomyEntities() {\n\tconst taxonomies = ( await apiFetch( {\n\t\tpath: '/wp/v2/taxonomies?context=view',\n\t} ) ) as Record< string, Taxonomy< 'view' > >;\n\treturn map( taxonomies, ( taxonomy, name ) => {\n\t\tconst namespace = taxonomy?.rest_namespace ?? 'wp/v2';\n\t\treturn {\n\t\t\tkind: 'taxonomy',\n\t\t\tbaseURL: `/${ namespace }/${ taxonomy.rest_base }`,\n\t\t\tbaseURLParams: { context: 'edit' },\n\t\t\tname,\n\t\t\tlabel: taxonomy.name,\n\t\t};\n\t} );\n}\n\n/**\n * Returns the entity's getter method name given its kind and name.\n *\n * @example\n * ```js\n * const nameSingular = getMethodName( 'root', 'theme', 'get' );\n * // nameSingular is getRootTheme\n *\n * const namePlural = getMethodName( 'root', 'theme', 'set' );\n * // namePlural is setRootThemes\n * ```\n *\n * @param {string}  kind      Entity kind.\n * @param {string}  name      Entity name.\n * @param {string}  prefix    Function prefix.\n * @param {boolean} usePlural Whether to use the plural form or not.\n *\n * @return {string} Method name\n */\nexport const getMethodName = (\n\tkind,\n\tname,\n\tprefix = 'get',\n\tusePlural = false\n) => {\n\tconst entityConfig = find( rootEntitiesConfig, { kind, name } );\n\tconst kindPrefix = kind === 'root' ? '' : upperFirst( camelCase( kind ) );\n\tconst nameSuffix =\n\t\tupperFirst( camelCase( name ) ) + ( usePlural ? 's' : '' );\n\tconst suffix =\n\t\tusePlural && entityConfig?.plural\n\t\t\t? upperFirst( camelCase( entityConfig.plural ) )\n\t\t\t: nameSuffix;\n\treturn `${ prefix }${ kindPrefix }${ suffix }`;\n};\n\n/**\n * Loads the kind entities into the store.\n *\n * @param {string} kind Kind\n *\n * @return {(thunkArgs: object) => Promise<Array>} Entities\n */\nexport const getOrLoadEntitiesConfig = ( kind ) => async ( {\n\tselect,\n\tdispatch,\n} ) => {\n\tlet configs = select.getEntitiesConfig( kind );\n\tif ( configs && configs.length !== 0 ) {\n\t\treturn configs;\n\t}\n\n\tconst loader = find( additionalEntityConfigLoaders, { kind } );\n\tif ( ! loader ) {\n\t\treturn [];\n\t}\n\n\tconfigs = await loader.loadEntities();\n\tdispatch( addEntities( configs ) );\n\n\treturn configs;\n};\n","/**\n * WordPress dependencies\n */\nimport {\n\tcreateContext,\n\tuseContext,\n\tuseCallback,\n\tuseEffect,\n} from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { parse, __unstableSerializeAndClean } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from './name';\n\n/** @typedef {import('@wordpress/blocks').WPBlock} WPBlock */\n\nconst EMPTY_ARRAY = [];\n\n/**\n * Internal dependencies\n */\nimport { rootEntitiesConfig, additionalEntityConfigLoaders } from './entities';\n\nconst entityContexts = {\n\t...rootEntitiesConfig.reduce( ( acc, loader ) => {\n\t\tif ( ! acc[ loader.kind ] ) {\n\t\t\tacc[ loader.kind ] = {};\n\t\t}\n\t\tacc[ loader.kind ][ loader.name ] = {\n\t\t\tcontext: createContext( undefined ),\n\t\t};\n\t\treturn acc;\n\t}, {} ),\n\t...additionalEntityConfigLoaders.reduce( ( acc, loader ) => {\n\t\tacc[ loader.kind ] = {};\n\t\treturn acc;\n\t}, {} ),\n};\nconst getEntityContext = ( kind, name ) => {\n\tif ( ! entityContexts[ kind ] ) {\n\t\tthrow new Error( `Missing entity config for kind: ${ kind }.` );\n\t}\n\n\tif ( ! entityContexts[ kind ][ name ] ) {\n\t\tentityContexts[ kind ][ name ] = {\n\t\t\tcontext: createContext( undefined ),\n\t\t};\n\t}\n\n\treturn entityContexts[ kind ][ name ].context;\n};\n\n/**\n * Context provider component for providing\n * an entity for a specific entity.\n *\n * @param {Object} props          The component's props.\n * @param {string} props.kind     The entity kind.\n * @param {string} props.type     The entity name.\n * @param {number} props.id       The entity ID.\n * @param {*}      props.children The children to wrap.\n *\n * @return {Object} The provided children, wrapped with\n *                   the entity's context provider.\n */\nexport default function EntityProvider( { kind, type: name, id, children } ) {\n\tconst Provider = getEntityContext( kind, name ).Provider;\n\treturn <Provider value={ id }>{ children }</Provider>;\n}\n\n/**\n * Hook that returns the ID for the nearest\n * provided entity of the specified type.\n *\n * @param {string} kind The entity kind.\n * @param {string} name The entity name.\n */\nexport function useEntityId( kind, name ) {\n\treturn useContext( getEntityContext( kind, name ) );\n}\n\n/**\n * Hook that returns the value and a setter for the\n * specified property of the nearest provided\n * entity of the specified type.\n *\n * @param {string} kind  The entity kind.\n * @param {string} name  The entity name.\n * @param {string} prop  The property name.\n * @param {string} [_id] An entity ID to use instead of the context-provided one.\n *\n * @return {[*, Function, *]} An array where the first item is the\n *                            property value, the second is the\n *                            setter and the third is the full value\n * \t\t\t\t\t\t\t  object from REST API containing more\n * \t\t\t\t\t\t\t  information like `raw`, `rendered` and\n * \t\t\t\t\t\t\t  `protected` props.\n */\nexport function useEntityProp( kind, name, prop, _id ) {\n\tconst providerId = useEntityId( kind, name );\n\tconst id = _id ?? providerId;\n\n\tconst { value, fullValue } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecord, getEditedEntityRecord } = select(\n\t\t\t\tSTORE_NAME\n\t\t\t);\n\t\t\tconst record = getEntityRecord( kind, name, id ); // Trigger resolver.\n\t\t\tconst editedRecord = getEditedEntityRecord( kind, name, id );\n\t\t\treturn record && editedRecord\n\t\t\t\t? {\n\t\t\t\t\t\tvalue: editedRecord[ prop ],\n\t\t\t\t\t\tfullValue: record[ prop ],\n\t\t\t\t  }\n\t\t\t\t: {};\n\t\t},\n\t\t[ kind, name, id, prop ]\n\t);\n\tconst { editEntityRecord } = useDispatch( STORE_NAME );\n\tconst setValue = useCallback(\n\t\t( newValue ) => {\n\t\t\teditEntityRecord( kind, name, id, {\n\t\t\t\t[ prop ]: newValue,\n\t\t\t} );\n\t\t},\n\t\t[ kind, name, id, prop ]\n\t);\n\n\treturn [ value, setValue, fullValue ];\n}\n\n/**\n * Hook that returns block content getters and setters for\n * the nearest provided entity of the specified type.\n *\n * The return value has the shape `[ blocks, onInput, onChange ]`.\n * `onInput` is for block changes that don't create undo levels\n * or dirty the post, non-persistent changes, and `onChange` is for\n * peristent changes. They map directly to the props of a\n * `BlockEditorProvider` and are intended to be used with it,\n * or similar components or hooks.\n *\n * @param {string} kind         The entity kind.\n * @param {string} name         The entity name.\n * @param {Object} options\n * @param {string} [options.id] An entity ID to use instead of the context-provided one.\n *\n * @return {[WPBlock[], Function, Function]} The block array and setters.\n */\nexport function useEntityBlockEditor( kind, name, { id: _id } = {} ) {\n\tconst providerId = useEntityId( kind, name );\n\tconst id = _id ?? providerId;\n\tconst { content, blocks } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditedEntityRecord } = select( STORE_NAME );\n\t\t\tconst editedRecord = getEditedEntityRecord( kind, name, id );\n\t\t\treturn {\n\t\t\t\tblocks: editedRecord.blocks,\n\t\t\t\tcontent: editedRecord.content,\n\t\t\t};\n\t\t},\n\t\t[ kind, name, id ]\n\t);\n\tconst { __unstableCreateUndoLevel, editEntityRecord } = useDispatch(\n\t\tSTORE_NAME\n\t);\n\n\tuseEffect( () => {\n\t\t// Load the blocks from the content if not already in state\n\t\t// Guard against other instances that might have\n\t\t// set content to a function already or the blocks are already in state.\n\t\tif ( content && typeof content !== 'function' && ! blocks ) {\n\t\t\tconst parsedContent = parse( content );\n\t\t\teditEntityRecord(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\tid,\n\t\t\t\t{\n\t\t\t\t\tblocks: parsedContent,\n\t\t\t\t},\n\t\t\t\t{ undoIgnore: true }\n\t\t\t);\n\t\t}\n\t}, [ content ] );\n\n\tconst onChange = useCallback(\n\t\t( newBlocks, options ) => {\n\t\t\tconst { selection } = options;\n\t\t\tconst edits = { blocks: newBlocks, selection };\n\n\t\t\tconst noChange = blocks === edits.blocks;\n\t\t\tif ( noChange ) {\n\t\t\t\treturn __unstableCreateUndoLevel( kind, name, id );\n\t\t\t}\n\n\t\t\t// We create a new function here on every persistent edit\n\t\t\t// to make sure the edit makes the post dirty and creates\n\t\t\t// a new undo level.\n\t\t\tedits.content = ( { blocks: blocksForSerialization = [] } ) =>\n\t\t\t\t__unstableSerializeAndClean( blocksForSerialization );\n\n\t\t\teditEntityRecord( kind, name, id, edits );\n\t\t},\n\t\t[ kind, name, id, blocks ]\n\t);\n\n\tconst onInput = useCallback(\n\t\t( newBlocks, options ) => {\n\t\t\tconst { selection } = options;\n\t\t\tconst edits = { blocks: newBlocks, selection };\n\t\t\teditEntityRecord( kind, name, id, edits );\n\t\t},\n\t\t[ kind, name, id ]\n\t);\n\n\treturn [ blocks ?? EMPTY_ARRAY, onInput, onChange ];\n}\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Filters the search by type\n *\n * @typedef { 'attachment' | 'post' | 'term' | 'post-format' } WPLinkSearchType\n */\n\n/**\n * A link with an id may be of kind post-type or taxonomy\n *\n * @typedef { 'post-type' | 'taxonomy' } WPKind\n */\n\n/**\n * @typedef WPLinkSearchOptions\n *\n * @property {boolean}          [isInitialSuggestions] Displays initial search suggestions, when true.\n * @property {WPLinkSearchType} [type]                 Filters by search type.\n * @property {string}           [subtype]              Slug of the post-type or taxonomy.\n * @property {number}           [page]                 Which page of results to return.\n * @property {number}           [perPage]              Search results per page.\n */\n\n/**\n * @typedef WPLinkSearchResult\n *\n * @property {number} id     Post or term id.\n * @property {string} url    Link url.\n * @property {string} title  Title of the link.\n * @property {string} type   The taxonomy or post type slug or type URL.\n * @property {WPKind} [kind] Link kind of post-type or taxonomy\n */\n\n/**\n * @typedef WPLinkSearchResultAugments\n *\n * @property {{kind: WPKind}} [meta]    Contains kind information.\n * @property {WPKind}         [subtype] Optional subtype if it exists.\n */\n\n/**\n * @typedef {WPLinkSearchResult & WPLinkSearchResultAugments} WPLinkSearchResultAugmented\n */\n\n/**\n * @typedef WPEditorSettings\n *\n * @property {boolean} [ disablePostFormats ] Disables post formats, when true.\n */\n\n/**\n * Fetches link suggestions from the API.\n *\n * @async\n * @param {string}              search\n * @param {WPLinkSearchOptions} [searchOptions]\n * @param {WPEditorSettings}    [settings]\n *\n * @example\n * ```js\n * import { __experimentalFetchLinkSuggestions as fetchLinkSuggestions } from '@wordpress/core-data';\n *\n * //...\n *\n * export function initialize( id, settings ) {\n *\n * settings.__experimentalFetchLinkSuggestions = (\n *     search,\n *     searchOptions\n * ) => fetchLinkSuggestions( search, searchOptions, settings );\n * ```\n * @return {Promise< WPLinkSearchResult[] >} List of search suggestions\n */\nconst fetchLinkSuggestions = async (\n\tsearch,\n\tsearchOptions = {},\n\tsettings = {}\n) => {\n\tconst {\n\t\tisInitialSuggestions = false,\n\t\ttype = undefined,\n\t\tsubtype = undefined,\n\t\tpage = undefined,\n\t\tperPage = isInitialSuggestions ? 3 : 20,\n\t} = searchOptions;\n\n\tconst { disablePostFormats = false } = settings;\n\n\t/** @type {Promise<WPLinkSearchResult>[]} */\n\tconst queries = [];\n\n\tif ( ! type || type === 'post' ) {\n\t\tqueries.push(\n\t\t\tapiFetch( {\n\t\t\t\tpath: addQueryArgs( '/wp/v2/search', {\n\t\t\t\t\tsearch,\n\t\t\t\t\tpage,\n\t\t\t\t\tper_page: perPage,\n\t\t\t\t\ttype: 'post',\n\t\t\t\t\tsubtype,\n\t\t\t\t} ),\n\t\t\t} )\n\t\t\t\t.then( ( results ) => {\n\t\t\t\t\treturn results.map( ( result ) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\tmeta: { kind: 'post-type', subtype },\n\t\t\t\t\t\t};\n\t\t\t\t\t} );\n\t\t\t\t} )\n\t\t\t\t.catch( () => [] ) // Fail by returning no results.\n\t\t);\n\t}\n\n\tif ( ! type || type === 'term' ) {\n\t\tqueries.push(\n\t\t\tapiFetch( {\n\t\t\t\tpath: addQueryArgs( '/wp/v2/search', {\n\t\t\t\t\tsearch,\n\t\t\t\t\tpage,\n\t\t\t\t\tper_page: perPage,\n\t\t\t\t\ttype: 'term',\n\t\t\t\t\tsubtype,\n\t\t\t\t} ),\n\t\t\t} )\n\t\t\t\t.then( ( results ) => {\n\t\t\t\t\treturn results.map( ( result ) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\tmeta: { kind: 'taxonomy', subtype },\n\t\t\t\t\t\t};\n\t\t\t\t\t} );\n\t\t\t\t} )\n\t\t\t\t.catch( () => [] ) // Fail by returning no results.\n\t\t);\n\t}\n\n\tif ( ! disablePostFormats && ( ! type || type === 'post-format' ) ) {\n\t\tqueries.push(\n\t\t\tapiFetch( {\n\t\t\t\tpath: addQueryArgs( '/wp/v2/search', {\n\t\t\t\t\tsearch,\n\t\t\t\t\tpage,\n\t\t\t\t\tper_page: perPage,\n\t\t\t\t\ttype: 'post-format',\n\t\t\t\t\tsubtype,\n\t\t\t\t} ),\n\t\t\t} )\n\t\t\t\t.then( ( results ) => {\n\t\t\t\t\treturn results.map( ( result ) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\tmeta: { kind: 'taxonomy', subtype },\n\t\t\t\t\t\t};\n\t\t\t\t\t} );\n\t\t\t\t} )\n\t\t\t\t.catch( () => [] ) // Fail by returning no results.\n\t\t);\n\t}\n\n\tif ( ! type || type === 'attachment' ) {\n\t\tqueries.push(\n\t\t\tapiFetch( {\n\t\t\t\tpath: addQueryArgs( '/wp/v2/media', {\n\t\t\t\t\tsearch,\n\t\t\t\t\tpage,\n\t\t\t\t\tper_page: perPage,\n\t\t\t\t} ),\n\t\t\t} )\n\t\t\t\t.then( ( results ) => {\n\t\t\t\t\treturn results.map( ( result ) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\tmeta: { kind: 'media' },\n\t\t\t\t\t\t};\n\t\t\t\t\t} );\n\t\t\t\t} )\n\t\t\t\t.catch( () => [] ) // Fail by returning no results.\n\t\t);\n\t}\n\n\treturn Promise.all( queries ).then( ( results ) => {\n\t\treturn results\n\t\t\t.reduce(\n\t\t\t\t( /** @type {WPLinkSearchResult[]} */ accumulator, current ) =>\n\t\t\t\t\taccumulator.concat( current ), // Flatten list.\n\t\t\t\t[]\n\t\t\t)\n\t\t\t.filter(\n\t\t\t\t/**\n\t\t\t\t * @param {{ id: number }} result\n\t\t\t\t */\n\t\t\t\t( result ) => {\n\t\t\t\t\treturn !! result.id;\n\t\t\t\t}\n\t\t\t)\n\t\t\t.slice( 0, perPage )\n\t\t\t.map( ( /** @type {WPLinkSearchResultAugmented} */ result ) => {\n\t\t\t\tconst isMedia = result.type === 'attachment';\n\n\t\t\t\treturn {\n\t\t\t\t\tid: result.id,\n\t\t\t\t\t// @ts-ignore fix when we make this a TS file\n\t\t\t\t\turl: isMedia ? result.source_url : result.url,\n\t\t\t\t\ttitle:\n\t\t\t\t\t\tdecodeEntities(\n\t\t\t\t\t\t\tisMedia\n\t\t\t\t\t\t\t\t? // @ts-ignore fix when we make this a TS file\n\t\t\t\t\t\t\t\t  result.title.rendered\n\t\t\t\t\t\t\t\t: result.title || ''\n\t\t\t\t\t\t) || __( '(no title)' ),\n\t\t\t\t\ttype: result.subtype || result.type,\n\t\t\t\t\tkind: result?.meta?.kind,\n\t\t\t\t};\n\t\t\t} );\n\t} );\n};\n\nexport default fetchLinkSuggestions;\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport {\n\taddQueryArgs,\n\tprependHTTP,\n\tisURL,\n\tgetProtocol,\n\tisValidProtocol,\n} from '@wordpress/url';\n\n/**\n * A simple in-memory cache for requests.\n * This avoids repeat HTTP requests which may be beneficial\n * for those wishing to preserve low-bandwidth.\n */\nconst CACHE = new Map();\n\n/**\n * @typedef WPRemoteUrlData\n *\n * @property {string} title contents of the remote URL's `<title>` tag.\n */\n\n/**\n * Fetches data about a remote URL.\n * eg: <title> tag, favicon...etc.\n *\n * @async\n * @param {string}  url     the URL to request details from.\n * @param {Object?} options any options to pass to the underlying fetch.\n * @example\n * ```js\n * import { __experimentalFetchUrlData as fetchUrlData } from '@wordpress/core-data';\n *\n * //...\n *\n * export function initialize( id, settings ) {\n *\n * settings.__experimentalFetchUrlData = (\n * url\n * ) => fetchUrlData( url );\n * ```\n * @return {Promise< WPRemoteUrlData[] >} Remote URL data.\n */\nconst fetchUrlData = async ( url, options = {} ) => {\n\tconst endpoint = '/wp-block-editor/v1/url-details';\n\n\tconst args = {\n\t\turl: prependHTTP( url ),\n\t};\n\n\tif ( ! isURL( url ) ) {\n\t\treturn Promise.reject( `${ url } is not a valid URL.` );\n\t}\n\n\t// Test for \"http\" based URL as it is possible for valid\n\t// yet unusable URLs such as `tel:123456` to be passed.\n\tconst protocol = getProtocol( url );\n\n\tif (\n\t\t! protocol ||\n\t\t! isValidProtocol( protocol ) ||\n\t\t! protocol.startsWith( 'http' ) ||\n\t\t! /^https?:\\/\\/[^\\/\\s]/i.test( url )\n\t) {\n\t\treturn Promise.reject(\n\t\t\t`${ url } does not have a valid protocol. URLs must be \"http\" based`\n\t\t);\n\t}\n\n\tif ( CACHE.has( url ) ) {\n\t\treturn CACHE.get( url );\n\t}\n\n\treturn apiFetch( {\n\t\tpath: addQueryArgs( endpoint, args ),\n\t\t...options,\n\t} ).then( ( res ) => {\n\t\tCACHE.set( url, res );\n\t\treturn res;\n\t} );\n};\n\nexport default fetchUrlData;\n","export { default as __experimentalFetchLinkSuggestions } from './__experimental-fetch-link-suggestions';\nexport { default as __experimentalFetchUrlData } from './__experimental-fetch-url-data';\n","/* eslint-disable-next-line no-shadow */\nexport enum Status {\n\tIdle = 'IDLE',\n\tResolving = 'RESOLVING',\n\tError = 'ERROR',\n\tSuccess = 'SUCCESS',\n}\n","/**\n * External dependencies\n */\nimport memoize from 'memize';\n\n// re-export due to restrictive esModuleInterop setting\nexport default memoize;\n","/**\n * Internal dependencies\n */\nimport useQuerySelect from './use-query-select';\nimport { store as coreStore } from '../';\nimport type { Status } from './constants';\n\ninterface EntityRecordResolution< RecordType > {\n\t/** The requested entity record */\n\trecord: RecordType | null;\n\n\t/**\n\t * Is the record still being resolved?\n\t */\n\tisResolving: boolean;\n\n\t/**\n\t * Is the record resolved by now?\n\t */\n\thasResolved: boolean;\n\n\t/** Resolution status */\n\tstatus: Status;\n}\n\ninterface Options {\n\tenabled: boolean;\n}\n\n/**\n * Resolves the specified entity record.\n *\n * @param  kind                   Kind of the requested entity.\n * @param  name                   Name of the requested  entity.\n * @param  recordId               Record ID of the requested entity.\n * @param  options                Hook options.\n * @param  [options.enabled=true] Whether to run the query or short-circuit and return null. Defaults to true.\n * @example\n * ```js\n * import { useEntityRecord } from '@wordpress/core-data';\n *\n * function PageTitleDisplay( { id } ) {\n *   const { record, isResolving } = useEntityRecord( 'postType', 'page', id );\n *\n *   if ( isResolving ) {\n *     return 'Loading...';\n *   }\n *\n *   return record.title;\n * }\n *\n * // Rendered in the application:\n * // <PageTitleDisplay id={ 1 } />\n * ```\n *\n * In the above example, when `PageTitleDisplay` is rendered into an\n * application, the page and the resolution details will be retrieved from\n * the store state using `getEntityRecord()`, or resolved if missing.\n *\n * @return {EntityRecordResolution<RecordType>} Entity record data.\n * @template RecordType\n */\nexport default function __experimentalUseEntityRecord< RecordType >(\n\tkind: string,\n\tname: string,\n\trecordId: string | number,\n\toptions: Options = { enabled: true }\n): EntityRecordResolution< RecordType > {\n\tconst { data: record, ...rest } = useQuerySelect(\n\t\t( query ) => {\n\t\t\tif ( ! options.enabled ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn query( coreStore ).getEntityRecord( kind, name, recordId );\n\t\t},\n\t\t[ kind, name, recordId, options.enabled ]\n\t);\n\n\treturn {\n\t\trecord,\n\t\t...rest,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport useQuerySelect from './use-query-select';\nimport { store as coreStore } from '../';\nimport type { Status } from './constants';\n\ninterface EntityRecordsResolution< RecordType > {\n\t/** The requested entity record */\n\trecords: RecordType[] | null;\n\n\t/**\n\t * Is the record still being resolved?\n\t */\n\tisResolving: boolean;\n\n\t/**\n\t * Is the record resolved by now?\n\t */\n\thasResolved: boolean;\n\n\t/** Resolution status */\n\tstatus: Status;\n}\n\ninterface Options {\n\t/**\n\t * Whether to run the query or short-circuit and return null.\n\t *\n\t * @default true\n\t */\n\tenabled: boolean;\n}\n\n/**\n * Resolves the specified entity records.\n *\n * @param  kind      Kind of the requested entities.\n * @param  name      Name of the requested entities.\n * @param  queryArgs HTTP query for the requested entities.\n * @param  options   Hook options.\n * @example\n * ```js\n * import { useEntityRecord } from '@wordpress/core-data';\n *\n * function PageTitlesList() {\n *   const { records, isResolving } = useEntityRecords( 'postType', 'page' );\n *\n *   if ( isResolving ) {\n *     return 'Loading...';\n *   }\n *\n *   return (\n *     <ul>\n *       {records.map(( page ) => (\n *         <li>{ page.title }</li>\n *       ))}\n *     </ul>\n *   );\n * }\n *\n * // Rendered in the application:\n * // <PageTitlesList />\n * ```\n *\n * In the above example, when `PageTitlesList` is rendered into an\n * application, the list of records and the resolution details will be retrieved from\n * the store state using `getEntityRecords()`, or resolved if missing.\n *\n * @return Entity records data.\n * @template RecordType\n */\nexport default function __experimentalUseEntityRecords< RecordType >(\n\tkind: string,\n\tname: string,\n\tqueryArgs: Record< string, unknown > = {},\n\toptions: Options = { enabled: true }\n): EntityRecordsResolution< RecordType > {\n\t// Serialize queryArgs to a string that can be safely used as a React dep.\n\t// We can't just pass queryArgs as one of the deps, because if it is passed\n\t// as an object literal, then it will be a different object on each call even\n\t// if the values remain the same.\n\tconst queryAsString = addQueryArgs( '', queryArgs );\n\n\tconst { data: records, ...rest } = useQuerySelect(\n\t\t( query ) => {\n\t\t\tif ( ! options.enabled ) {\n\t\t\t\treturn {\n\t\t\t\t\tdata: [],\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn query( coreStore ).getEntityRecords( kind, name, queryArgs );\n\t\t},\n\t\t[ kind, name, queryAsString, options.enabled ]\n\t);\n\n\treturn {\n\t\trecords,\n\t\t...rest,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport memoize from './memoize';\nimport { Status } from './constants';\n\nexport const META_SELECTORS = [\n\t'getIsResolving',\n\t'hasStartedResolution',\n\t'hasFinishedResolution',\n\t'isResolving',\n\t'getCachedResolvers',\n];\n\ninterface QuerySelectResponse< Data > {\n\t/** the requested selector return value */\n\tdata: Data;\n\n\t/** is the record still being resolved? Via the `getIsResolving` meta-selector */\n\tisResolving: boolean;\n\n\t/** was the resolution started? Via the `hasStartedResolution` meta-selector */\n\thasStarted: boolean;\n\n\t/** has the resolution finished? Via the `hasFinishedResolution` meta-selector. */\n\thasResolved: boolean;\n}\n\n/**\n * Like useSelect, but the selectors return objects containing\n * both the original data AND the resolution info.\n *\n * @param {Function} mapQuerySelect see useSelect\n * @param {Array}    deps           see useSelect\n *\n * @example\n * ```js\n * import { useQuerySelect } from '@wordpress/data';\n * import { store as coreDataStore } from '@wordpress/core-data';\n *\n * function PageTitleDisplay( { id } ) {\n *   const { data: page, isResolving } = useQuerySelect( ( query ) => {\n *     return query( coreDataStore ).getEntityRecord( 'postType', 'page', id )\n *   }, [ id ] );\n *\n *   if ( isResolving ) {\n *     return 'Loading...';\n *   }\n *\n *   return page.title;\n * }\n *\n * // Rendered in the application:\n * // <PageTitleDisplay id={ 10 } />\n * ```\n *\n * In the above example, when `PageTitleDisplay` is rendered into an\n * application, the page and the resolution details will be retrieved from\n * the store state using the `mapSelect` callback on `useQuerySelect`.\n *\n * If the id prop changes then any page in the state for that id is\n * retrieved. If the id prop doesn't change and other props are passed in\n * that do change, the title will not change because the dependency is just\n * the id.\n * @see useSelect\n *\n * @return {QuerySelectResponse} Queried data.\n */\nexport default function __experimentalUseQuerySelect( mapQuerySelect, deps ) {\n\treturn useSelect( ( select, registry ) => {\n\t\tconst resolve = ( store ) => enrichSelectors( select( store ) );\n\t\treturn mapQuerySelect( resolve, registry );\n\t}, deps );\n}\n\ninterface EnrichedSelectors {\n\t< Selectors extends Record< string, ( ...args: any[] ) => any > >(\n\t\tselectors: Selectors\n\t): {\n\t\t[ Selector in keyof Selectors ]: (\n\t\t\t...args: Parameters< Selectors[ Selector ] >\n\t\t) => QuerySelectResponse< ReturnType< Selectors[ Selector ] > >;\n\t};\n}\n\n/**\n * Transform simple selectors into ones that return an object with the\n * original return value AND the resolution info.\n *\n * @param {Object} selectors Selectors to enrich\n * @return {EnrichedSelectors} Enriched selectors\n */\nconst enrichSelectors = memoize( ( ( selectors ) => {\n\tconst resolvers = {};\n\tfor ( const selectorName in selectors ) {\n\t\tif ( META_SELECTORS.includes( selectorName ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\tObject.defineProperty( resolvers, selectorName, {\n\t\t\tget: () => ( ...args: unknown[] ) => {\n\t\t\t\tconst { getIsResolving, hasFinishedResolution } = selectors;\n\t\t\t\tconst isResolving = !! getIsResolving( selectorName, args );\n\t\t\t\tconst hasResolved =\n\t\t\t\t\t! isResolving &&\n\t\t\t\t\thasFinishedResolution( selectorName, args );\n\t\t\t\tconst data = selectors[ selectorName ]( ...args );\n\n\t\t\t\tlet status;\n\t\t\t\tif ( isResolving ) {\n\t\t\t\t\tstatus = Status.Resolving;\n\t\t\t\t} else if ( hasResolved ) {\n\t\t\t\t\tif ( data ) {\n\t\t\t\t\t\tstatus = Status.Success;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstatus = Status.Error;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstatus = Status.Idle;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tdata,\n\t\t\t\t\tstatus,\n\t\t\t\t\tisResolving,\n\t\t\t\t\thasResolved,\n\t\t\t\t};\n\t\t\t},\n\t\t} );\n\t}\n\treturn resolvers;\n} ) as EnrichedSelectors );\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as resolvers from './resolvers';\nimport createLocksActions from './locks/actions';\nimport { rootEntitiesConfig, getMethodName } from './entities';\nimport { STORE_NAME } from './name';\n\n// The entity selectors/resolvers and actions are shortcuts to their generic equivalents\n// (getEntityRecord, getEntityRecords, updateEntityRecord, updateEntityRecords)\n// Instead of getEntityRecord, the consumer could use more user-friendly named selector: getPostType, getTaxonomy...\n// The \"kind\" and the \"name\" of the entity are combined to generate these shortcuts.\n\nconst entitySelectors = rootEntitiesConfig.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( state, key, query ) =>\n\t\tselectors.getEntityRecord( state, kind, name, key, query );\n\tresult[ getMethodName( kind, name, 'get', true ) ] = ( state, query ) =>\n\t\tselectors.getEntityRecords( state, kind, name, query );\n\treturn result;\n}, {} );\n\nconst entityResolvers = rootEntitiesConfig.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( key, query ) =>\n\t\tresolvers.getEntityRecord( kind, name, key, query );\n\tconst pluralMethodName = getMethodName( kind, name, 'get', true );\n\tresult[ pluralMethodName ] = ( ...args ) =>\n\t\tresolvers.getEntityRecords( kind, name, ...args );\n\tresult[ pluralMethodName ].shouldInvalidate = ( action ) =>\n\t\tresolvers.getEntityRecords.shouldInvalidate( action, kind, name );\n\treturn result;\n}, {} );\n\nconst entityActions = rootEntitiesConfig.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name, 'save' ) ] = ( key ) =>\n\t\tactions.saveEntityRecord( kind, name, key );\n\tresult[ getMethodName( kind, name, 'delete' ) ] = ( key, query ) =>\n\t\tactions.deleteEntityRecord( kind, name, key, query );\n\treturn result;\n}, {} );\n\nconst storeConfig = () => ( {\n\treducer,\n\tactions: { ...actions, ...entityActions, ...createLocksActions() },\n\tselectors: { ...selectors, ...entitySelectors },\n\tresolvers: { ...resolvers, ...entityResolvers },\n} );\n\n/**\n * Store definition for the code data namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, storeConfig() );\n\nregister( store );\n\nexport { default as EntityProvider } from './entity-provider';\nexport { default as __experimentalUseEntityRecord } from './hooks/use-entity-record';\nexport { default as __experimentalUseEntityRecords } from './hooks/use-entity-records';\nexport * from './entity-provider';\nexport * from './fetch';\nexport * from './entity-types';\n","/**\n * Internal dependencies\n */\nimport createLocks from './engine';\n\nexport default function createLocksActions() {\n\tconst locks = createLocks();\n\n\tfunction __unstableAcquireStoreLock( store, path, { exclusive } ) {\n\t\treturn () => locks.acquire( store, path, exclusive );\n\t}\n\n\tfunction __unstableReleaseStoreLock( lock ) {\n\t\treturn () => locks.release( lock );\n\t}\n\n\treturn { __unstableAcquireStoreLock, __unstableReleaseStoreLock };\n}\n","/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport { isLockAvailable, getPendingLockRequests } from './selectors';\n\nexport default function createLocks() {\n\tlet state = reducer( undefined, { type: '@@INIT' } );\n\n\tfunction processPendingLockRequests() {\n\t\tfor ( const request of getPendingLockRequests( state ) ) {\n\t\t\tconst { store, path, exclusive, notifyAcquired } = request;\n\t\t\tif ( isLockAvailable( state, store, path, { exclusive } ) ) {\n\t\t\t\tconst lock = { store, path, exclusive };\n\t\t\t\tstate = reducer( state, {\n\t\t\t\t\ttype: 'GRANT_LOCK_REQUEST',\n\t\t\t\t\tlock,\n\t\t\t\t\trequest,\n\t\t\t\t} );\n\t\t\t\tnotifyAcquired( lock );\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction acquire( store, path, exclusive ) {\n\t\treturn new Promise( ( resolve ) => {\n\t\t\tstate = reducer( state, {\n\t\t\t\ttype: 'ENQUEUE_LOCK_REQUEST',\n\t\t\t\trequest: { store, path, exclusive, notifyAcquired: resolve },\n\t\t\t} );\n\t\t\tprocessPendingLockRequests();\n\t\t} );\n\t}\n\tfunction release( lock ) {\n\t\tstate = reducer( state, {\n\t\t\ttype: 'RELEASE_LOCK',\n\t\t\tlock,\n\t\t} );\n\t\tprocessPendingLockRequests();\n\t}\n\n\treturn { acquire, release };\n}\n","/**\n * Internal dependencies\n */\nimport { getNode, deepCopyLocksTreePath } from './utils';\n\nconst DEFAULT_STATE = {\n\trequests: [],\n\ttree: {\n\t\tlocks: [],\n\t\tchildren: {},\n\t},\n};\n\n/**\n * Reducer returning locks.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport default function locks( state = DEFAULT_STATE, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ENQUEUE_LOCK_REQUEST': {\n\t\t\tconst { request } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trequests: [ request, ...state.requests ],\n\t\t\t};\n\t\t}\n\t\tcase 'GRANT_LOCK_REQUEST': {\n\t\t\tconst { lock, request } = action;\n\t\t\tconst { store, path } = request;\n\t\t\tconst storePath = [ store, ...path ];\n\n\t\t\tconst newTree = deepCopyLocksTreePath( state.tree, storePath );\n\t\t\tconst node = getNode( newTree, storePath );\n\t\t\tnode.locks = [ ...node.locks, lock ];\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trequests: state.requests.filter( ( r ) => r !== request ),\n\t\t\t\ttree: newTree,\n\t\t\t};\n\t\t}\n\t\tcase 'RELEASE_LOCK': {\n\t\t\tconst { lock } = action;\n\t\t\tconst storePath = [ lock.store, ...lock.path ];\n\n\t\t\tconst newTree = deepCopyLocksTreePath( state.tree, storePath );\n\t\t\tconst node = getNode( newTree, storePath );\n\t\t\tnode.locks = node.locks.filter( ( l ) => l !== lock );\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttree: newTree,\n\t\t\t};\n\t\t}\n\t}\n\n\treturn state;\n}\n","/**\n * Internal dependencies\n */\nimport {\n\titerateDescendants,\n\titeratePath,\n\thasConflictingLock,\n\tgetNode,\n} from './utils';\n\nexport function getPendingLockRequests( state ) {\n\treturn state.requests;\n}\n\nexport function isLockAvailable( state, store, path, { exclusive } ) {\n\tconst storePath = [ store, ...path ];\n\tconst locks = state.tree;\n\n\t// Validate all parents and the node itself\n\tfor ( const node of iteratePath( locks, storePath ) ) {\n\t\tif ( hasConflictingLock( { exclusive }, node.locks ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// iteratePath terminates early if path is unreachable, let's\n\t// re-fetch the node and check it exists in the tree.\n\tconst node = getNode( locks, storePath );\n\tif ( ! node ) {\n\t\treturn true;\n\t}\n\n\t// Validate all nested nodes\n\tfor ( const descendant of iterateDescendants( node ) ) {\n\t\tif ( hasConflictingLock( { exclusive }, descendant.locks ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n","export function deepCopyLocksTreePath( tree, path ) {\n\tconst newTree = { ...tree };\n\tlet currentNode = newTree;\n\tfor ( const branchName of path ) {\n\t\tcurrentNode.children = {\n\t\t\t...currentNode.children,\n\t\t\t[ branchName ]: {\n\t\t\t\tlocks: [],\n\t\t\t\tchildren: {},\n\t\t\t\t...currentNode.children[ branchName ],\n\t\t\t},\n\t\t};\n\t\tcurrentNode = currentNode.children[ branchName ];\n\t}\n\treturn newTree;\n}\n\nexport function getNode( tree, path ) {\n\tlet currentNode = tree;\n\tfor ( const branchName of path ) {\n\t\tconst nextNode = currentNode.children[ branchName ];\n\t\tif ( ! nextNode ) {\n\t\t\treturn null;\n\t\t}\n\t\tcurrentNode = nextNode;\n\t}\n\treturn currentNode;\n}\n\nexport function* iteratePath( tree, path ) {\n\tlet currentNode = tree;\n\tyield currentNode;\n\tfor ( const branchName of path ) {\n\t\tconst nextNode = currentNode.children[ branchName ];\n\t\tif ( ! nextNode ) {\n\t\t\tbreak;\n\t\t}\n\t\tyield nextNode;\n\t\tcurrentNode = nextNode;\n\t}\n}\n\nexport function* iterateDescendants( node ) {\n\tconst stack = Object.values( node.children );\n\twhile ( stack.length ) {\n\t\tconst childNode = stack.pop();\n\t\tyield childNode;\n\t\tstack.push( ...Object.values( childNode.children ) );\n\t}\n}\n\nexport function hasConflictingLock( { exclusive }, locks ) {\n\tif ( exclusive && locks.length ) {\n\t\treturn true;\n\t}\n\n\tif ( ! exclusive && locks.filter( ( lock ) => lock.exclusive ).length ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * The reducer key used by core data in store registration.\n * This is defined in a separate file to avoid cycle-dependency\n *\n * @type {string}\n */\nexport const STORE_NAME = 'core';\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\n\n/**\n * Returns an action object used in signalling that items have been received.\n *\n * @param {Array}   items Items received.\n * @param {?Object} edits Optional edits to reset.\n *\n * @return {Object} Action object.\n */\nexport function receiveItems( items, edits ) {\n\treturn {\n\t\ttype: 'RECEIVE_ITEMS',\n\t\titems: castArray( items ),\n\t\tpersistedEdits: edits,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been\n * deleted and they need to be removed from entities state.\n *\n * @param {string}              kind            Kind of the removed entities.\n * @param {string}              name            Name of the removed entities.\n * @param {Array|number|string} records         Record IDs of the removed entities.\n * @param {boolean}             invalidateCache Controls whether we want to invalidate the cache.\n * @return {Object} Action object.\n */\nexport function removeItems( kind, name, records, invalidateCache = false ) {\n\treturn {\n\t\ttype: 'REMOVE_ITEMS',\n\t\titemIds: castArray( records ),\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that queried data has been\n * received.\n *\n * @param {Array}   items Queried items received.\n * @param {?Object} query Optional query object.\n * @param {?Object} edits Optional edits to reset.\n *\n * @return {Object} Action object.\n */\nexport function receiveQueriedItems( items, query = {}, edits ) {\n\treturn {\n\t\t...receiveItems( items, edits ),\n\t\tquery,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { withWeakMapCache, getNormalizedCommaSeparable } from '../utils';\n\n/**\n * An object of properties describing a specific query.\n *\n * @typedef {Object} WPQueriedDataQueryParts\n *\n * @property {number}      page      The query page (1-based index, default 1).\n * @property {number}      perPage   Items per page for query (default 10).\n * @property {string}      stableKey An encoded stable string of all non-\n *                                   pagination, non-fields query parameters.\n * @property {?(string[])} fields    Target subset of fields to derive from\n *                                   item objects.\n * @property {?(number[])} include   Specific item IDs to include.\n * @property {string}      context   Scope under which the request is made;\n *                                   determines returned fields in response.\n */\n\n/**\n * Given a query object, returns an object of parts, including pagination\n * details (`page` and `perPage`, or default values). All other properties are\n * encoded into a stable (idempotent) `stableKey` value.\n *\n * @param {Object} query Optional query object.\n *\n * @return {WPQueriedDataQueryParts} Query parts.\n */\nexport function getQueryParts( query ) {\n\t/**\n\t * @type {WPQueriedDataQueryParts}\n\t */\n\tconst parts = {\n\t\tstableKey: '',\n\t\tpage: 1,\n\t\tperPage: 10,\n\t\tfields: null,\n\t\tinclude: null,\n\t\tcontext: 'default',\n\t};\n\n\t// Ensure stable key by sorting keys. Also more efficient for iterating.\n\tconst keys = Object.keys( query ).sort();\n\n\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\tconst key = keys[ i ];\n\t\tlet value = query[ key ];\n\n\t\tswitch ( key ) {\n\t\t\tcase 'page':\n\t\t\t\tparts[ key ] = Number( value );\n\t\t\t\tbreak;\n\n\t\t\tcase 'per_page':\n\t\t\t\tparts.perPage = Number( value );\n\t\t\t\tbreak;\n\n\t\t\tcase 'context':\n\t\t\t\tparts.context = value;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// While in theory, we could exclude \"_fields\" from the stableKey\n\t\t\t\t// because two request with different fields have the same results\n\t\t\t\t// We're not able to ensure that because the server can decide to omit\n\t\t\t\t// fields from the response even if we explicitly asked for it.\n\t\t\t\t// Example: Asking for titles in posts without title support.\n\t\t\t\tif ( key === '_fields' ) {\n\t\t\t\t\tparts.fields = getNormalizedCommaSeparable( value ) ?? [];\n\t\t\t\t\t// Make sure to normalize value for `stableKey`\n\t\t\t\t\tvalue = parts.fields.join();\n\t\t\t\t}\n\n\t\t\t\t// Two requests with different include values cannot have same results.\n\t\t\t\tif ( key === 'include' ) {\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\t\t\t\t\t\tvalue = value.toString();\n\t\t\t\t\t}\n\t\t\t\t\tparts.include = (\n\t\t\t\t\t\tgetNormalizedCommaSeparable( value ) ?? []\n\t\t\t\t\t).map( Number );\n\t\t\t\t\t// Normalize value for `stableKey`.\n\t\t\t\t\tvalue = parts.include.join();\n\t\t\t\t}\n\n\t\t\t\t// While it could be any deterministic string, for simplicity's\n\t\t\t\t// sake mimic querystring encoding for stable key.\n\t\t\t\t//\n\t\t\t\t// TODO: For consistency with PHP implementation, addQueryArgs\n\t\t\t\t// should accept a key value pair, which may optimize its\n\t\t\t\t// implementation for our use here, vs. iterating an object\n\t\t\t\t// with only a single key.\n\t\t\t\tparts.stableKey +=\n\t\t\t\t\t( parts.stableKey ? '&' : '' ) +\n\t\t\t\t\taddQueryArgs( '', { [ key ]: value } ).slice( 1 );\n\t\t}\n\t}\n\n\treturn parts;\n}\n\nexport default withWeakMapCache( getQueryParts );\n","/**\n * External dependencies\n */\nimport { map, flowRight, omit, filter, mapValues } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tconservativeMapItem,\n\tifMatchingAction,\n\treplaceAction,\n\tonSubKey,\n} from '../utils';\nimport { DEFAULT_ENTITY_KEY } from '../entities';\nimport getQueryParts from './get-query-parts';\n\nfunction getContextFromAction( action ) {\n\tconst { query } = action;\n\tif ( ! query ) {\n\t\treturn 'default';\n\t}\n\n\tconst queryParts = getQueryParts( query );\n\treturn queryParts.context;\n}\n\n/**\n * Returns a merged array of item IDs, given details of the received paginated\n * items. The array is sparse-like with `undefined` entries where holes exist.\n *\n * @param {?Array<number>} itemIds     Original item IDs (default empty array).\n * @param {number[]}       nextItemIds Item IDs to merge.\n * @param {number}         page        Page of items merged.\n * @param {number}         perPage     Number of items per page.\n *\n * @return {number[]} Merged array of item IDs.\n */\nexport function getMergedItemIds( itemIds, nextItemIds, page, perPage ) {\n\tconst receivedAllIds = page === 1 && perPage === -1;\n\tif ( receivedAllIds ) {\n\t\treturn nextItemIds;\n\t}\n\tconst nextItemIdsStartIndex = ( page - 1 ) * perPage;\n\n\t// If later page has already been received, default to the larger known\n\t// size of the existing array, else calculate as extending the existing.\n\tconst size = Math.max(\n\t\titemIds?.length ?? 0,\n\t\tnextItemIdsStartIndex + nextItemIds.length\n\t);\n\n\t// Preallocate array since size is known.\n\tconst mergedItemIds = new Array( size );\n\n\tfor ( let i = 0; i < size; i++ ) {\n\t\t// Preserve existing item ID except for subset of range of next items.\n\t\tconst isInNextItemsRange =\n\t\t\ti >= nextItemIdsStartIndex &&\n\t\t\ti < nextItemIdsStartIndex + nextItemIds.length;\n\n\t\tmergedItemIds[ i ] = isInNextItemsRange\n\t\t\t? nextItemIds[ i - nextItemIdsStartIndex ]\n\t\t\t: itemIds?.[ i ];\n\t}\n\n\treturn mergedItemIds;\n}\n\n/**\n * Reducer tracking items state, keyed by ID. Items are assumed to be normal,\n * where identifiers are common across all queries.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Next state.\n */\nexport function items( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_ITEMS': {\n\t\t\tconst context = getContextFromAction( action );\n\t\t\tconst key = action.key || DEFAULT_ENTITY_KEY;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ context ]: {\n\t\t\t\t\t...state[ context ],\n\t\t\t\t\t...action.items.reduce( ( accumulator, value ) => {\n\t\t\t\t\t\tconst itemId = value[ key ];\n\t\t\t\t\t\taccumulator[ itemId ] = conservativeMapItem(\n\t\t\t\t\t\t\tstate?.[ context ]?.[ itemId ],\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn accumulator;\n\t\t\t\t\t}, {} ),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\tcase 'REMOVE_ITEMS':\n\t\t\treturn mapValues( state, ( contextState ) =>\n\t\t\t\tomit( contextState, action.itemIds )\n\t\t\t);\n\t}\n\treturn state;\n}\n\n/**\n * Reducer tracking item completeness, keyed by ID. A complete item is one for\n * which all fields are known. This is used in supporting `_fields` queries,\n * where not all properties associated with an entity are necessarily returned.\n * In such cases, completeness is used as an indication of whether it would be\n * safe to use queried data for a non-`_fields`-limited request.\n *\n * @param {Object<string,Object<string,boolean>>} state  Current state.\n * @param {Object}                                action Dispatched action.\n *\n * @return {Object<string,Object<string,boolean>>} Next state.\n */\nexport function itemIsComplete( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_ITEMS': {\n\t\t\tconst context = getContextFromAction( action );\n\t\t\tconst { query, key = DEFAULT_ENTITY_KEY } = action;\n\n\t\t\t// An item is considered complete if it is received without an associated\n\t\t\t// fields query. Ideally, this would be implemented in such a way where the\n\t\t\t// complete aggregate of all fields would satisfy completeness. Since the\n\t\t\t// fields are not consistent across all entities, this would require\n\t\t\t// introspection on the REST schema for each entity to know which fields\n\t\t\t// compose a complete item for that entity.\n\t\t\tconst queryParts = query ? getQueryParts( query ) : {};\n\t\t\tconst isCompleteQuery =\n\t\t\t\t! query || ! Array.isArray( queryParts.fields );\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ context ]: {\n\t\t\t\t\t...state[ context ],\n\t\t\t\t\t...action.items.reduce( ( result, item ) => {\n\t\t\t\t\t\tconst itemId = item[ key ];\n\n\t\t\t\t\t\t// Defer to completeness if already assigned. Technically the\n\t\t\t\t\t\t// data may be outdated if receiving items for a field subset.\n\t\t\t\t\t\tresult[ itemId ] =\n\t\t\t\t\t\t\tstate?.[ context ]?.[ itemId ] || isCompleteQuery;\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}, {} ),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\tcase 'REMOVE_ITEMS':\n\t\t\treturn mapValues( state, ( contextState ) =>\n\t\t\t\tomit( contextState, action.itemIds )\n\t\t\t);\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer tracking queries state, keyed by stable query key. Each reducer\n * query object includes `itemIds` and `requestingPageByPerPage`.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Next state.\n */\nconst receiveQueries = flowRight( [\n\t// Limit to matching action type so we don't attempt to replace action on\n\t// an unhandled action.\n\tifMatchingAction( ( action ) => 'query' in action ),\n\n\t// Inject query parts into action for use both in `onSubKey` and reducer.\n\treplaceAction( ( action ) => {\n\t\t// `ifMatchingAction` still passes on initialization, where state is\n\t\t// undefined and a query is not assigned. Avoid attempting to parse\n\t\t// parts. `onSubKey` will omit by lack of `stableKey`.\n\t\tif ( action.query ) {\n\t\t\treturn {\n\t\t\t\t...action,\n\t\t\t\t...getQueryParts( action.query ),\n\t\t\t};\n\t\t}\n\n\t\treturn action;\n\t} ),\n\n\tonSubKey( 'context' ),\n\n\t// Queries shape is shared, but keyed by query `stableKey` part. Original\n\t// reducer tracks only a single query object.\n\tonSubKey( 'stableKey' ),\n] )( ( state = null, action ) => {\n\tconst { type, page, perPage, key = DEFAULT_ENTITY_KEY } = action;\n\n\tif ( type !== 'RECEIVE_ITEMS' ) {\n\t\treturn state;\n\t}\n\n\treturn getMergedItemIds(\n\t\tstate || [],\n\t\tmap( action.items, key ),\n\t\tpage,\n\t\tperPage\n\t);\n} );\n\n/**\n * Reducer tracking queries state.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Next state.\n */\nconst queries = ( state = {}, action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_ITEMS':\n\t\t\treturn receiveQueries( state, action );\n\t\tcase 'REMOVE_ITEMS':\n\t\t\tconst removedItems = action.itemIds.reduce( ( result, itemId ) => {\n\t\t\t\tresult[ itemId ] = true;\n\t\t\t\treturn result;\n\t\t\t}, {} );\n\n\t\t\treturn mapValues( state, ( contextQueries ) => {\n\t\t\t\treturn mapValues( contextQueries, ( queryItems ) => {\n\t\t\t\t\treturn filter( queryItems, ( queryId ) => {\n\t\t\t\t\t\treturn ! removedItems[ queryId ];\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t} );\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default combineReducers( {\n\titems,\n\titemIsComplete,\n\tqueries,\n} );\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport EquivalentKeyMap from 'equivalent-key-map';\nimport { get, set } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport getQueryParts from './get-query-parts';\n\n/**\n * Cache of state keys to EquivalentKeyMap where the inner map tracks queries\n * to their resulting items set. WeakMap allows garbage collection on expired\n * state references.\n *\n * @type {WeakMap<Object,EquivalentKeyMap>}\n */\nconst queriedItemsCacheByState = new WeakMap();\n\n/**\n * Returns items for a given query, or null if the items are not known.\n *\n * @param {Object}  state State object.\n * @param {?Object} query Optional query.\n *\n * @return {?Array} Query items.\n */\nfunction getQueriedItemsUncached( state, query ) {\n\tconst {\n\t\tstableKey,\n\t\tpage,\n\t\tperPage,\n\t\tinclude,\n\t\tfields,\n\t\tcontext,\n\t} = getQueryParts( query );\n\tlet itemIds;\n\n\tif ( state.queries?.[ context ]?.[ stableKey ] ) {\n\t\titemIds = state.queries[ context ][ stableKey ];\n\t}\n\n\tif ( ! itemIds ) {\n\t\treturn null;\n\t}\n\n\tconst startOffset = perPage === -1 ? 0 : ( page - 1 ) * perPage;\n\tconst endOffset =\n\t\tperPage === -1\n\t\t\t? itemIds.length\n\t\t\t: Math.min( startOffset + perPage, itemIds.length );\n\n\tconst items = [];\n\tfor ( let i = startOffset; i < endOffset; i++ ) {\n\t\tconst itemId = itemIds[ i ];\n\t\tif ( Array.isArray( include ) && ! include.includes( itemId ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Having a target item ID doesn't guarantee that this object has been queried.\n\t\tif ( ! state.items[ context ]?.hasOwnProperty( itemId ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = state.items[ context ][ itemId ];\n\n\t\tlet filteredItem;\n\t\tif ( Array.isArray( fields ) ) {\n\t\t\tfilteredItem = {};\n\n\t\t\tfor ( let f = 0; f < fields.length; f++ ) {\n\t\t\t\tconst field = fields[ f ].split( '.' );\n\t\t\t\tconst value = get( item, field );\n\t\t\t\tset( filteredItem, field, value );\n\t\t\t}\n\t\t} else {\n\t\t\t// If expecting a complete item, validate that completeness, or\n\t\t\t// otherwise abort.\n\t\t\tif ( ! state.itemIsComplete[ context ]?.[ itemId ] ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tfilteredItem = item;\n\t\t}\n\n\t\titems.push( filteredItem );\n\t}\n\n\treturn items;\n}\n\n/**\n * Returns items for a given query, or null if the items are not known. Caches\n * result both per state (by reference) and per query (by deep equality).\n * The caching approach is intended to be durable to query objects which are\n * deeply but not referentially equal, since otherwise:\n *\n * `getQueriedItems( state, {} ) !== getQueriedItems( state, {} )`\n *\n * @param {Object}  state State object.\n * @param {?Object} query Optional query.\n *\n * @return {?Array} Query items.\n */\nexport const getQueriedItems = createSelector( ( state, query = {} ) => {\n\tlet queriedItemsCache = queriedItemsCacheByState.get( state );\n\tif ( queriedItemsCache ) {\n\t\tconst queriedItems = queriedItemsCache.get( query );\n\t\tif ( queriedItems !== undefined ) {\n\t\t\treturn queriedItems;\n\t\t}\n\t} else {\n\t\tqueriedItemsCache = new EquivalentKeyMap();\n\t\tqueriedItemsCacheByState.set( state, queriedItemsCache );\n\t}\n\n\tconst items = getQueriedItemsUncached( state, query );\n\tqueriedItemsCache.set( query, items );\n\treturn items;\n} );\n","/**\n * External dependencies\n */\nimport { keyBy, map, groupBy, flowRight, isEqual, get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\n\n/**\n * Internal dependencies\n */\nimport { ifMatchingAction, replaceAction } from './utils';\nimport { reducer as queriedDataReducer } from './queried-data';\nimport { rootEntitiesConfig, DEFAULT_ENTITY_KEY } from './entities';\n\n/** @typedef {import('./types').AnyFunction} AnyFunction */\n\n/**\n * Reducer managing terms state. Keyed by taxonomy slug, the value is either\n * undefined (if no request has been made for given taxonomy), null (if a\n * request is in-flight for given taxonomy), or the array of terms for the\n * taxonomy.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function terms( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_TERMS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.taxonomy ]: action.terms,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing authors state. Keyed by id.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function users( state = { byId: {}, queries: {} }, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_USER_QUERY':\n\t\t\treturn {\n\t\t\t\tbyId: {\n\t\t\t\t\t...state.byId,\n\t\t\t\t\t...keyBy( action.users, 'id' ),\n\t\t\t\t},\n\t\t\t\tqueries: {\n\t\t\t\t\t...state.queries,\n\t\t\t\t\t[ action.queryID ]: map(\n\t\t\t\t\t\taction.users,\n\t\t\t\t\t\t( user ) => user.id\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing current user state.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function currentUser( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_CURRENT_USER':\n\t\t\treturn action.currentUser;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing taxonomies.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function taxonomies( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_TAXONOMIES':\n\t\t\treturn action.taxonomies;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the current theme.\n *\n * @param {string|undefined} state  Current state.\n * @param {Object}           action Dispatched action.\n *\n * @return {string|undefined} Updated state.\n */\nexport function currentTheme( state = undefined, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_CURRENT_THEME':\n\t\t\treturn action.currentTheme.stylesheet;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the current global styles id.\n *\n * @param {string|undefined} state  Current state.\n * @param {Object}           action Dispatched action.\n *\n * @return {string|undefined} Updated state.\n */\nexport function currentGlobalStylesId( state = undefined, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_CURRENT_GLOBAL_STYLES_ID':\n\t\t\treturn action.id;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the theme base global styles.\n *\n * @param {Record<string, object>} state  Current state.\n * @param {Object}                 action Dispatched action.\n *\n * @return {Record<string, object>} Updated state.\n */\nexport function themeBaseGlobalStyles( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_THEME_GLOBAL_STYLES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.stylesheet ]: action.globalStyles,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the theme global styles variations.\n *\n * @param {Record<string, object>} state  Current state.\n * @param {Object}                 action Dispatched action.\n *\n * @return {Record<string, object>} Updated state.\n */\nexport function themeGlobalStyleVariations( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_THEME_GLOBAL_STYLE_VARIATIONS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.stylesheet ]: action.variations,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Higher Order Reducer for a given entity config. It supports:\n *\n *  - Fetching\n *  - Editing\n *  - Saving\n *\n * @param {Object} entityConfig Entity config.\n *\n * @return {AnyFunction} Reducer.\n */\nfunction entity( entityConfig ) {\n\treturn flowRight( [\n\t\t// Limit to matching action type so we don't attempt to replace action on\n\t\t// an unhandled action.\n\t\tifMatchingAction(\n\t\t\t( action ) =>\n\t\t\t\taction.name &&\n\t\t\t\taction.kind &&\n\t\t\t\taction.name === entityConfig.name &&\n\t\t\t\taction.kind === entityConfig.kind\n\t\t),\n\n\t\t// Inject the entity config into the action.\n\t\treplaceAction( ( action ) => {\n\t\t\treturn {\n\t\t\t\t...action,\n\t\t\t\tkey: entityConfig.key || DEFAULT_ENTITY_KEY,\n\t\t\t};\n\t\t} ),\n\t] )(\n\t\tcombineReducers( {\n\t\t\tqueriedData: queriedDataReducer,\n\n\t\t\tedits: ( state = {}, action ) => {\n\t\t\t\tswitch ( action.type ) {\n\t\t\t\t\tcase 'RECEIVE_ITEMS':\n\t\t\t\t\t\tconst context = action?.query?.context ?? 'default';\n\t\t\t\t\t\tif ( context !== 'default' ) {\n\t\t\t\t\t\t\treturn state;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst nextState = { ...state };\n\n\t\t\t\t\t\tfor ( const record of action.items ) {\n\t\t\t\t\t\t\tconst recordId = record[ action.key ];\n\t\t\t\t\t\t\tconst edits = nextState[ recordId ];\n\t\t\t\t\t\t\tif ( ! edits ) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst nextEdits = Object.keys( edits ).reduce(\n\t\t\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\t\t\t// If the edited value is still different to the persisted value,\n\t\t\t\t\t\t\t\t\t// keep the edited value in edits.\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t// Edits are the \"raw\" attribute values, but records may have\n\t\t\t\t\t\t\t\t\t\t// objects with more properties, so we use `get` here for the\n\t\t\t\t\t\t\t\t\t\t// comparison.\n\t\t\t\t\t\t\t\t\t\t! isEqual(\n\t\t\t\t\t\t\t\t\t\t\tedits[ key ],\n\t\t\t\t\t\t\t\t\t\t\tget(\n\t\t\t\t\t\t\t\t\t\t\t\trecord[ key ],\n\t\t\t\t\t\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\t\t\t\t\t\trecord[ key ]\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t// Sometimes the server alters the sent value which means\n\t\t\t\t\t\t\t\t\t\t// we need to also remove the edits before the api request.\n\t\t\t\t\t\t\t\t\t\t( ! action.persistedEdits ||\n\t\t\t\t\t\t\t\t\t\t\t! isEqual(\n\t\t\t\t\t\t\t\t\t\t\t\tedits[ key ],\n\t\t\t\t\t\t\t\t\t\t\t\taction.persistedEdits[ key ]\n\t\t\t\t\t\t\t\t\t\t\t) )\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tacc[ key ] = edits[ key ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif ( Object.keys( nextEdits ).length ) {\n\t\t\t\t\t\t\t\tnextState[ recordId ] = nextEdits;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdelete nextState[ recordId ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn nextState;\n\n\t\t\t\t\tcase 'EDIT_ENTITY_RECORD':\n\t\t\t\t\t\tconst nextEdits = {\n\t\t\t\t\t\t\t...state[ action.recordId ],\n\t\t\t\t\t\t\t...action.edits,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tObject.keys( nextEdits ).forEach( ( key ) => {\n\t\t\t\t\t\t\t// Delete cleared edits so that the properties\n\t\t\t\t\t\t\t// are not considered dirty.\n\t\t\t\t\t\t\tif ( nextEdits[ key ] === undefined ) {\n\t\t\t\t\t\t\t\tdelete nextEdits[ key ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t[ action.recordId ]: nextEdits,\n\t\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\n\t\t\tsaving: ( state = {}, action ) => {\n\t\t\t\tswitch ( action.type ) {\n\t\t\t\t\tcase 'SAVE_ENTITY_RECORD_START':\n\t\t\t\t\tcase 'SAVE_ENTITY_RECORD_FINISH':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t[ action.recordId ]: {\n\t\t\t\t\t\t\t\tpending:\n\t\t\t\t\t\t\t\t\taction.type === 'SAVE_ENTITY_RECORD_START',\n\t\t\t\t\t\t\t\terror: action.error,\n\t\t\t\t\t\t\t\tisAutosave: action.isAutosave,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\n\t\t\tdeleting: ( state = {}, action ) => {\n\t\t\t\tswitch ( action.type ) {\n\t\t\t\t\tcase 'DELETE_ENTITY_RECORD_START':\n\t\t\t\t\tcase 'DELETE_ENTITY_RECORD_FINISH':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t[ action.recordId ]: {\n\t\t\t\t\t\t\t\tpending:\n\t\t\t\t\t\t\t\t\taction.type ===\n\t\t\t\t\t\t\t\t\t'DELETE_ENTITY_RECORD_START',\n\t\t\t\t\t\t\t\terror: action.error,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\t\t} )\n\t);\n}\n\n/**\n * Reducer keeping track of the registered entities.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function entitiesConfig( state = rootEntitiesConfig, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_ENTITIES':\n\t\t\treturn [ ...state, ...action.entities ];\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer keeping track of the registered entities config and data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const entities = ( state = {}, action ) => {\n\tconst newConfig = entitiesConfig( state.config, action );\n\n\t// Generates a dynamic reducer for the entities.\n\tlet entitiesDataReducer = state.reducer;\n\tif ( ! entitiesDataReducer || newConfig !== state.config ) {\n\t\tconst entitiesByKind = groupBy( newConfig, 'kind' );\n\t\tentitiesDataReducer = combineReducers(\n\t\t\tObject.entries( entitiesByKind ).reduce(\n\t\t\t\t( memo, [ kind, subEntities ] ) => {\n\t\t\t\t\tconst kindReducer = combineReducers(\n\t\t\t\t\t\tsubEntities.reduce(\n\t\t\t\t\t\t\t( kindMemo, entityConfig ) => ( {\n\t\t\t\t\t\t\t\t...kindMemo,\n\t\t\t\t\t\t\t\t[ entityConfig.name ]: entity( entityConfig ),\n\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\tmemo[ kind ] = kindReducer;\n\t\t\t\t\treturn memo;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t)\n\t\t);\n\t}\n\n\tconst newData = entitiesDataReducer( state.records, action );\n\n\tif (\n\t\tnewData === state.records &&\n\t\tnewConfig === state.config &&\n\t\tentitiesDataReducer === state.reducer\n\t) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\treducer: entitiesDataReducer,\n\t\trecords: newData,\n\t\tconfig: newConfig,\n\t};\n};\n\n/**\n * @typedef {Object} UndoStateMeta\n *\n * @property {number} offset          Where in the undo stack we are.\n * @property {Object} [flattenedUndo] Flattened form of undo stack.\n */\n\n/** @typedef {Array<Object> & UndoStateMeta} UndoState */\n\n/**\n * @type {UndoState}\n *\n * @todo Given how we use this we might want to make a custom class for it.\n */\nconst UNDO_INITIAL_STATE = Object.assign( [], { offset: 0 } );\n\n/** @type {Object} */\nlet lastEditAction;\n\n/**\n * Reducer keeping track of entity edit undo history.\n *\n * @param {UndoState} state  Current state.\n * @param {Object}    action Dispatched action.\n *\n * @return {UndoState} Updated state.\n */\nexport function undo( state = UNDO_INITIAL_STATE, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'EDIT_ENTITY_RECORD':\n\t\tcase 'CREATE_UNDO_LEVEL':\n\t\t\tlet isCreateUndoLevel = action.type === 'CREATE_UNDO_LEVEL';\n\t\t\tconst isUndoOrRedo =\n\t\t\t\t! isCreateUndoLevel &&\n\t\t\t\t( action.meta.isUndo || action.meta.isRedo );\n\t\t\tif ( isCreateUndoLevel ) {\n\t\t\t\taction = lastEditAction;\n\t\t\t} else if ( ! isUndoOrRedo ) {\n\t\t\t\t// Don't lose the last edit cache if the new one only has transient edits.\n\t\t\t\t// Transient edits don't create new levels so updating the cache would make\n\t\t\t\t// us skip an edit later when creating levels explicitly.\n\t\t\t\tif (\n\t\t\t\t\tObject.keys( action.edits ).some(\n\t\t\t\t\t\t( key ) => ! action.transientEdits[ key ]\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tlastEditAction = action;\n\t\t\t\t} else {\n\t\t\t\t\tlastEditAction = {\n\t\t\t\t\t\t...action,\n\t\t\t\t\t\tedits: {\n\t\t\t\t\t\t\t...( lastEditAction && lastEditAction.edits ),\n\t\t\t\t\t\t\t...action.edits,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {UndoState} */\n\t\t\tlet nextState;\n\n\t\t\tif ( isUndoOrRedo ) {\n\t\t\t\t// @ts-ignore we might consider using Object.assign({}, state)\n\t\t\t\tnextState = [ ...state ];\n\t\t\t\tnextState.offset =\n\t\t\t\t\tstate.offset + ( action.meta.isUndo ? -1 : 1 );\n\n\t\t\t\tif ( state.flattenedUndo ) {\n\t\t\t\t\t// The first undo in a sequence of undos might happen while we have\n\t\t\t\t\t// flattened undos in state. If this is the case, we want execution\n\t\t\t\t\t// to continue as if we were creating an explicit undo level. This\n\t\t\t\t\t// will result in an extra undo level being appended with the flattened\n\t\t\t\t\t// undo values.\n\t\t\t\t\t// We also have to take into account if the `lastEditAction` had opted out\n\t\t\t\t\t// of being tracked in undo history, like the action that persists the latest\n\t\t\t\t\t// content right before saving. In that case we have to update the `lastEditAction`\n\t\t\t\t\t// to avoid returning early before applying the existing flattened undos.\n\t\t\t\t\tisCreateUndoLevel = true;\n\t\t\t\t\tif ( ! lastEditAction.meta.undo ) {\n\t\t\t\t\t\tlastEditAction.meta.undo = {\n\t\t\t\t\t\t\tedits: {},\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\taction = lastEditAction;\n\t\t\t\t} else {\n\t\t\t\t\treturn nextState;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! action.meta.undo ) {\n\t\t\t\treturn state;\n\t\t\t}\n\n\t\t\t// Transient edits don't create an undo level, but are\n\t\t\t// reachable in the next meaningful edit to which they\n\t\t\t// are merged. They are defined in the entity's config.\n\t\t\tif (\n\t\t\t\t! isCreateUndoLevel &&\n\t\t\t\t! Object.keys( action.edits ).some(\n\t\t\t\t\t( key ) => ! action.transientEdits[ key ]\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// @ts-ignore we might consider using Object.assign({}, state)\n\t\t\t\tnextState = [ ...state ];\n\t\t\t\tnextState.flattenedUndo = {\n\t\t\t\t\t...state.flattenedUndo,\n\t\t\t\t\t...action.edits,\n\t\t\t\t};\n\t\t\t\tnextState.offset = state.offset;\n\t\t\t\treturn nextState;\n\t\t\t}\n\n\t\t\t// Clear potential redos, because this only supports linear history.\n\t\t\tnextState =\n\t\t\t\t// @ts-ignore this needs additional cleanup, probably involving code-level changes\n\t\t\t\tnextState || state.slice( 0, state.offset || undefined );\n\t\t\tnextState.offset = nextState.offset || 0;\n\t\t\tnextState.pop();\n\t\t\tif ( ! isCreateUndoLevel ) {\n\t\t\t\tnextState.push( {\n\t\t\t\t\tkind: action.meta.undo.kind,\n\t\t\t\t\tname: action.meta.undo.name,\n\t\t\t\t\trecordId: action.meta.undo.recordId,\n\t\t\t\t\tedits: {\n\t\t\t\t\t\t...state.flattenedUndo,\n\t\t\t\t\t\t...action.meta.undo.edits,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t\t// When an edit is a function it's an optimization to avoid running some expensive operation.\n\t\t\t// We can't rely on the function references being the same so we opt out of comparing them here.\n\t\t\tconst comparisonUndoEdits = Object.values(\n\t\t\t\taction.meta.undo.edits\n\t\t\t).filter( ( edit ) => typeof edit !== 'function' );\n\t\t\tconst comparisonEdits = Object.values( action.edits ).filter(\n\t\t\t\t( edit ) => typeof edit !== 'function'\n\t\t\t);\n\t\t\tif ( ! isShallowEqual( comparisonUndoEdits, comparisonEdits ) ) {\n\t\t\t\tnextState.push( {\n\t\t\t\t\tkind: action.kind,\n\t\t\t\t\tname: action.name,\n\t\t\t\t\trecordId: action.recordId,\n\t\t\t\t\tedits: isCreateUndoLevel\n\t\t\t\t\t\t? { ...state.flattenedUndo, ...action.edits }\n\t\t\t\t\t\t: action.edits,\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn nextState;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing embed preview data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function embedPreviews( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_EMBED_PREVIEW':\n\t\t\tconst { url, preview } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ url ]: preview,\n\t\t\t};\n\t}\n\treturn state;\n}\n\n/**\n * State which tracks whether the user can perform an action on a REST\n * resource.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function userPermissions( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_USER_PERMISSION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.key ]: action.isAllowed,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning autosaves keyed by their parent's post id.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function autosaves( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_AUTOSAVES':\n\t\t\tconst { postId, autosaves: autosavesData } = action;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ postId ]: autosavesData,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\nexport function blockPatterns( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_BLOCK_PATTERNS':\n\t\t\treturn action.patterns;\n\t}\n\n\treturn state;\n}\n\nexport function blockPatternCategories( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_BLOCK_PATTERN_CATEGORIES':\n\t\t\treturn action.categories;\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tterms,\n\tusers,\n\tcurrentTheme,\n\tcurrentGlobalStylesId,\n\tcurrentUser,\n\tthemeGlobalStyleVariations,\n\tthemeBaseGlobalStyles,\n\ttaxonomies,\n\tentities,\n\tundo,\n\tembedPreviews,\n\tuserPermissions,\n\tautosaves,\n\tblockPatterns,\n\tblockPatternCategories,\n} );\n","/**\n * External dependencies\n */\nimport { find, includes, get, compact, uniq, map, mapKeys } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from './name';\nimport { getOrLoadEntitiesConfig, DEFAULT_ENTITY_KEY } from './entities';\nimport { forwardResolver, getNormalizedCommaSeparable } from './utils';\n\n/**\n * Requests authors from the REST API.\n *\n * @param {Object|undefined} query Optional object of query parameters to\n *                                 include with request.\n */\nexport const getAuthors = ( query ) => async ( { dispatch } ) => {\n\tconst path = addQueryArgs(\n\t\t'/wp/v2/users/?who=authors&per_page=100',\n\t\tquery\n\t);\n\tconst users = await apiFetch( { path } );\n\tdispatch.receiveUserQuery( path, users );\n};\n\n/**\n * Requests the current user from the REST API.\n */\nexport const getCurrentUser = () => async ( { dispatch } ) => {\n\tconst currentUser = await apiFetch( { path: '/wp/v2/users/me' } );\n\tdispatch.receiveCurrentUser( currentUser );\n};\n\n/**\n * Requests an entity's record from the REST API.\n *\n * @param {string}           kind  Entity kind.\n * @param {string}           name  Entity name.\n * @param {number|string}    key   Record's key\n * @param {Object|undefined} query Optional object of query parameters to\n *                                 include with request.\n */\nexport const getEntityRecord = ( kind, name, key = '', query ) => async ( {\n\tselect,\n\tdispatch,\n} ) => {\n\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind ) );\n\tconst entityConfig = find( configs, { kind, name } );\n\tif ( ! entityConfig || entityConfig?.__experimentalNoFetch ) {\n\t\treturn;\n\t}\n\n\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\tSTORE_NAME,\n\t\t[ 'entities', 'records', kind, name, key ],\n\t\t{ exclusive: false }\n\t);\n\n\ttry {\n\t\tif ( query !== undefined && query._fields ) {\n\t\t\t// If requesting specific fields, items and query association to said\n\t\t\t// records are stored by ID reference. Thus, fields must always include\n\t\t\t// the ID.\n\t\t\tquery = {\n\t\t\t\t...query,\n\t\t\t\t_fields: uniq( [\n\t\t\t\t\t...( getNormalizedCommaSeparable( query._fields ) || [] ),\n\t\t\t\t\tentityConfig.key || DEFAULT_ENTITY_KEY,\n\t\t\t\t] ).join(),\n\t\t\t};\n\t\t}\n\n\t\t// Disable reason: While true that an early return could leave `path`\n\t\t// unused, it's important that path is derived using the query prior to\n\t\t// additional query modifications in the condition below, since those\n\t\t// modifications are relevant to how the data is tracked in state, and not\n\t\t// for how the request is made to the REST API.\n\n\t\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\t\tconst path = addQueryArgs(\n\t\t\tentityConfig.baseURL + ( key ? '/' + key : '' ),\n\t\t\t{\n\t\t\t\t...entityConfig.baseURLParams,\n\t\t\t\t...query,\n\t\t\t}\n\t\t);\n\n\t\tif ( query !== undefined ) {\n\t\t\tquery = { ...query, include: [ key ] };\n\n\t\t\t// The resolution cache won't consider query as reusable based on the\n\t\t\t// fields, so it's tested here, prior to initiating the REST request,\n\t\t\t// and without causing `getEntityRecords` resolution to occur.\n\t\t\tconst hasRecords = select.hasEntityRecords( kind, name, query );\n\t\t\tif ( hasRecords ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst record = await apiFetch( { path } );\n\t\tdispatch.receiveEntityRecords( kind, name, record, query );\n\t} finally {\n\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t}\n};\n\n/**\n * Requests an entity's record from the REST API.\n */\nexport const getRawEntityRecord = forwardResolver( 'getEntityRecord' );\n\n/**\n * Requests an entity's record from the REST API.\n */\nexport const getEditedEntityRecord = forwardResolver( 'getEntityRecord' );\n\n/**\n * Requests the entity's records from the REST API.\n *\n * @param {string}  kind  Entity kind.\n * @param {string}  name  Entity name.\n * @param {Object?} query Query Object.\n */\nexport const getEntityRecords = ( kind, name, query = {} ) => async ( {\n\tdispatch,\n} ) => {\n\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind ) );\n\tconst entityConfig = find( configs, { kind, name } );\n\tif ( ! entityConfig || entityConfig?.__experimentalNoFetch ) {\n\t\treturn;\n\t}\n\n\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\tSTORE_NAME,\n\t\t[ 'entities', 'records', kind, name ],\n\t\t{ exclusive: false }\n\t);\n\n\ttry {\n\t\tif ( query._fields ) {\n\t\t\t// If requesting specific fields, items and query association to said\n\t\t\t// records are stored by ID reference. Thus, fields must always include\n\t\t\t// the ID.\n\t\t\tquery = {\n\t\t\t\t...query,\n\t\t\t\t_fields: uniq( [\n\t\t\t\t\t...( getNormalizedCommaSeparable( query._fields ) || [] ),\n\t\t\t\t\tentityConfig.key || DEFAULT_ENTITY_KEY,\n\t\t\t\t] ).join(),\n\t\t\t};\n\t\t}\n\n\t\tconst path = addQueryArgs( entityConfig.baseURL, {\n\t\t\t...entityConfig.baseURLParams,\n\t\t\t...query,\n\t\t} );\n\n\t\tlet records = Object.values( await apiFetch( { path } ) );\n\t\t// If we request fields but the result doesn't contain the fields,\n\t\t// explicitely set these fields as \"undefined\"\n\t\t// that way we consider the query \"fullfilled\".\n\t\tif ( query._fields ) {\n\t\t\trecords = records.map( ( record ) => {\n\t\t\t\tquery._fields.split( ',' ).forEach( ( field ) => {\n\t\t\t\t\tif ( ! record.hasOwnProperty( field ) ) {\n\t\t\t\t\t\trecord[ field ] = undefined;\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\treturn record;\n\t\t\t} );\n\t\t}\n\n\t\tdispatch.receiveEntityRecords( kind, name, records, query );\n\n\t\t// When requesting all fields, the list of results can be used to\n\t\t// resolve the `getEntityRecord` selector in addition to `getEntityRecords`.\n\t\t// See https://github.com/WordPress/gutenberg/pull/26575\n\t\tif ( ! query?._fields && ! query.context ) {\n\t\t\tconst key = entityConfig.key || DEFAULT_ENTITY_KEY;\n\t\t\tconst resolutionsArgs = records\n\t\t\t\t.filter( ( record ) => record[ key ] )\n\t\t\t\t.map( ( record ) => [ kind, name, record[ key ] ] );\n\n\t\t\tdispatch( {\n\t\t\t\ttype: 'START_RESOLUTIONS',\n\t\t\t\tselectorName: 'getEntityRecord',\n\t\t\t\targs: resolutionsArgs,\n\t\t\t} );\n\t\t\tdispatch( {\n\t\t\t\ttype: 'FINISH_RESOLUTIONS',\n\t\t\t\tselectorName: 'getEntityRecord',\n\t\t\t\targs: resolutionsArgs,\n\t\t\t} );\n\t\t}\n\t} finally {\n\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t}\n};\n\ngetEntityRecords.shouldInvalidate = ( action, kind, name ) => {\n\treturn (\n\t\t( action.type === 'RECEIVE_ITEMS' || action.type === 'REMOVE_ITEMS' ) &&\n\t\taction.invalidateCache &&\n\t\tkind === action.kind &&\n\t\tname === action.name\n\t);\n};\n\n/**\n * Requests the current theme.\n */\nexport const getCurrentTheme = () => async ( { dispatch, resolveSelect } ) => {\n\tconst activeThemes = await resolveSelect.getEntityRecords(\n\t\t'root',\n\t\t'theme',\n\t\t{ status: 'active' }\n\t);\n\n\tdispatch.receiveCurrentTheme( activeThemes[ 0 ] );\n};\n\n/**\n * Requests theme supports data from the index.\n */\nexport const getThemeSupports = forwardResolver( 'getCurrentTheme' );\n\n/**\n * Requests a preview from the from the Embed API.\n *\n * @param {string} url URL to get the preview for.\n */\nexport const getEmbedPreview = ( url ) => async ( { dispatch } ) => {\n\ttry {\n\t\tconst embedProxyResponse = await apiFetch( {\n\t\t\tpath: addQueryArgs( '/oembed/1.0/proxy', { url } ),\n\t\t} );\n\t\tdispatch.receiveEmbedPreview( url, embedProxyResponse );\n\t} catch ( error ) {\n\t\t// Embed API 404s if the URL cannot be embedded, so we have to catch the error from the apiRequest here.\n\t\tdispatch.receiveEmbedPreview( url, false );\n\t}\n};\n\n/**\n * Checks whether the current user can perform the given action on the given\n * REST resource.\n *\n * @param {string}  action   Action to check. One of: 'create', 'read', 'update',\n *                           'delete'.\n * @param {string}  resource REST resource to check, e.g. 'media' or 'posts'.\n * @param {?string} id       ID of the rest resource to check.\n */\nexport const canUser = ( action, resource, id ) => async ( { dispatch } ) => {\n\tconst methods = {\n\t\tcreate: 'POST',\n\t\tread: 'GET',\n\t\tupdate: 'PUT',\n\t\tdelete: 'DELETE',\n\t};\n\n\tconst method = methods[ action ];\n\tif ( ! method ) {\n\t\tthrow new Error( `'${ action }' is not a valid action.` );\n\t}\n\n\tconst path = id ? `/wp/v2/${ resource }/${ id }` : `/wp/v2/${ resource }`;\n\n\tlet response;\n\ttry {\n\t\tresponse = await apiFetch( {\n\t\t\tpath,\n\t\t\tmethod: 'OPTIONS',\n\t\t\tparse: false,\n\t\t} );\n\t} catch ( error ) {\n\t\t// Do nothing if our OPTIONS request comes back with an API error (4xx or\n\t\t// 5xx). The previously determined isAllowed value will remain in the store.\n\t\treturn;\n\t}\n\n\t// Optional chaining operator is used here because the API requests don't\n\t// return the expected result in the native version. Instead, API requests\n\t// only return the result, without including response properties like the headers.\n\tconst allowHeader = response.headers?.get( 'allow' );\n\tconst key = compact( [ action, resource, id ] ).join( '/' );\n\tconst isAllowed = includes( allowHeader, method );\n\tdispatch.receiveUserPermission( key, isAllowed );\n};\n\n/**\n * Checks whether the current user can perform the given action on the given\n * REST resource.\n *\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {string} recordId Record's id.\n */\nexport const canUserEditEntityRecord = ( kind, name, recordId ) => async ( {\n\tdispatch,\n} ) => {\n\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind ) );\n\tconst entityConfig = find( configs, { kind, name } );\n\tif ( ! entityConfig ) {\n\t\treturn;\n\t}\n\n\tconst resource = entityConfig.__unstable_rest_base;\n\tawait dispatch( canUser( 'update', resource, recordId ) );\n};\n\n/**\n * Request autosave data from the REST API.\n *\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n */\nexport const getAutosaves = ( postType, postId ) => async ( {\n\tdispatch,\n\tresolveSelect,\n} ) => {\n\tconst { rest_base: restBase } = await resolveSelect.getPostType( postType );\n\tconst autosaves = await apiFetch( {\n\t\tpath: `/wp/v2/${ restBase }/${ postId }/autosaves?context=edit`,\n\t} );\n\n\tif ( autosaves && autosaves.length ) {\n\t\tdispatch.receiveAutosaves( postId, autosaves );\n\t}\n};\n\n/**\n * Request autosave data from the REST API.\n *\n * This resolver exists to ensure the underlying autosaves are fetched via\n * `getAutosaves` when a call to the `getAutosave` selector is made.\n *\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n */\nexport const getAutosave = ( postType, postId ) => async ( {\n\tresolveSelect,\n} ) => {\n\tawait resolveSelect.getAutosaves( postType, postId );\n};\n\n/**\n * Retrieve the frontend template used for a given link.\n *\n * @param {string} link Link.\n */\nexport const __experimentalGetTemplateForLink = ( link ) => async ( {\n\tdispatch,\n\tresolveSelect,\n} ) => {\n\t// Ideally this should be using an apiFetch call\n\t// We could potentially do so by adding a \"filter\" to the `wp_template` end point.\n\t// Also it seems the returned object is not a regular REST API post type.\n\tlet template;\n\ttry {\n\t\ttemplate = await window\n\t\t\t.fetch( addQueryArgs( link, { '_wp-find-template': true } ) )\n\t\t\t.then( ( res ) => res.json() )\n\t\t\t.then( ( { data } ) => data );\n\t} catch ( e ) {\n\t\t// For non-FSE themes, it is possible that this request returns an error.\n\t}\n\n\tif ( ! template ) {\n\t\treturn;\n\t}\n\n\tconst record = await resolveSelect.getEntityRecord(\n\t\t'postType',\n\t\t'wp_template',\n\t\ttemplate.id\n\t);\n\n\tif ( record ) {\n\t\tdispatch.receiveEntityRecords( 'postType', 'wp_template', [ record ], {\n\t\t\t'find-template': link,\n\t\t} );\n\t}\n};\n\n__experimentalGetTemplateForLink.shouldInvalidate = ( action ) => {\n\treturn (\n\t\t( action.type === 'RECEIVE_ITEMS' || action.type === 'REMOVE_ITEMS' ) &&\n\t\taction.invalidateCache &&\n\t\taction.kind === 'postType' &&\n\t\taction.name === 'wp_template'\n\t);\n};\n\nexport const __experimentalGetCurrentGlobalStylesId = () => async ( {\n\tdispatch,\n\tresolveSelect,\n} ) => {\n\tconst activeThemes = await resolveSelect.getEntityRecords(\n\t\t'root',\n\t\t'theme',\n\t\t{ status: 'active' }\n\t);\n\tconst globalStylesURL = get( activeThemes, [\n\t\t0,\n\t\t'_links',\n\t\t'wp:user-global-styles',\n\t\t0,\n\t\t'href',\n\t] );\n\tif ( globalStylesURL ) {\n\t\tconst globalStylesObject = await apiFetch( {\n\t\t\turl: globalStylesURL,\n\t\t} );\n\t\tdispatch.__experimentalReceiveCurrentGlobalStylesId(\n\t\t\tglobalStylesObject.id\n\t\t);\n\t}\n};\n\nexport const __experimentalGetCurrentThemeBaseGlobalStyles = () => async ( {\n\tresolveSelect,\n\tdispatch,\n} ) => {\n\tconst currentTheme = await resolveSelect.getCurrentTheme();\n\tconst themeGlobalStyles = await apiFetch( {\n\t\tpath: `/wp/v2/global-styles/themes/${ currentTheme.stylesheet }`,\n\t} );\n\tdispatch.__experimentalReceiveThemeBaseGlobalStyles(\n\t\tcurrentTheme.stylesheet,\n\t\tthemeGlobalStyles\n\t);\n};\n\nexport const __experimentalGetCurrentThemeGlobalStylesVariations = () => async ( {\n\tresolveSelect,\n\tdispatch,\n} ) => {\n\tconst currentTheme = await resolveSelect.getCurrentTheme();\n\tconst variations = await apiFetch( {\n\t\tpath: `/wp/v2/global-styles/themes/${ currentTheme.stylesheet }/variations`,\n\t} );\n\tdispatch.__experimentalReceiveThemeGlobalStyleVariations(\n\t\tcurrentTheme.stylesheet,\n\t\tvariations\n\t);\n};\n\nexport const getBlockPatterns = () => async ( { dispatch } ) => {\n\tconst restPatterns = await apiFetch( {\n\t\tpath: '/wp/v2/block-patterns/patterns',\n\t} );\n\tconst patterns = map( restPatterns, ( pattern ) =>\n\t\tmapKeys( pattern, ( value, key ) => {\n\t\t\tswitch ( key ) {\n\t\t\t\tcase 'block_types':\n\t\t\t\t\treturn 'blockTypes';\n\t\t\t\tcase 'viewport_width':\n\t\t\t\t\treturn 'viewportWidth';\n\t\t\t\tdefault:\n\t\t\t\t\treturn key;\n\t\t\t}\n\t\t} )\n\t);\n\tdispatch( { type: 'RECEIVE_BLOCK_PATTERNS', patterns } );\n};\n\nexport const getBlockPatternCategories = () => async ( { dispatch } ) => {\n\tconst categories = await apiFetch( {\n\t\tpath: '/wp/v2/block-patterns/categories',\n\t} );\n\tdispatch( { type: 'RECEIVE_BLOCK_PATTERN_CATEGORIES', categories } );\n};\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport { set, map, find, get, filter, compact } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\nimport { addQueryArgs } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from './name';\nimport { getQueriedItems } from './queried-data';\nimport { DEFAULT_ENTITY_KEY } from './entities';\nimport { getNormalizedCommaSeparable, isRawAttribute } from './utils';\n\n/**\n * Shared reference to an empty object for cases where it is important to avoid\n * returning a new object reference on every invocation, as in a connected or\n * other pure component which performs `shouldComponentUpdate` check on props.\n * This should be used as a last resort, since the normalized data should be\n * maintained by the reducer result in state.\n */\nconst EMPTY_OBJECT = {};\n\n/**\n * Returns true if a request is in progress for embed preview data, or false\n * otherwise.\n *\n * @param {Object} state Data state.\n * @param {string} url   URL the preview would be for.\n *\n * @return {boolean} Whether a request is in progress for an embed preview.\n */\nexport const isRequestingEmbedPreview = createRegistrySelector(\n\t( select ) => ( state, url ) => {\n\t\treturn select( STORE_NAME ).isResolving( 'getEmbedPreview', [ url ] );\n\t}\n);\n\n/**\n * Returns all available authors.\n *\n * @deprecated since 11.3. Callers should use `select( 'core' ).getUsers({ who: 'authors' })` instead.\n *\n * @param {Object}           state Data state.\n * @param {Object|undefined} query Optional object of query parameters to\n *                                 include with request.\n * @return {Array} Authors list.\n */\nexport function getAuthors( state, query ) {\n\tdeprecated( \"select( 'core' ).getAuthors()\", {\n\t\tsince: '5.9',\n\t\talternative: \"select( 'core' ).getUsers({ who: 'authors' })\",\n\t} );\n\n\tconst path = addQueryArgs(\n\t\t'/wp/v2/users/?who=authors&per_page=100',\n\t\tquery\n\t);\n\treturn getUserQueryResults( state, path );\n}\n\n/**\n * Returns the current user.\n *\n * @param {Object} state Data state.\n *\n * @return {Object} Current user object.\n */\nexport function getCurrentUser( state ) {\n\treturn state.currentUser;\n}\n\n/**\n * Returns all the users returned by a query ID.\n *\n * @param {Object} state   Data state.\n * @param {string} queryID Query ID.\n *\n * @return {Array} Users list.\n */\nexport const getUserQueryResults = createSelector(\n\t( state, queryID ) => {\n\t\tconst queryResults = state.users.queries[ queryID ];\n\n\t\treturn map( queryResults, ( id ) => state.users.byId[ id ] );\n\t},\n\t( state, queryID ) => [ state.users.queries[ queryID ], state.users.byId ]\n);\n\n/**\n * Returns the loaded entities for the given kind.\n *\n * @deprecated since WordPress 6.0. Use getEntitiesConfig instead\n * @param {Object} state Data state.\n * @param {string} kind  Entity kind.\n *\n * @return {Array<Object>} Array of entities with config matching kind.\n */\nexport function getEntitiesByKind( state, kind ) {\n\tdeprecated( \"wp.data.select( 'core' ).getEntitiesByKind()\", {\n\t\tsince: '6.0',\n\t\talternative: \"wp.data.select( 'core' ).getEntitiesConfig()\",\n\t} );\n\treturn getEntitiesConfig( state, kind );\n}\n\n/**\n * Returns the loaded entities for the given kind.\n *\n * @param {Object} state Data state.\n * @param {string} kind  Entity kind.\n *\n * @return {Array<Object>} Array of entities with config matching kind.\n */\nexport function getEntitiesConfig( state, kind ) {\n\treturn filter( state.entities.config, { kind } );\n}\n\n/**\n * Returns the entity config given its kind and name.\n *\n * @deprecated since WordPress 6.0. Use getEntityConfig instead\n * @param {Object} state Data state.\n * @param {string} kind  Entity kind.\n * @param {string} name  Entity name.\n *\n * @return {Object} Entity config\n */\nexport function getEntity( state, kind, name ) {\n\tdeprecated( \"wp.data.select( 'core' ).getEntity()\", {\n\t\tsince: '6.0',\n\t\talternative: \"wp.data.select( 'core' ).getEntityConfig()\",\n\t} );\n\treturn getEntityConfig( state, kind, name );\n}\n\n/**\n * Returns the entity config given its kind and name.\n *\n * @param {Object} state Data state.\n * @param {string} kind  Entity kind.\n * @param {string} name  Entity name.\n *\n * @return {Object} Entity config\n */\nexport function getEntityConfig( state, kind, name ) {\n\treturn find( state.entities.config, { kind, name } );\n}\n\n/**\n * Returns the Entity's record object by key. Returns `null` if the value is not\n * yet received, undefined if the value entity is known to not exist, or the\n * entity object if it exists and is received.\n *\n * @param {Object}  state State tree\n * @param {string}  kind  Entity kind.\n * @param {string}  name  Entity name.\n * @param {number}  key   Record's key\n * @param {?Object} query Optional query.\n *\n * @return {Object|undefined} Record.\n */\nexport const getEntityRecord = createSelector(\n\t( state, kind, name, key, query ) => {\n\t\tconst queriedState = get( state.entities.records, [\n\t\t\tkind,\n\t\t\tname,\n\t\t\t'queriedData',\n\t\t] );\n\t\tif ( ! queriedState ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst context = query?.context ?? 'default';\n\n\t\tif ( query === undefined ) {\n\t\t\t// If expecting a complete item, validate that completeness.\n\t\t\tif ( ! queriedState.itemIsComplete[ context ]?.[ key ] ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn queriedState.items[ context ][ key ];\n\t\t}\n\n\t\tconst item = queriedState.items[ context ]?.[ key ];\n\t\tif ( item && query._fields ) {\n\t\t\tconst filteredItem = {};\n\t\t\tconst fields = getNormalizedCommaSeparable( query._fields ) ?? [];\n\t\t\tfor ( let f = 0; f < fields.length; f++ ) {\n\t\t\t\tconst field = fields[ f ].split( '.' );\n\t\t\t\tconst value = get( item, field );\n\t\t\t\tset( filteredItem, field, value );\n\t\t\t}\n\t\t\treturn filteredItem;\n\t\t}\n\n\t\treturn item;\n\t},\n\t( state, kind, name, recordId, query ) => {\n\t\tconst context = query?.context ?? 'default';\n\t\treturn [\n\t\t\tget( state.entities.records, [\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\t'queriedData',\n\t\t\t\t'items',\n\t\t\t\tcontext,\n\t\t\t\trecordId,\n\t\t\t] ),\n\t\t\tget( state.entities.records, [\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\t'queriedData',\n\t\t\t\t'itemIsComplete',\n\t\t\t\tcontext,\n\t\t\t\trecordId,\n\t\t\t] ),\n\t\t];\n\t}\n);\n\n/**\n * Returns the Entity's record object by key. Doesn't trigger a resolver nor requests the entity records from the API if the entity record isn't available in the local state.\n *\n * @param {Object} state State tree\n * @param {string} kind  Entity kind.\n * @param {string} name  Entity name.\n * @param {number} key   Record's key\n *\n * @return {Object|null} Record.\n */\nexport function __experimentalGetEntityRecordNoResolver(\n\tstate,\n\tkind,\n\tname,\n\tkey\n) {\n\treturn getEntityRecord( state, kind, name, key );\n}\n\n/**\n * Returns the entity's record object by key,\n * with its attributes mapped to their raw values.\n *\n * @param {Object} state State tree.\n * @param {string} kind  Entity kind.\n * @param {string} name  Entity name.\n * @param {number} key   Record's key.\n *\n * @return {Object?} Object with the entity's raw attributes.\n */\nexport const getRawEntityRecord = createSelector(\n\t( state, kind, name, key ) => {\n\t\tconst record = getEntityRecord( state, kind, name, key );\n\t\treturn (\n\t\t\trecord &&\n\t\t\tObject.keys( record ).reduce( ( accumulator, _key ) => {\n\t\t\t\tif (\n\t\t\t\t\tisRawAttribute( getEntityConfig( state, kind, name ), _key )\n\t\t\t\t) {\n\t\t\t\t\t// Because edits are the \"raw\" attribute values,\n\t\t\t\t\t// we return those from record selectors to make rendering,\n\t\t\t\t\t// comparisons, and joins with edits easier.\n\t\t\t\t\taccumulator[ _key ] = get(\n\t\t\t\t\t\trecord[ _key ],\n\t\t\t\t\t\t'raw',\n\t\t\t\t\t\trecord[ _key ]\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\taccumulator[ _key ] = record[ _key ];\n\t\t\t\t}\n\t\t\t\treturn accumulator;\n\t\t\t}, {} )\n\t\t);\n\t},\n\t( state, kind, name, recordId, query ) => {\n\t\tconst context = query?.context ?? 'default';\n\t\treturn [\n\t\t\tstate.entities.config,\n\t\t\tget( state.entities.records, [\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\t'queriedData',\n\t\t\t\t'items',\n\t\t\t\tcontext,\n\t\t\t\trecordId,\n\t\t\t] ),\n\t\t\tget( state.entities.records, [\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\t'queriedData',\n\t\t\t\t'itemIsComplete',\n\t\t\t\tcontext,\n\t\t\t\trecordId,\n\t\t\t] ),\n\t\t];\n\t}\n);\n\n/**\n * Returns true if records have been received for the given set of parameters,\n * or false otherwise.\n *\n * @param {Object}  state State tree\n * @param {string}  kind  Entity kind.\n * @param {string}  name  Entity name.\n * @param {?Object} query Optional terms query.\n *\n * @return {boolean} Whether entity records have been received.\n */\nexport function hasEntityRecords( state, kind, name, query ) {\n\treturn Array.isArray( getEntityRecords( state, kind, name, query ) );\n}\n\n/**\n * Returns the Entity's records.\n *\n * @param {Object}  state State tree\n * @param {string}  kind  Entity kind.\n * @param {string}  name  Entity name.\n * @param {?Object} query Optional terms query.\n *\n * @return {?Array} Records.\n */\nexport function getEntityRecords( state, kind, name, query ) {\n\t// Queried data state is prepopulated for all known entities. If this is not\n\t// assigned for the given parameters, then it is known to not exist.\n\tconst queriedState = get( state.entities.records, [\n\t\tkind,\n\t\tname,\n\t\t'queriedData',\n\t] );\n\tif ( ! queriedState ) {\n\t\treturn null;\n\t}\n\treturn getQueriedItems( queriedState, query );\n}\n\n/**\n * Returns the  list of dirty entity records.\n *\n * @param {Object} state State tree.\n *\n * @return {[{ title: string, key: string, name: string, kind: string }]} The list of updated records\n */\nexport const __experimentalGetDirtyEntityRecords = createSelector(\n\t( state ) => {\n\t\tconst {\n\t\t\tentities: { records },\n\t\t} = state;\n\t\tconst dirtyRecords = [];\n\t\tObject.keys( records ).forEach( ( kind ) => {\n\t\t\tObject.keys( records[ kind ] ).forEach( ( name ) => {\n\t\t\t\tconst primaryKeys = Object.keys(\n\t\t\t\t\trecords[ kind ][ name ].edits\n\t\t\t\t).filter(\n\t\t\t\t\t( primaryKey ) =>\n\t\t\t\t\t\t// The entity record must exist (not be deleted),\n\t\t\t\t\t\t// and it must have edits.\n\t\t\t\t\t\tgetEntityRecord( state, kind, name, primaryKey ) &&\n\t\t\t\t\t\thasEditsForEntityRecord( state, kind, name, primaryKey )\n\t\t\t\t);\n\n\t\t\t\tif ( primaryKeys.length ) {\n\t\t\t\t\tconst entityConfig = getEntityConfig( state, kind, name );\n\t\t\t\t\tprimaryKeys.forEach( ( primaryKey ) => {\n\t\t\t\t\t\tconst entityRecord = getEditedEntityRecord(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tprimaryKey\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdirtyRecords.push( {\n\t\t\t\t\t\t\t// We avoid using primaryKey because it's transformed into a string\n\t\t\t\t\t\t\t// when it's used as an object key.\n\t\t\t\t\t\t\tkey:\n\t\t\t\t\t\t\t\tentityRecord[\n\t\t\t\t\t\t\t\t\tentityConfig.key || DEFAULT_ENTITY_KEY\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\tentityConfig?.getTitle?.( entityRecord ) || '',\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\treturn dirtyRecords;\n\t},\n\t( state ) => [ state.entities.records ]\n);\n\n/**\n * Returns the list of entities currently being saved.\n *\n * @param {Object} state State tree.\n *\n * @return {[{ title: string, key: string, name: string, kind: string }]} The list of records being saved.\n */\nexport const __experimentalGetEntitiesBeingSaved = createSelector(\n\t( state ) => {\n\t\tconst {\n\t\t\tentities: { records },\n\t\t} = state;\n\t\tconst recordsBeingSaved = [];\n\t\tObject.keys( records ).forEach( ( kind ) => {\n\t\t\tObject.keys( records[ kind ] ).forEach( ( name ) => {\n\t\t\t\tconst primaryKeys = Object.keys(\n\t\t\t\t\trecords[ kind ][ name ].saving\n\t\t\t\t).filter( ( primaryKey ) =>\n\t\t\t\t\tisSavingEntityRecord( state, kind, name, primaryKey )\n\t\t\t\t);\n\n\t\t\t\tif ( primaryKeys.length ) {\n\t\t\t\t\tconst entityConfig = getEntityConfig( state, kind, name );\n\t\t\t\t\tprimaryKeys.forEach( ( primaryKey ) => {\n\t\t\t\t\t\tconst entityRecord = getEditedEntityRecord(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tprimaryKey\n\t\t\t\t\t\t);\n\t\t\t\t\t\trecordsBeingSaved.push( {\n\t\t\t\t\t\t\t// We avoid using primaryKey because it's transformed into a string\n\t\t\t\t\t\t\t// when it's used as an object key.\n\t\t\t\t\t\t\tkey:\n\t\t\t\t\t\t\t\tentityRecord[\n\t\t\t\t\t\t\t\t\tentityConfig.key || DEFAULT_ENTITY_KEY\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\tentityConfig?.getTitle?.( entityRecord ) || '',\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t\treturn recordsBeingSaved;\n\t},\n\t( state ) => [ state.entities.records ]\n);\n\n/**\n * Returns the specified entity record's edits.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's edits.\n */\nexport function getEntityRecordEdits( state, kind, name, recordId ) {\n\treturn get( state.entities.records, [ kind, name, 'edits', recordId ] );\n}\n\n/**\n * Returns the specified entity record's non transient edits.\n *\n * Transient edits don't create an undo level, and\n * are not considered for change detection.\n * They are defined in the entity's config.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's non transient edits.\n */\nexport const getEntityRecordNonTransientEdits = createSelector(\n\t( state, kind, name, recordId ) => {\n\t\tconst { transientEdits } = getEntityConfig( state, kind, name ) || {};\n\t\tconst edits = getEntityRecordEdits( state, kind, name, recordId ) || {};\n\t\tif ( ! transientEdits ) {\n\t\t\treturn edits;\n\t\t}\n\t\treturn Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tif ( ! transientEdits[ key ] ) {\n\t\t\t\tacc[ key ] = edits[ key ];\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, {} );\n\t},\n\t( state, kind, name, recordId ) => [\n\t\tstate.entities.config,\n\t\tget( state.entities.records, [ kind, name, 'edits', recordId ] ),\n\t]\n);\n\n/**\n * Returns true if the specified entity record has edits,\n * and false otherwise.\n *\n * @param {Object}        state    State tree.\n * @param {string}        kind     Entity kind.\n * @param {string}        name     Entity name.\n * @param {number|string} recordId Record ID.\n *\n * @return {boolean} Whether the entity record has edits or not.\n */\nexport function hasEditsForEntityRecord( state, kind, name, recordId ) {\n\treturn (\n\t\tisSavingEntityRecord( state, kind, name, recordId ) ||\n\t\tObject.keys(\n\t\t\tgetEntityRecordNonTransientEdits( state, kind, name, recordId )\n\t\t).length > 0\n\t);\n}\n\n/**\n * Returns the specified entity record, merged with its edits.\n *\n * @param {Object}        state    State tree.\n * @param {string}        kind     Entity kind.\n * @param {string}        name     Entity name.\n * @param {number|string} recordId Record ID.\n *\n * @return {Object?} The entity record, merged with its edits.\n */\nexport const getEditedEntityRecord = createSelector(\n\t( state, kind, name, recordId ) => ( {\n\t\t...getRawEntityRecord( state, kind, name, recordId ),\n\t\t...getEntityRecordEdits( state, kind, name, recordId ),\n\t} ),\n\t( state, kind, name, recordId, query ) => {\n\t\tconst context = query?.context ?? 'default';\n\t\treturn [\n\t\t\tstate.entities.config,\n\t\t\tget( state.entities.records, [\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\t'queriedData',\n\t\t\t\t'items',\n\t\t\t\tcontext,\n\t\t\t\trecordId,\n\t\t\t] ),\n\t\t\tget( state.entities.records, [\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\t'queriedData',\n\t\t\t\t'itemIsComplete',\n\t\t\t\tcontext,\n\t\t\t\trecordId,\n\t\t\t] ),\n\t\t\tget( state.entities.records, [ kind, name, 'edits', recordId ] ),\n\t\t];\n\t}\n);\n\n/**\n * Returns true if the specified entity record is autosaving, and false otherwise.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {boolean} Whether the entity record is autosaving or not.\n */\nexport function isAutosavingEntityRecord( state, kind, name, recordId ) {\n\tconst { pending, isAutosave } = get(\n\t\tstate.entities.records,\n\t\t[ kind, name, 'saving', recordId ],\n\t\t{}\n\t);\n\treturn Boolean( pending && isAutosave );\n}\n\n/**\n * Returns true if the specified entity record is saving, and false otherwise.\n *\n * @param {Object}        state    State tree.\n * @param {string}        kind     Entity kind.\n * @param {string}        name     Entity name.\n * @param {number|string} recordId Record ID.\n *\n * @return {boolean} Whether the entity record is saving or not.\n */\nexport function isSavingEntityRecord( state, kind, name, recordId ) {\n\treturn get(\n\t\tstate.entities.records,\n\t\t[ kind, name, 'saving', recordId, 'pending' ],\n\t\tfalse\n\t);\n}\n\n/**\n * Returns true if the specified entity record is deleting, and false otherwise.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {boolean} Whether the entity record is deleting or not.\n */\nexport function isDeletingEntityRecord( state, kind, name, recordId ) {\n\treturn get(\n\t\tstate.entities.records,\n\t\t[ kind, name, 'deleting', recordId, 'pending' ],\n\t\tfalse\n\t);\n}\n\n/**\n * Returns the specified entity record's last save error.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's save error.\n */\nexport function getLastEntitySaveError( state, kind, name, recordId ) {\n\treturn get( state.entities.records, [\n\t\tkind,\n\t\tname,\n\t\t'saving',\n\t\trecordId,\n\t\t'error',\n\t] );\n}\n\n/**\n * Returns the specified entity record's last delete error.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's save error.\n */\nexport function getLastEntityDeleteError( state, kind, name, recordId ) {\n\treturn get( state.entities.records, [\n\t\tkind,\n\t\tname,\n\t\t'deleting',\n\t\trecordId,\n\t\t'error',\n\t] );\n}\n\n/**\n * Returns the current undo offset for the\n * entity records edits history. The offset\n * represents how many items from the end\n * of the history stack we are at. 0 is the\n * last edit, -1 is the second last, and so on.\n *\n * @param {Object} state State tree.\n *\n * @return {number} The current undo offset.\n */\nfunction getCurrentUndoOffset( state ) {\n\treturn state.undo.offset;\n}\n\n/**\n * Returns the previous edit from the current undo offset\n * for the entity records edits history, if any.\n *\n * @param {Object} state State tree.\n *\n * @return {Object?} The edit.\n */\nexport function getUndoEdit( state ) {\n\treturn state.undo[ state.undo.length - 2 + getCurrentUndoOffset( state ) ];\n}\n\n/**\n * Returns the next edit from the current undo offset\n * for the entity records edits history, if any.\n *\n * @param {Object} state State tree.\n *\n * @return {Object?} The edit.\n */\nexport function getRedoEdit( state ) {\n\treturn state.undo[ state.undo.length + getCurrentUndoOffset( state ) ];\n}\n\n/**\n * Returns true if there is a previous edit from the current undo offset\n * for the entity records edits history, and false otherwise.\n *\n * @param {Object} state State tree.\n *\n * @return {boolean} Whether there is a previous edit or not.\n */\nexport function hasUndo( state ) {\n\treturn Boolean( getUndoEdit( state ) );\n}\n\n/**\n * Returns true if there is a next edit from the current undo offset\n * for the entity records edits history, and false otherwise.\n *\n * @param {Object} state State tree.\n *\n * @return {boolean} Whether there is a next edit or not.\n */\nexport function hasRedo( state ) {\n\treturn Boolean( getRedoEdit( state ) );\n}\n\n/**\n * Return the current theme.\n *\n * @param {Object} state Data state.\n *\n * @return {Object} The current theme.\n */\nexport function getCurrentTheme( state ) {\n\treturn getEntityRecord( state, 'root', 'theme', state.currentTheme );\n}\n\n/**\n * Return the ID of the current global styles object.\n *\n * @param {Object} state Data state.\n *\n * @return {string} The current global styles ID.\n */\nexport function __experimentalGetCurrentGlobalStylesId( state ) {\n\treturn state.currentGlobalStylesId;\n}\n\n/**\n * Return theme supports data in the index.\n *\n * @param {Object} state Data state.\n *\n * @return {*} Index data.\n */\nexport function getThemeSupports( state ) {\n\treturn getCurrentTheme( state )?.theme_supports ?? EMPTY_OBJECT;\n}\n\n/**\n * Returns the embed preview for the given URL.\n *\n * @param {Object} state Data state.\n * @param {string} url   Embedded URL.\n *\n * @return {*} Undefined if the preview has not been fetched, otherwise, the preview fetched from the embed preview API.\n */\nexport function getEmbedPreview( state, url ) {\n\treturn state.embedPreviews[ url ];\n}\n\n/**\n * Determines if the returned preview is an oEmbed link fallback.\n *\n * WordPress can be configured to return a simple link to a URL if it is not embeddable.\n * We need to be able to determine if a URL is embeddable or not, based on what we\n * get back from the oEmbed preview API.\n *\n * @param {Object} state Data state.\n * @param {string} url   Embedded URL.\n *\n * @return {boolean} Is the preview for the URL an oEmbed link fallback.\n */\nexport function isPreviewEmbedFallback( state, url ) {\n\tconst preview = state.embedPreviews[ url ];\n\tconst oEmbedLinkCheck = '<a href=\"' + url + '\">' + url + '</a>';\n\tif ( ! preview ) {\n\t\treturn false;\n\t}\n\treturn preview.html === oEmbedLinkCheck;\n}\n\n/**\n * Returns whether the current user can perform the given action on the given\n * REST resource.\n *\n * Calling this may trigger an OPTIONS request to the REST API via the\n * `canUser()` resolver.\n *\n * https://developer.wordpress.org/rest-api/reference/\n *\n * @param {Object}  state    Data state.\n * @param {string}  action   Action to check. One of: 'create', 'read', 'update', 'delete'.\n * @param {string}  resource REST resource to check, e.g. 'media' or 'posts'.\n * @param {string=} id       Optional ID of the rest resource to check.\n *\n * @return {boolean|undefined} Whether or not the user can perform the action,\n *                             or `undefined` if the OPTIONS request is still being made.\n */\nexport function canUser( state, action, resource, id ) {\n\tconst key = compact( [ action, resource, id ] ).join( '/' );\n\treturn get( state, [ 'userPermissions', key ] );\n}\n\n/**\n * Returns whether the current user can edit the given entity.\n *\n * Calling this may trigger an OPTIONS request to the REST API via the\n * `canUser()` resolver.\n *\n * https://developer.wordpress.org/rest-api/reference/\n *\n * @param {Object} state    Data state.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {string} recordId Record's id.\n * @return {boolean|undefined} Whether or not the user can edit,\n * or `undefined` if the OPTIONS request is still being made.\n */\nexport function canUserEditEntityRecord( state, kind, name, recordId ) {\n\tconst entityConfig = getEntityConfig( state, kind, name );\n\tif ( ! entityConfig ) {\n\t\treturn false;\n\t}\n\tconst resource = entityConfig.__unstable_rest_base;\n\n\treturn canUser( state, 'update', resource, recordId );\n}\n\n/**\n * Returns the latest autosaves for the post.\n *\n * May return multiple autosaves since the backend stores one autosave per\n * author for each post.\n *\n * @param {Object} state    State tree.\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n *\n * @return {?Array} An array of autosaves for the post, or undefined if there is none.\n */\nexport function getAutosaves( state, postType, postId ) {\n\treturn state.autosaves[ postId ];\n}\n\n/**\n * Returns the autosave for the post and author.\n *\n * @param {Object} state    State tree.\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n * @param {number} authorId The id of the author.\n *\n * @return {?Object} The autosave for the post and author.\n */\nexport function getAutosave( state, postType, postId, authorId ) {\n\tif ( authorId === undefined ) {\n\t\treturn;\n\t}\n\n\tconst autosaves = state.autosaves[ postId ];\n\treturn find( autosaves, { author: authorId } );\n}\n\n/**\n * Returns true if the REST request for autosaves has completed.\n *\n * @param {Object} state    State tree.\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n *\n * @return {boolean} True if the REST request was completed. False otherwise.\n */\nexport const hasFetchedAutosaves = createRegistrySelector(\n\t( select ) => ( state, postType, postId ) => {\n\t\treturn select( STORE_NAME ).hasFinishedResolution( 'getAutosaves', [\n\t\t\tpostType,\n\t\t\tpostId,\n\t\t] );\n\t}\n);\n\n/**\n * Returns a new reference when edited values have changed. This is useful in\n * inferring where an edit has been made between states by comparison of the\n * return values using strict equality.\n *\n * @example\n *\n * ```\n * const hasEditOccurred = (\n *    getReferenceByDistinctEdits( beforeState ) !==\n *    getReferenceByDistinctEdits( afterState )\n * );\n * ```\n *\n * @param {Object} state Editor state.\n *\n * @return {*} A value whose reference will change only when an edit occurs.\n */\nexport const getReferenceByDistinctEdits = createSelector(\n\t() => [],\n\t( state ) => [\n\t\tstate.undo.length,\n\t\tstate.undo.offset,\n\t\tstate.undo.flattenedUndo,\n\t]\n);\n\n/**\n * Retrieve the frontend template used for a given link.\n *\n * @param {Object} state Editor state.\n * @param {string} link  Link.\n *\n * @return {Object?} The template record.\n */\nexport function __experimentalGetTemplateForLink( state, link ) {\n\tconst records = getEntityRecords( state, 'postType', 'wp_template', {\n\t\t'find-template': link,\n\t} );\n\n\tconst template = records?.length ? records[ 0 ] : null;\n\tif ( template ) {\n\t\treturn getEditedEntityRecord(\n\t\t\tstate,\n\t\t\t'postType',\n\t\t\t'wp_template',\n\t\t\ttemplate.id\n\t\t);\n\t}\n\treturn template;\n}\n\n/**\n * Retrieve the current theme's base global styles\n *\n * @param {Object} state Editor state.\n *\n * @return {Object|null} The Global Styles object.\n */\nexport function __experimentalGetCurrentThemeBaseGlobalStyles( state ) {\n\tconst currentTheme = getCurrentTheme( state );\n\tif ( ! currentTheme ) {\n\t\treturn null;\n\t}\n\treturn state.themeBaseGlobalStyles[ currentTheme.stylesheet ];\n}\n\n/**\n * Return the ID of the current global styles object.\n *\n * @param {Object} state Data state.\n *\n * @return {string|null} The current global styles ID.\n */\nexport function __experimentalGetCurrentThemeGlobalStylesVariations( state ) {\n\tconst currentTheme = getCurrentTheme( state );\n\tif ( ! currentTheme ) {\n\t\treturn null;\n\t}\n\treturn state.themeGlobalStyleVariations[ currentTheme.stylesheet ];\n}\n\n/**\n * Retrieve the list of registered block patterns.\n *\n * @param {Object} state Data state.\n *\n * @return {Array} Block pattern list.\n */\nexport function getBlockPatterns( state ) {\n\treturn state.blockPatterns;\n}\n\n/**\n * Retrieve the list of registered block pattern categories.\n *\n * @param {Object} state Data state.\n *\n * @return {Array} Block pattern category list.\n */\nexport function getBlockPatternCategories( state ) {\n\treturn state.blockPatternCategories;\n}\n","/**\n * External dependencies\n */\nimport { isEqual } from 'lodash';\n\n/**\n * Given the current and next item entity record, returns the minimally \"modified\"\n * result of the next item, preferring value references from the original item\n * if equal. If all values match, the original item is returned.\n *\n * @param {Object} item     Original item.\n * @param {Object} nextItem Next item.\n *\n * @return {Object} Minimally modified merged item.\n */\nexport default function conservativeMapItem( item, nextItem ) {\n\t// Return next item in its entirety if there is no original item.\n\tif ( ! item ) {\n\t\treturn nextItem;\n\t}\n\n\tlet hasChanges = false;\n\tconst result = {};\n\tfor ( const key in nextItem ) {\n\t\tif ( isEqual( item[ key ], nextItem[ key ] ) ) {\n\t\t\tresult[ key ] = item[ key ];\n\t\t} else {\n\t\t\thasChanges = true;\n\t\t\tresult[ key ] = nextItem[ key ];\n\t\t}\n\t}\n\n\tif ( ! hasChanges ) {\n\t\treturn item;\n\t}\n\n\t// Only at this point, backfill properties from the original item which\n\t// weren't explicitly set into the result above. This is an optimization\n\t// to allow `hasChanges` to return early.\n\tfor ( const key in item ) {\n\t\tif ( ! result.hasOwnProperty( key ) ) {\n\t\t\tresult[ key ] = item[ key ];\n\t\t}\n\t}\n\n\treturn result;\n}\n","/**\n * Higher-order function which forward the resolution to another resolver with the same arguments.\n *\n * @param {string} resolverName forwarded resolver.\n *\n * @return {Function} Enhanced resolver.\n */\nconst forwardResolver = ( resolverName ) => ( ...args ) => async ( {\n\tresolveSelect,\n} ) => {\n\tawait resolveSelect[ resolverName ]( ...args );\n};\n\nexport default forwardResolver;\n","/**\n * Given a value which can be specified as one or the other of a comma-separated\n * string or an array, returns a value normalized to an array of strings, or\n * null if the value cannot be interpreted as either.\n *\n * @param {string|string[]|*} value\n *\n * @return {?(string[])} Normalized field value.\n */\nfunction getNormalizedCommaSeparable( value ) {\n\tif ( typeof value === 'string' ) {\n\t\treturn value.split( ',' );\n\t} else if ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\n\treturn null;\n}\n\nexport default getNormalizedCommaSeparable;\n","/** @typedef {import('../types').AnyFunction} AnyFunction */\n\n/**\n * A higher-order reducer creator which invokes the original reducer only if\n * the dispatching action matches the given predicate, **OR** if state is\n * initializing (undefined).\n *\n * @param {AnyFunction} isMatch Function predicate for allowing reducer call.\n *\n * @return {AnyFunction} Higher-order reducer.\n */\nconst ifMatchingAction = ( isMatch ) => ( reducer ) => ( state, action ) => {\n\tif ( state === undefined || isMatch( action ) ) {\n\t\treturn reducer( state, action );\n\t}\n\n\treturn state;\n};\n\nexport default ifMatchingAction;\n","/**\n * Checks whether the attribute is a \"raw\" attribute or not.\n *\n * @param {Object} entity    Entity record.\n * @param {string} attribute Attribute name.\n *\n * @return {boolean} Is the attribute raw\n */\nexport default function isRawAttribute( entity, attribute ) {\n\treturn ( entity.rawAttributes || [] ).includes( attribute );\n}\n","/** @typedef {import('../types').AnyFunction} AnyFunction */\n\n/**\n * Higher-order reducer creator which creates a combined reducer object, keyed\n * by a property on the action object.\n *\n * @param {string} actionProperty Action property by which to key object.\n *\n * @return {AnyFunction} Higher-order reducer.\n */\nexport const onSubKey = ( actionProperty ) => ( reducer ) => (\n\tstate = {},\n\taction\n) => {\n\t// Retrieve subkey from action. Do not track if undefined; useful for cases\n\t// where reducer is scoped by action shape.\n\tconst key = action[ actionProperty ];\n\tif ( key === undefined ) {\n\t\treturn state;\n\t}\n\n\t// Avoid updating state if unchanged. Note that this also accounts for a\n\t// reducer which returns undefined on a key which is not yet tracked.\n\tconst nextKeyState = reducer( state[ key ], action );\n\tif ( nextKeyState === state[ key ] ) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\t...state,\n\t\t[ key ]: nextKeyState,\n\t};\n};\n\nexport default onSubKey;\n","/** @typedef {import('../types').AnyFunction} AnyFunction */\n\n/**\n * Higher-order reducer creator which substitutes the action object before\n * passing to the original reducer.\n *\n * @param {AnyFunction} replacer Function mapping original action to replacement.\n *\n * @return {AnyFunction} Higher-order reducer.\n */\nconst replaceAction = ( replacer ) => ( reducer ) => ( state, action ) => {\n\treturn reducer( state, replacer( action ) );\n};\n\nexport default replaceAction;\n","/**\n * External dependencies\n */\nimport { isObjectLike } from 'lodash';\n\n/**\n * Given a function, returns an enhanced function which caches the result and\n * tracks in WeakMap. The result is only cached if the original function is\n * passed a valid object-like argument (requirement for WeakMap key).\n *\n * @param {Function} fn Original function.\n *\n * @return {Function} Enhanced caching function.\n */\nfunction withWeakMapCache( fn ) {\n\tconst cache = new WeakMap();\n\n\treturn ( key ) => {\n\t\tlet value;\n\t\tif ( cache.has( key ) ) {\n\t\t\tvalue = cache.get( key );\n\t\t} else {\n\t\t\tvalue = fn( key );\n\n\t\t\t// Can reach here if key is not valid for WeakMap, since `has`\n\t\t\t// will return false for invalid key. Since `set` will throw,\n\t\t\t// ensure that key is valid before setting into cache.\n\t\t\tif ( isObjectLike( key ) ) {\n\t\t\t\tcache.set( key, value );\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t};\n}\n\nexport default withWeakMapCache;\n","'use strict';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * Given an instance of EquivalentKeyMap, returns its internal value pair tuple\n * for a key, if one exists. The tuple members consist of the last reference\n * value for the key (used in efficient subsequent lookups) and the value\n * assigned for the key at the leaf node.\n *\n * @param {EquivalentKeyMap} instance EquivalentKeyMap instance.\n * @param {*} key                     The key for which to return value pair.\n *\n * @return {?Array} Value pair, if exists.\n */\nfunction getValuePair(instance, key) {\n  var _map = instance._map,\n      _arrayTreeMap = instance._arrayTreeMap,\n      _objectTreeMap = instance._objectTreeMap; // Map keeps a reference to the last object-like key used to set the\n  // value, which can be used to shortcut immediately to the value.\n\n  if (_map.has(key)) {\n    return _map.get(key);\n  } // Sort keys to ensure stable retrieval from tree.\n\n\n  var properties = Object.keys(key).sort(); // Tree by type to avoid conflicts on numeric object keys, empty value.\n\n  var map = Array.isArray(key) ? _arrayTreeMap : _objectTreeMap;\n\n  for (var i = 0; i < properties.length; i++) {\n    var property = properties[i];\n    map = map.get(property);\n\n    if (map === undefined) {\n      return;\n    }\n\n    var propertyValue = key[property];\n    map = map.get(propertyValue);\n\n    if (map === undefined) {\n      return;\n    }\n  }\n\n  var valuePair = map.get('_ekm_value');\n\n  if (!valuePair) {\n    return;\n  } // If reached, it implies that an object-like key was set with another\n  // reference, so delete the reference and replace with the current.\n\n\n  _map.delete(valuePair[0]);\n\n  valuePair[0] = key;\n  map.set('_ekm_value', valuePair);\n\n  _map.set(key, valuePair);\n\n  return valuePair;\n}\n/**\n * Variant of a Map object which enables lookup by equivalent (deeply equal)\n * object and array keys.\n */\n\n\nvar EquivalentKeyMap =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructs a new instance of EquivalentKeyMap.\n   *\n   * @param {Iterable.<*>} iterable Initial pair of key, value for map.\n   */\n  function EquivalentKeyMap(iterable) {\n    _classCallCheck(this, EquivalentKeyMap);\n\n    this.clear();\n\n    if (iterable instanceof EquivalentKeyMap) {\n      // Map#forEach is only means of iterating with support for IE11.\n      var iterablePairs = [];\n      iterable.forEach(function (value, key) {\n        iterablePairs.push([key, value]);\n      });\n      iterable = iterablePairs;\n    }\n\n    if (iterable != null) {\n      for (var i = 0; i < iterable.length; i++) {\n        this.set(iterable[i][0], iterable[i][1]);\n      }\n    }\n  }\n  /**\n   * Accessor property returning the number of elements.\n   *\n   * @return {number} Number of elements.\n   */\n\n\n  _createClass(EquivalentKeyMap, [{\n    key: \"set\",\n\n    /**\n     * Add or update an element with a specified key and value.\n     *\n     * @param {*} key   The key of the element to add.\n     * @param {*} value The value of the element to add.\n     *\n     * @return {EquivalentKeyMap} Map instance.\n     */\n    value: function set(key, value) {\n      // Shortcut non-object-like to set on internal Map.\n      if (key === null || _typeof(key) !== 'object') {\n        this._map.set(key, value);\n\n        return this;\n      } // Sort keys to ensure stable assignment into tree.\n\n\n      var properties = Object.keys(key).sort();\n      var valuePair = [key, value]; // Tree by type to avoid conflicts on numeric object keys, empty value.\n\n      var map = Array.isArray(key) ? this._arrayTreeMap : this._objectTreeMap;\n\n      for (var i = 0; i < properties.length; i++) {\n        var property = properties[i];\n\n        if (!map.has(property)) {\n          map.set(property, new EquivalentKeyMap());\n        }\n\n        map = map.get(property);\n        var propertyValue = key[property];\n\n        if (!map.has(propertyValue)) {\n          map.set(propertyValue, new EquivalentKeyMap());\n        }\n\n        map = map.get(propertyValue);\n      } // If an _ekm_value exists, there was already an equivalent key. Before\n      // overriding, ensure that the old key reference is removed from map to\n      // avoid memory leak of accumulating equivalent keys. This is, in a\n      // sense, a poor man's WeakMap, while still enabling iterability.\n\n\n      var previousValuePair = map.get('_ekm_value');\n\n      if (previousValuePair) {\n        this._map.delete(previousValuePair[0]);\n      }\n\n      map.set('_ekm_value', valuePair);\n\n      this._map.set(key, valuePair);\n\n      return this;\n    }\n    /**\n     * Returns a specified element.\n     *\n     * @param {*} key The key of the element to return.\n     *\n     * @return {?*} The element associated with the specified key or undefined\n     *              if the key can't be found.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      // Shortcut non-object-like to get from internal Map.\n      if (key === null || _typeof(key) !== 'object') {\n        return this._map.get(key);\n      }\n\n      var valuePair = getValuePair(this, key);\n\n      if (valuePair) {\n        return valuePair[1];\n      }\n    }\n    /**\n     * Returns a boolean indicating whether an element with the specified key\n     * exists or not.\n     *\n     * @param {*} key The key of the element to test for presence.\n     *\n     * @return {boolean} Whether an element with the specified key exists.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      if (key === null || _typeof(key) !== 'object') {\n        return this._map.has(key);\n      } // Test on the _presence_ of the pair, not its value, as even undefined\n      // can be a valid member value for a key.\n\n\n      return getValuePair(this, key) !== undefined;\n    }\n    /**\n     * Removes the specified element.\n     *\n     * @param {*} key The key of the element to remove.\n     *\n     * @return {boolean} Returns true if an element existed and has been\n     *                   removed, or false if the element does not exist.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      if (!this.has(key)) {\n        return false;\n      } // This naive implementation will leave orphaned child trees. A better\n      // implementation should traverse and remove orphans.\n\n\n      this.set(key, undefined);\n      return true;\n    }\n    /**\n     * Executes a provided function once per each key/value pair, in insertion\n     * order.\n     *\n     * @param {Function} callback Function to execute for each element.\n     * @param {*}        thisArg  Value to use as `this` when executing\n     *                            `callback`.\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      var _this = this;\n\n      var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n\n      this._map.forEach(function (value, key) {\n        // Unwrap value from object-like value pair.\n        if (key !== null && _typeof(key) === 'object') {\n          value = value[1];\n        }\n\n        callback.call(thisArg, value, key, _this);\n      });\n    }\n    /**\n     * Removes all elements.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._map = new Map();\n      this._arrayTreeMap = new Map();\n      this._objectTreeMap = new Map();\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._map.size;\n    }\n  }]);\n\n  return EquivalentKeyMap;\n}();\n\nmodule.exports = EquivalentKeyMap;\n","/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {Function} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {F & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize( fn, options ) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized( /* ...args */ ) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs, i;\n\n\t\tsearchCache: while ( node ) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif ( node.args.length !== arguments.length ) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( node.args[ i ] !== arguments[ i ] ) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif ( node !== head ) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif ( node === tail ) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ ( node.prev ).next = node.next;\n\t\t\t\tif ( node.next ) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ ( head ).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply( null, args ),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif ( head ) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif ( size === /** @type {MemizeOptions} */ ( options ).maxSize ) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ ( tail ).prev;\n\t\t\t/** @type {MemizeCacheNode} */ ( tail ).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function() {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\tif ( process.env.NODE_ENV === 'test' ) {\n\t\t// Cache is not exposed in the public API, but used in tests to ensure\n\t\t// expected list progression\n\t\tmemoized.getCache = function() {\n\t\t\treturn [ head, tail, size ];\n\t\t};\n\t}\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nmodule.exports = memize;\n","'use strict';\n\nvar LEAF_KEY, hasWeakMap;\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {Object}\n */\nLEAF_KEY = {};\n\n/**\n * Whether environment supports WeakMap.\n *\n * @type {boolean}\n */\nhasWeakMap = typeof WeakMap !== 'undefined';\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @param {*} value Value to return.\n *\n * @return {Array} Value returned as entry in array.\n */\nfunction arrayOf( value ) {\n\treturn [ value ];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike( value ) {\n\treturn !! value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Object} Cache object.\n */\nfunction createCache() {\n\tvar cache = {\n\t\tclear: function() {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {Array}  a         First array.\n * @param {Array}  b         Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual( a, b, fromIndex ) {\n\tvar i;\n\n\tif ( a.length !== b.length ) {\n\t\treturn false;\n\t}\n\n\tfor ( i = fromIndex; i < a.length; i++ ) {\n\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @param {Function} selector      Selector function.\n * @param {Function} getDependants Dependant getter returning an immutable\n *                                 reference or array of reference used in\n *                                 cache bust consideration.\n *\n * @return {Function} Memoized selector.\n */\nexport default function( selector, getDependants ) {\n\tvar rootCache, getCache;\n\n\t// Use object source as dependant if getter not provided\n\tif ( ! getDependants ) {\n\t\tgetDependants = arrayOf;\n\t}\n\n\t/**\n\t * Returns the root cache. If WeakMap is supported, this is assigned to the\n\t * root WeakMap cache set, otherwise it is a shared instance of the default\n\t * cache object.\n\t *\n\t * @return {(WeakMap|Object)} Root cache object.\n\t */\n\tfunction getRootCache() {\n\t\treturn rootCache;\n\t}\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {Array} dependants Selector dependants.\n\t *\n\t * @return {Object} Cache object.\n\t */\n\tfunction getWeakMapCache( dependants ) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti, dependant, map, cache;\n\n\t\tfor ( i = 0; i < dependants.length; i++ ) {\n\t\t\tdependant = dependants[ i ];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif ( ! isObjectLike( dependant ) ) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif ( caches.has( dependant ) ) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get( dependant );\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set( dependant, map );\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif ( ! caches.has( LEAF_KEY ) ) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set( LEAF_KEY, cache );\n\t\t}\n\n\t\treturn caches.get( LEAF_KEY );\n\t}\n\n\t// Assign cache handler by availability of WeakMap\n\tgetCache = hasWeakMap ? getWeakMapCache : getRootCache;\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = hasWeakMap ? new WeakMap() : createCache();\n\t}\n\n\t// eslint-disable-next-line jsdoc/check-param-names\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {Object} source    Source object for derivation.\n\t * @param {...*}   extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\tfunction callSelector( /* source, ...extraArgs */ ) {\n\t\tvar len = arguments.length,\n\t\t\tcache, node, i, args, dependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tdependants = getDependants.apply( null, args );\n\t\tcache = getCache( dependants );\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type or lack\n\t\t// of WeakMap support), shallow compare against last dependants and, if\n\t\t// references have changed, destroy cache to recalculate result.\n\t\tif ( ! cache.isUniqueByDependants ) {\n\t\t\tif ( cache.lastDependants && ! isShallowEqual( dependants, cache.lastDependants, 0 ) ) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile ( node ) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif ( ! isShallowEqual( node.args, args, 1 ) ) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif ( node !== cache.head ) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\tnode.prev.next = node.next;\n\t\t\t\tif ( node.next ) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\tcache.head.prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = {\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply( null, args ),\n\t\t};\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[ 0 ] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif ( cache.head ) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = getDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn callSelector;\n}\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","module.exports = window[\"lodash\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"deprecated\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"htmlEntities\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"isShallowEqual\"];","module.exports = window[\"wp\"][\"url\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./node_modules/@wordpress/core-data/build-module/index.js\");\n",""],"names":["castArray","isEqual","find","v4","uuid","apiFetch","addQueryArgs","deprecated","receiveItems","removeItems","receiveQueriedItems","getOrLoadEntitiesConfig","DEFAULT_ENTITY_KEY","createBatch","STORE_NAME","receiveUserQuery","queryID","users","type","receiveCurrentUser","currentUser","addEntities","entities","receiveEntityRecords","kind","name","records","query","invalidateCache","edits","map","record","status","title","action","receiveCurrentTheme","currentTheme","__experimentalReceiveCurrentGlobalStylesId","currentGlobalStylesId","id","__experimentalReceiveThemeBaseGlobalStyles","stylesheet","globalStyles","__experimentalReceiveThemeGlobalStyleVariations","variations","receiveThemeSupports","since","receiveEmbedPreview","url","preview","deleteEntityRecord","recordId","__unstableFetch","throwOnError","dispatch","configs","entityConfig","error","deletedRecord","__experimentalNoFetch","lock","__unstableAcquireStoreLock","exclusive","hasError","path","baseURL","method","_error","__unstableReleaseStoreLock","editEntityRecord","options","select","getEntityConfig","Error","transientEdits","mergedEdits","getRawEntityRecord","editedRecord","getEditedEntityRecord","edit","Object","keys","reduce","acc","key","recordValue","editedRecordValue","value","undefined","meta","undo","undoIgnore","undoEdit","getUndoEdit","isUndo","redo","redoEdit","getRedoEdit","isRedo","__unstableCreateUndoLevel","saveEntityRecord","isAutosave","resolveSelect","entityIdKey","entries","evaluatedValue","updatedRecord","persistedRecord","getCurrentUser","currentUserId","autosavePost","getAutosave","data","includes","newRecord","receiveAutosaves","__unstablePrePersist","__experimentalBatch","requests","batch","api","add","saveEditedEntityRecord","resultPromises","request","results","Promise","all","run","hasEditsForEntityRecord","getEntityRecordNonTransientEdits","__experimentalSaveSpecifiedEntityEdits","itemsToSave","editsToSave","some","item","receiveUploadPermissions","hasUploadPermissions","alternative","receiveUserPermission","isAllowed","postId","autosaves","isFunction","zip","defaultProcessor","processor","lastId","queue","pending","ObservableSet","inputOrThunk","input","resolve","reject","push","delete","finally","size","unsubscribe","subscribe","length","isSuccess","pair","result","queueItem","output","constructor","args","set","Set","subscribers","forEach","subscriber","chunk","maxItems","preflightResponse","endpoints","batchRequests","batchResponse","validation","body","headers","batchResults","failed","responses","response","upperFirst","camelCase","get","startCase","__","POST_RAW_ATTRIBUTES","rootEntitiesConfig","label","baseURLParams","_fields","join","getTitle","context","rawAttributes","plural","blocks","rendered","additionalEntityConfigLoaders","loadEntities","loadPostTypeEntities","loadTaxonomyEntities","prePersistPostType","newEdits","postTypes","postType","isTemplate","namespace","rest_namespace","rest_base","selection","slug","String","__unstable_rest_base","taxonomies","taxonomy","getMethodName","prefix","usePlural","kindPrefix","nameSuffix","suffix","getEntitiesConfig","loader","createContext","useContext","useCallback","useEffect","useSelect","useDispatch","parse","__unstableSerializeAndClean","EMPTY_ARRAY","entityContexts","getEntityContext","EntityProvider","children","Provider","useEntityId","useEntityProp","prop","_id","providerId","fullValue","getEntityRecord","setValue","newValue","useEntityBlockEditor","content","parsedContent","onChange","newBlocks","noChange","blocksForSerialization","onInput","decodeEntities","fetchLinkSuggestions","search","searchOptions","settings","isInitialSuggestions","subtype","page","perPage","disablePostFormats","queries","per_page","then","catch","accumulator","current","concat","filter","slice","isMedia","source_url","prependHTTP","isURL","getProtocol","isValidProtocol","CACHE","Map","fetchUrlData","endpoint","protocol","startsWith","test","has","res","default","__experimentalFetchLinkSuggestions","__experimentalFetchUrlData","Status","memoize","useQuerySelect","store","coreStore","__experimentalUseEntityRecord","enabled","rest","__experimentalUseEntityRecords","queryArgs","queryAsString","getEntityRecords","META_SELECTORS","__experimentalUseQuerySelect","mapQuerySelect","deps","registry","enrichSelectors","selectors","resolvers","selectorName","defineProperty","getIsResolving","hasFinishedResolution","isResolving","hasResolved","Resolving","Success","Idle","createReduxStore","register","reducer","actions","createLocksActions","entitySelectors","entity","state","entityResolvers","pluralMethodName","shouldInvalidate","entityActions","storeConfig","createLocks","locks","acquire","release","isLockAvailable","getPendingLockRequests","processPendingLockRequests","notifyAcquired","getNode","deepCopyLocksTreePath","DEFAULT_STATE","tree","storePath","newTree","node","r","l","iterateDescendants","iteratePath","hasConflictingLock","descendant","currentNode","branchName","nextNode","stack","values","childNode","pop","items","persistedEdits","itemIds","withWeakMapCache","getNormalizedCommaSeparable","getQueryParts","parts","stableKey","fields","include","sort","i","Number","toString","flowRight","omit","mapValues","combineReducers","conservativeMapItem","ifMatchingAction","replaceAction","onSubKey","getContextFromAction","queryParts","getMergedItemIds","nextItemIds","receivedAllIds","nextItemIdsStartIndex","Math","max","mergedItemIds","Array","isInNextItemsRange","itemId","contextState","itemIsComplete","isCompleteQuery","isArray","receiveQueries","removedItems","contextQueries","queryItems","queryId","createSelector","EquivalentKeyMap","queriedItemsCacheByState","WeakMap","getQueriedItemsUncached","startOffset","endOffset","min","hasOwnProperty","filteredItem","f","field","split","getQueriedItems","queriedItemsCache","queriedItems","keyBy","groupBy","isShallowEqual","queriedDataReducer","terms","byId","user","themeBaseGlobalStyles","themeGlobalStyleVariations","queriedData","nextState","nextEdits","saving","deleting","entitiesConfig","newConfig","config","entitiesDataReducer","entitiesByKind","memo","subEntities","kindReducer","kindMemo","newData","UNDO_INITIAL_STATE","assign","offset","lastEditAction","isCreateUndoLevel","isUndoOrRedo","flattenedUndo","comparisonUndoEdits","comparisonEdits","embedPreviews","userPermissions","autosavesData","blockPatterns","patterns","blockPatternCategories","categories","compact","uniq","mapKeys","forwardResolver","getAuthors","hasRecords","hasEntityRecords","resolutionsArgs","getCurrentTheme","activeThemes","getThemeSupports","getEmbedPreview","embedProxyResponse","canUser","resource","methods","create","read","update","allowHeader","canUserEditEntityRecord","getAutosaves","restBase","getPostType","__experimentalGetTemplateForLink","link","template","window","fetch","json","e","__experimentalGetCurrentGlobalStylesId","globalStylesURL","globalStylesObject","__experimentalGetCurrentThemeBaseGlobalStyles","themeGlobalStyles","__experimentalGetCurrentThemeGlobalStylesVariations","getBlockPatterns","restPatterns","pattern","getBlockPatternCategories","createRegistrySelector","isRawAttribute","EMPTY_OBJECT","isRequestingEmbedPreview","getUserQueryResults","queryResults","getEntitiesByKind","getEntity","queriedState","__experimentalGetEntityRecordNoResolver","_key","__experimentalGetDirtyEntityRecords","dirtyRecords","primaryKeys","primaryKey","entityRecord","__experimentalGetEntitiesBeingSaved","recordsBeingSaved","isSavingEntityRecord","getEntityRecordEdits","isAutosavingEntityRecord","Boolean","isDeletingEntityRecord","getLastEntitySaveError","getLastEntityDeleteError","getCurrentUndoOffset","hasUndo","hasRedo","theme_supports","isPreviewEmbedFallback","oEmbedLinkCheck","html","authorId","author","hasFetchedAutosaves","getReferenceByDistinctEdits","nextItem","hasChanges","resolverName","isMatch","attribute","actionProperty","nextKeyState","replacer","isObjectLike","fn","cache"],"sourceRoot":""}