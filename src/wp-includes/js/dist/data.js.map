{"version":3,"file":"data.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEO,MAAMC,OAAO,GAAGD,iEAAa,CAAE,KAAF,CAA7B;AAEP,MAAM;AAAEE,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAyBF,OAA/B;AAEO,MAAMG,iBAAiB,GAAGF,QAA1B;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,+DAAeC,QAAf;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEe,SAASG,YAAT,GAAwB;AACtC,SAAOD,8DAAU,CAAEJ,6CAAF,CAAjB;AACA;;;;;;;;;;;;;;;;;;;;ACZD;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEO,MAAMA,OAAO,GAAGD,iEAAa,CAAEO,yDAAF,CAA7B;AAEP,MAAM;AAAEL,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAyBF,OAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMO,gBAAgB,GAAGN,QAAzB;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,+DAAeC,QAAf;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASM,WAAT,GAAuB;AACrC,SAAOJ,8DAAU,CAAEJ,6CAAF,CAAjB;AACA;;;;;;;;;;;;;;;;;;;;ACnDD;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMa,kBAAkB,GAAG,CAAEC,WAAF,EAAeC,IAAf,KAAyB;AACnD,QAAMC,QAAQ,GAAGR,2EAAW,EAA5B;AACA,QAAMS,kBAAkB,GAAGN,0DAAM,CAAEG,WAAF,CAAjC;AAEAF,EAAAA,6EAAyB,CAAE,MAAM;AAChCK,IAAAA,kBAAkB,CAACC,OAAnB,GAA6BJ,WAA7B;AACA,GAFwB,CAAzB;AAIA,SAAOJ,2DAAO,CAAE,MAAM;AACrB,UAAMS,oBAAoB,GAAGF,kBAAkB,CAACC,OAAnB,CAC5BF,QAAQ,CAACI,QADmB,EAE5BJ,QAF4B,CAA7B;AAIA,WAAOP,iDAAS,CAAEU,oBAAF,EAAwB,CAAEE,UAAF,EAAcC,QAAd,KAA4B;AACnE,UAAK,OAAOD,UAAP,KAAsB,UAA3B,EAAwC;AACvC;AACAE,QAAAA,OAAO,CAACC,IAAR,CACE,YAAYF,QAAU,sEADxB;AAGA;;AACD,aAAO;AAAA,eACNL,kBAAkB,CAChBC,OADF,CACWF,QAAQ,CAACI,QADpB,EAC8BJ,QAD9B,EAEGM,QAFH,EAEe,YAFf,CADM;AAAA,OAAP;AAIA,KAXe,CAAhB;AAYA,GAjBa,EAiBX,CAAEN,QAAF,EAAY,GAAGD,IAAf,CAjBW,CAAd;AAkBA,CA1BD;;AA4BA,+DAAeF,kBAAf;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMY,WAAW,GAAKC,qBAAF,IAA6B;AAChD,QAAM;AAAEN,IAAAA;AAAF,MAAeZ,2EAAW,EAAhC;AACA,SAAOkB,qBAAqB,KAAK,KAAK,CAA/B,GACJN,QADI,GAEJA,QAAQ,CAAEM,qBAAF,CAFX;AAGA,CALD;;AAOA,+DAAeD,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;;AAEA,MAAMO,IAAI,GAAG,MAAM,CAAE,CAArB;;AACA,MAAMC,WAAW,GAAGL,sEAAW,EAA/B;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASM,SAAT,CAAoBC,SAApB,EAA+BpB,IAA/B,EAAsC;AACpD,QAAMqB,kBAAkB,GAAG,eAAe,OAAOD,SAAjD,CADoD,CAGpD;AACA;AACA;;AACA,MAAK,CAAEC,kBAAP,EAA4B;AAC3BrB,IAAAA,IAAI,GAAG,EAAP;AACA,GARmD,CAUpD;AACA;AACA;AACA;AACA;;;AACA,QAAMsB,cAAc,GAAGR,+DAAW,CACjCO,kBAAkB,GAAGD,SAAH,GAAeH,IADA,EAEjCjB,IAFiC,CAAlC;;AAIA,QAAMuB,UAAU,GAAGF,kBAAkB,GAAGC,cAAH,GAAoB,IAAzD;;AAEA,QAAMrB,QAAQ,GAAGR,2EAAW,EAA5B;AACA,QAAM+B,OAAO,GAAGlC,+EAAY,EAA5B,CAtBoD,CAuBpD;AACA;AACA;;AACA,QAAMmC,YAAY,GAAGb,wDAAU,CAAE,OAAQ;AAAEc,IAAAA,KAAK,EAAE;AAAT,GAAR,CAAF,EAA6B,CAAEzB,QAAF,CAA7B,CAA/B;AACA,QAAM,GAAI0B,WAAJ,IAAoBZ,8DAAU,CAAIa,CAAF,IAASA,CAAC,GAAG,CAAf,EAAkB,CAAlB,CAApC;AAEA,QAAMC,eAAe,GAAGjC,0DAAM,EAA9B;AACA,QAAMkC,aAAa,GAAGlC,0DAAM,CAAE4B,OAAF,CAA5B;AACA,QAAMO,eAAe,GAAGnC,0DAAM,EAA9B;AACA,QAAMoC,oBAAoB,GAAGpC,0DAAM,EAAnC;AACA,QAAMqC,4BAA4B,GAAGrC,0DAAM,EAA3C,CAjCoD,CAmCpD;AACA;;AACA,QAAMsC,eAAe,GAAGtC,0DAAM,CAAE,EAAF,CAA9B;AACA,QAAMuC,UAAU,GAAGrB,+DAAW,CAC3BsB,QAAF,IACCnC,QAAQ,CAACoC,6BAAT,CACC,MAAMD,QAAQ,CAAEnC,QAAQ,CAACqC,MAAX,EAAmBrC,QAAnB,CADf,EAECiC,eAFD,CAF4B,EAM7B,CAAEjC,QAAF,CAN6B,CAA9B,CAtCoD,CA+CpD;AACA;AACA;;AACA,QAAMsC,eAAe,GAAG5C,2DAAO,CAAE,OAAQ,EAAR,CAAF,EAAgBK,IAAI,IAAI,EAAxB,CAA/B;AAEA,MAAIwC,SAAJ;;AAEA,MAAKjB,UAAL,EAAkB;AACjBiB,IAAAA,SAAS,GAAGT,eAAe,CAAC5B,OAA5B;AACA,UAAMsC,oBAAoB,GAAGZ,eAAe,CAAC1B,OAAhB,KAA4BoB,UAAzD;AACA,UAAMmB,mBAAmB,GAAG,CAAC,CAAEV,oBAAoB,CAAC7B,OAApD;;AAEA,QAAKsC,oBAAoB,IAAIC,mBAA7B,EAAmD;AAClD,UAAI;AACHF,QAAAA,SAAS,GAAGL,UAAU,CAAEZ,UAAF,CAAtB;AACA,OAFD,CAEE,OAAQoB,KAAR,EAAgB;AACjB,YAAIC,YAAY,GAAI,gDAAgDD,KAAK,CAACE,OAAS,EAAnF;;AAEA,YAAKb,oBAAoB,CAAC7B,OAA1B,EAAoC;AACnCyC,UAAAA,YAAY,IAAK,2DAAjB;AACAA,UAAAA,YAAY,IAAK,GAAGZ,oBAAoB,CAAC7B,OAArB,CAA6B2C,KAAO,MAAxD;AACAF,UAAAA,YAAY,IAAI,uBAAhB;AACA,SAPgB,CASjB;;;AACApC,QAAAA,OAAO,CAACmC,KAAR,CAAeC,YAAf;AACA;AACD;AACD;;AAED/C,EAAAA,6EAAyB,CAAE,MAAM;AAChC,QAAK,CAAEwB,kBAAP,EAA4B;AAC3B;AACA;;AAEDQ,IAAAA,eAAe,CAAC1B,OAAhB,GAA0BoB,UAA1B;AACAQ,IAAAA,eAAe,CAAC5B,OAAhB,GAA0BqC,SAA1B;AACAR,IAAAA,oBAAoB,CAAC7B,OAArB,GAA+B4C,SAA/B;AACAd,IAAAA,4BAA4B,CAAC9B,OAA7B,GAAuC,IAAvC,CARgC,CAUhC;AACA;AACA;AACA;;AACA,QAAK2B,aAAa,CAAC3B,OAAd,KAA0BqB,OAA/B,EAAyC;AACxCM,MAAAA,aAAa,CAAC3B,OAAd,GAAwBqB,OAAxB;AACAN,MAAAA,WAAW,CAAC8B,KAAZ,CAAmBvB,YAAnB;AACA;AACD,GAlBwB,CAAzB;AAoBA5B,EAAAA,6EAAyB,CAAE,MAAM;AAChC,QAAK,CAAEwB,kBAAP,EAA4B;AAC3B;AACA;;AAED,UAAM4B,aAAa,GAAG,MAAM;AAC3B,UAAKhB,4BAA4B,CAAC9B,OAAlC,EAA4C;AAC3C,YAAI;AACH,gBAAM+C,YAAY,GAAGf,UAAU,CAAEN,eAAe,CAAC1B,OAAlB,CAA/B;;AAEA,cACCa,kEAAc,CAAEe,eAAe,CAAC5B,OAAlB,EAA2B+C,YAA3B,CADf,EAEE;AACD;AACA;;AACDnB,UAAAA,eAAe,CAAC5B,OAAhB,GAA0B+C,YAA1B;AACA,SATD,CASE,OAAQP,KAAR,EAAgB;AACjBX,UAAAA,oBAAoB,CAAC7B,OAArB,GAA+BwC,KAA/B;AACA;;AACDhB,QAAAA,WAAW;AACX;AACD,KAhBD;;AAkBA,UAAMwB,QAAQ,GAAG,MAAM;AACtB,UAAKrB,aAAa,CAAC3B,OAAnB,EAA6B;AAC5Be,QAAAA,WAAW,CAACkC,GAAZ,CAAiB3B,YAAjB,EAA+BwB,aAA/B;AACA,OAFD,MAEO;AACNA,QAAAA,aAAa;AACb;AACD,KAND,CAvBgC,CA+BhC;AACA;;;AACAE,IAAAA,QAAQ;AAER,UAAME,aAAa,GAAGnB,eAAe,CAAC/B,OAAhB,CAAwBmD,GAAxB,CAA+BC,SAAF,IAClDtD,QAAQ,CAACuD,wBAAT,CAAmCD,SAAnC,EAA8CJ,QAA9C,CADqB,CAAtB;AAIA,WAAO,MAAM;AACZlB,MAAAA,4BAA4B,CAAC9B,OAA7B,GAAuC,KAAvC,CADY,CAEZ;;AACAkD,MAAAA,aAAa,CAACI,OAAd,CAAyBC,WAAF,IAAmBA,WAAnB,aAAmBA,WAAnB,uBAAmBA,WAAW,EAArD;AACAxC,MAAAA,WAAW,CAAC8B,KAAZ,CAAmBvB,YAAnB;AACA,KALD,CAvCgC,CA6ChC;AACA;AACA;AACA,GAhDwB,EAgDtB,CAAExB,QAAF,EAAYkC,UAAZ,EAAwBd,kBAAxB,EAA4CkB,eAA5C,CAhDsB,CAAzB;AAkDA,SAAOlB,kBAAkB,GAAGmB,SAAH,GAAevC,QAAQ,CAACqC,MAAT,CAAiBlB,SAAjB,CAAxC;AACA;;;;;;;;;;;;;;;;;;;;;;AC/OD;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMwC,YAAY,GAAKC,kBAAF,IACpBF,8EAA0B,CACvBG,gBAAF,IAA0BC,QAAF,IAAgB;AACvC,QAAMC,WAAW,GAAG,CAAE3D,QAAF,EAAYJ,QAAZ,KACnB4D,kBAAkB,CAAExD,QAAF,EAAY0D,QAAZ,EAAsB9D,QAAtB,CADnB;;AAEA,QAAMgE,aAAa,GAAGnE,yDAAkB,CAAEkE,WAAF,EAAe,EAAf,CAAxC;AACA,SAAO,kEAAC,gBAAD,qFAAuBD,QAAvB,EAAuCE,aAAvC,EAAP;AACA,CANwB,EAOzB,cAPyB,CAD3B;;AAWA,+DAAeL,YAAf;;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMM,YAAY,GAAGP,8EAA0B,CAC5CQ,iBAAF,IAA2BC,KAAF,IACxB,kEAAC,gEAAD,QACKnE,QAAF,IACD,kEAAC,iBAAD,qFAAwBmE,KAAxB;AAAgC,UAAQ,EAAGnE;AAA3C,GAFF,CAF6C,EAQ9C,cAR8C,CAA/C;AAWA,+DAAeiE,YAAf;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMI,UAAU,GAAKC,gBAAF,IAClBZ,8EAA0B,CACvBG,gBAAF,IACCO,wDAAI,CAAIN,QAAF,IAAgB;AACrB,QAAM3C,SAAS,GAAG,CAAEkB,MAAF,EAAUrC,QAAV,KACjBsE,gBAAgB,CAAEjC,MAAF,EAAUyB,QAAV,EAAoB9D,QAApB,CADjB;;AAEA,QAAMuE,UAAU,GAAGrD,uDAAS,CAAEC,SAAF,CAA5B;AACA,SAAO,kEAAC,gBAAD,qFAAuB2C,QAAvB,EAAuCS,UAAvC,EAAP;AACA,CALG,CAFoB,EAQzB,YARyB,CAD3B;;AAYA,+DAAeF,UAAf;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;;AAEA,MAAMK,MAAM,GAAG,eAAf;AACA,MAAMC,cAAc,GAAG,uBAAvB;AACA,MAAMC,QAAQ,GAAG,iBAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASvC,MAAT,CAAiB3B,qBAAjB,EAAwCmE,YAAxC,EAAgE;AAAA,oCAAPC,IAAO;AAAPA,IAAAA,IAAO;AAAA;;AAC/D,SAAO;AACNC,IAAAA,IAAI,EAAEL,MADA;AAENM,IAAAA,QAAQ,EAAER,gDAAQ,CAAE9D,qBAAF,CAAR,GACPA,qBAAqB,CAACuE,IADf,GAEPvE,qBAJG;AAKNmE,IAAAA,YALM;AAMNC,IAAAA;AANM,GAAP;AAQA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,aAAT,CAAwBxE,qBAAxB,EAA+CmE,YAA/C,EAAuE;AAAA,qCAAPC,IAAO;AAAPA,IAAAA,IAAO;AAAA;;AACtE,SAAO;AACNC,IAAAA,IAAI,EAAEJ,cADA;AAENK,IAAAA,QAAQ,EAAER,gDAAQ,CAAE9D,qBAAF,CAAR,GACPA,qBAAqB,CAACuE,IADf,GAEPvE,qBAJG;AAKNmE,IAAAA,YALM;AAMNC,IAAAA;AANM,GAAP;AAQA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS1E,QAAT,CAAmBM,qBAAnB,EAA0CyE,UAA1C,EAAgE;AAAA,qCAAPL,IAAO;AAAPA,IAAAA,IAAO;AAAA;;AAC/D,SAAO;AACNC,IAAAA,IAAI,EAAEH,QADA;AAENI,IAAAA,QAAQ,EAAER,gDAAQ,CAAE9D,qBAAF,CAAR,GACPA,qBAAqB,CAACuE,IADf,GAEPvE,qBAJG;AAKNyE,IAAAA,UALM;AAMNL,IAAAA;AANM,GAAP;AAQA;;AAEM,MAAMM,QAAQ,GAAG;AAAE/C,EAAAA,MAAF;AAAU6C,EAAAA,aAAV;AAAyB9E,EAAAA;AAAzB,CAAjB;AAEA,MAAMiF,eAAe,GAAG;AAC9B,GAAEX,MAAF,GAAYD,+DAAqB,CAC9BzE,QAAF,IAAgB;AAAA,QAAE;AAAEgF,MAAAA,QAAF;AAAYH,MAAAA,YAAZ;AAA0BC,MAAAA;AAA1B,KAAF;AAAA,WACf9E,QAAQ,CAACqC,MAAT,CAAiB2C,QAAjB,EAA6BH,YAA7B,EAA6C,GAAGC,IAAhD,CADe;AAAA,GADgB,CADH;AAK9B,GAAEH,cAAF,GAAoBF,+DAAqB,CACtCzE,QAAF,IAAgB,SAAwC;AAAA,QAAtC;AAAEgF,MAAAA,QAAF;AAAYH,MAAAA,YAAZ;AAA0BC,MAAAA;AAA1B,KAAsC;AACvD,UAAMQ,MAAM,GAAGtF,QAAQ,CAACqC,MAAT,CAAiB2C,QAAjB,EAA6BH,YAA7B,EACbU,WADa,GAEZ,eAFY,GAGZ,QAHH;AAIA,WAAOvF,QAAQ,CAAEsF,MAAF,CAAR,CAAoBN,QAApB,EAAgCH,YAAhC,EAAgD,GAAGC,IAAnD,CAAP;AACA,GAPuC,CALX;AAc9B,GAAEF,QAAF,GAAcH,+DAAqB,CAChCzE,QAAF,IAAgB;AAAA,QAAE;AAAEgF,MAAAA,QAAF;AAAYG,MAAAA,UAAZ;AAAwBL,MAAAA;AAAxB,KAAF;AAAA,WACf9E,QAAQ,CAACI,QAAT,CAAmB4E,QAAnB,EAA+BG,UAA/B,EAA6C,GAAGL,IAAhD,CADe;AAAA,GADkB;AAdL,CAAxB;;;;;;;;;;;;;;ACtHP;AACA;AACA;AACA;AAEA,+DAAeU,yDAAc,EAA7B;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,sBAAT,CAAiCC,gBAAjC,EAAoD;AAC1D;AACA;AACA;AACA,QAAMC,QAAQ,GAAG;AAAA,WAChBD,gBAAgB,CAAEC,QAAQ,CAAC3F,QAAT,CAAkBqC,MAApB,CAAhB,CAA8C,YAA9C,CADgB;AAAA,GAAjB;AAGA;AACD;AACA;AACA;AACA;AACA;AACA;;;AACCsD,EAAAA,QAAQ,CAACC,kBAAT,GAA8B,IAA9B;AAEA,SAAOD,QAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASlB,qBAAT,CAAgCoB,eAAhC,EAAkD;AACxDA,EAAAA,eAAe,CAACC,iBAAhB,GAAoC,IAApC;AAEA,SAAOD,eAAP;AACA;;;;;;;;;;;;;;;;;AChFD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMS,eAAe,GAAGF,wDAAxB;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMG,mBAAmB,GAAG,SAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMC,iBAAiB,GAAKC,OAAF,IAAe,CAAEC,KAAF,EAASC,MAAT,KAAqB;AACpE,MAAKA,MAAM,CAACC,SAAP,KAAqBF,KAA1B,EAAkC;AACjC,WAAOA,KAAP;AACA;;AAED,SAAOD,OAAO,CAAEC,KAAF,EAASC,MAAT,CAAd;AACA,CANM;AAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASE,0BAAT,CAAqCC,OAArC,EAA+C;AACrD,QAAM;AACLC,IAAAA,OAAO,GAAGT,eADL;AAELU,IAAAA,UAAU,GAAGT;AAFR,MAGFO,OAHJ;AAKA,MAAIG,IAAJ;AAEA;AACD;AACA;AACA;AACA;;AACC,WAASC,OAAT,GAAmB;AAClB,QAAKD,IAAI,KAAKnE,SAAd,EAA0B;AACzB;AACA;AACA,YAAMqE,SAAS,GAAGJ,OAAO,CAACK,OAAR,CAAiBJ,UAAjB,CAAlB;;AACA,UAAKG,SAAS,KAAK,IAAnB,EAA0B;AACzBF,QAAAA,IAAI,GAAG,EAAP;AACA,OAFD,MAEO;AACN,YAAI;AACHA,UAAAA,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAYH,SAAZ,CAAP;AACA,SAFD,CAEE,OAAQzE,KAAR,EAAgB;AACjB;AACA;AACAuE,UAAAA,IAAI,GAAG,EAAP;AACA;AACD;AACD;;AAED,WAAOA,IAAP;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACC,WAASM,OAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA+B;AAC9BR,IAAAA,IAAI,GAAG,EAAE,GAAGA,IAAL;AAAW,OAAEO,GAAF,GAASC;AAApB,KAAP;AACAV,IAAAA,OAAO,CAACW,OAAR,CAAiBV,UAAjB,EAA6BK,IAAI,CAACM,SAAL,CAAgBV,IAAhB,CAA7B;AACA;;AAED,SAAO;AACNW,IAAAA,GAAG,EAAEV,OADC;AAENW,IAAAA,GAAG,EAAEN;AAFC,GAAP;AAIA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASO,iBAAT,CAA4B9H,QAA5B,EAAsC+H,aAAtC,EAAsD;AACrD,QAAM/B,WAAW,GAAGa,0BAA0B,CAAEkB,aAAF,CAA9C;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,WAASC,qBAAT,CAAgCC,QAAhC,EAA0C3E,SAA1C,EAAqD4E,IAArD,EAA4D;AAC3D,QAAIC,iBAAJ;;AACA,QAAKC,KAAK,CAACC,OAAN,CAAeH,IAAf,CAAL,EAA6B;AAC5B;AACA;AACA;AACA;AACA;AACA,YAAMI,QAAQ,GAAGJ,IAAI,CAACK,MAAL,CAChB,CAAEC,WAAF,EAAehB,GAAf,KACCiB,MAAM,CAACC,MAAP,CAAeF,WAAf,EAA4B;AAC3B,SAAEhB,GAAF,GAAS,CAAEd,KAAF,EAASC,MAAT,KAAqBA,MAAM,CAACC,SAAP,CAAkBY,GAAlB;AADH,OAA5B,CAFe,EAKhB,EALgB,CAAjB;AAQAW,MAAAA,iBAAiB,GAAG3B,iBAAiB,CACpCH,wCAAe,CAAEiC,QAAF,CADqB,CAArC;AAGA,KAjBD,MAiBO;AACNH,MAAAA,iBAAiB,GAAG,CAAEzB,KAAF,EAASC,MAAT,KAAqBA,MAAM,CAACC,SAAhD;AACA;;AAED,QAAI+B,SAAS,GAAGR,iBAAiB,CAAErF,SAAF,EAAa;AAC7C8D,MAAAA,SAAS,EAAEqB,QAAQ;AAD0B,KAAb,CAAjC;AAIA,WAAO,MAAM;AACZ,YAAMvB,KAAK,GAAGyB,iBAAiB,CAAEQ,SAAF,EAAa;AAC3C/B,QAAAA,SAAS,EAAEqB,QAAQ;AADwB,OAAb,CAA/B;;AAGA,UAAKvB,KAAK,KAAKiC,SAAf,EAA2B;AAC1B3C,QAAAA,WAAW,CAAC6B,GAAZ,CAAiBvE,SAAjB,EAA4BoD,KAA5B;AACAiC,QAAAA,SAAS,GAAGjC,KAAZ;AACA;AACD,KARD;AASA;;AAED,SAAO;AACNkC,IAAAA,aAAa,CAAEtF,SAAF,EAAawD,OAAb,EAAuB;AACnC,UAAK,CAAEA,OAAO,CAAC+B,OAAf,EAAyB;AACxB,eAAO7I,QAAQ,CAAC4I,aAAT,CAAwBtF,SAAxB,EAAmCwD,OAAnC,CAAP;AACA,OAHkC,CAKnC;;;AACA,YAAMgC,cAAc,GAAG9C,WAAW,CAAC4B,GAAZ,GAAmBtE,SAAnB,CAAvB;;AACA,UAAKwF,cAAc,KAAKhG,SAAxB,EAAoC;AACnC,YAAIiG,YAAY,GAAGjC,OAAO,CAACL,OAAR,CAAiBK,OAAO,CAACiC,YAAzB,EAAuC;AACzDhE,UAAAA,IAAI,EAAE;AADmD,SAAvC,CAAnB;;AAIA,YACCmB,qDAAa,CAAE6C,YAAF,CAAb,IACA7C,qDAAa,CAAE4C,cAAF,CAFd,EAGE;AACD;AACA;AACA;AACA;AACA;AACAC,UAAAA,YAAY,GAAG9C,6CAAK,CAAE,EAAF,EAAM8C,YAAN,EAAoBD,cAApB,CAApB;AACA,SAVD,MAUO;AACN;AACA;AACAC,UAAAA,YAAY,GAAGD,cAAf;AACA;;AAEDhC,QAAAA,OAAO,GAAG,EACT,GAAGA,OADM;AAETiC,UAAAA;AAFS,SAAV;AAIA;;AAED,YAAMC,KAAK,GAAGhJ,QAAQ,CAAC4I,aAAT,CAAwBtF,SAAxB,EAAmCwD,OAAnC,CAAd;AAEAkC,MAAAA,KAAK,CAACC,SAAN,CACCjB,qBAAqB,CACpBgB,KAAK,CAACf,QADc,EAEpB3E,SAFoB,EAGpBwD,OAAO,CAAC+B,OAHY,CADtB;AAQA,aAAOG,KAAP;AACA;;AA9CK,GAAP;AAgDA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASE,2CAAT,CACNlD,WADM,EAENmD,eAFM,EAGL;AAAA;;AACD,QAAMC,oBAAoB,GAAG,kBAA7B;AACA,QAAMC,kBAAkB,GAAG,gBAA3B;AAEA,QAAM3C,KAAK,GAAGV,WAAW,CAAC4B,GAAZ,EAAd,CAJC,CAMD;AACA;AACA;AACA;;AACA,QAAM0B,iBAAiB,4BACtB5C,KAAK,CAAE2C,kBAAF,CADiB,oFACtB,sBAA6BE,WADP,qFACtB,uBAA0CC,QADpB,2DACtB,uBAAsDL,eAAtD,CADD;AAEA,QAAMM,cAAc,4BAAG/C,KAAK,CAAEyC,eAAF,CAAR,oFAAG,sBAA0BI,WAA7B,2DAAG,uBAAuCC,QAA9D;AACA,QAAME,iBAAiB,GAAGJ,iBAAiB,GACxCA,iBADwC,GAExCG,cAFH;;AAIA,MAAKC,iBAAL,EAAyB;AAAA;;AACxB,UAAMC,mBAAmB,4BAAGjD,KAAK,CAAE0C,oBAAF,CAAR,0DAAG,sBAA+BG,WAA3D,CADwB,CAGxB;;AACA,QAAK,EAAEI,mBAAF,aAAEA,mBAAF,eAAEA,mBAAmB,CAAIR,eAAJ,CAArB,CAAL,EAAkD;AACjD;AACA;AACA;AACAnD,MAAAA,WAAW,CAAC6B,GAAZ,CAAiBuB,oBAAjB,EAAuC;AACtCG,QAAAA,WAAW,EAAE,EACZ,GAAGI,mBADS;AAEZ,WAAER,eAAF,GAAqBO;AAFT;AADyB,OAAvC,EAJiD,CAWjD;;AACA,UAAKJ,iBAAL,EAAyB;AAAA;;AACxB,cAAMM,mBAAmB,GAAGlD,KAAK,CAAE2C,kBAAF,CAAjC;AACA,cAAMQ,oBAAoB,6BACzBnD,KAAK,CAAE2C,kBAAF,CADoB,qFACzB,uBAA6BE,WADJ,2DACzB,uBAA0CC,QAD3C;AAGAxD,QAAAA,WAAW,CAAC6B,GAAZ,CAAiBwB,kBAAjB,EAAqC,EACpC,GAAGO,mBADiC;AAEpCL,UAAAA,WAAW,EAAE;AACZC,YAAAA,QAAQ,EAAE,EACT,GAAGK,oBADM;AAET,eAAEV,eAAF,GAAqBrG;AAFZ;AADE;AAFuB,SAArC;AASA,OA1BgD,CA4BjD;;;AACA,UAAK2G,cAAL,EAAsB;AAAA;;AACrB,cAAMK,gBAAgB,GAAGpD,KAAK,CAAEyC,eAAF,CAA9B;AACA,cAAMY,iBAAiB,6BAAGrD,KAAK,CAAEyC,eAAF,CAAR,2DAAG,uBAA0BI,WAApD;AAEAvD,QAAAA,WAAW,CAAC6B,GAAZ,CAAiBsB,eAAjB,EAAkC,EACjC,GAAGW,gBAD8B;AAEjCP,UAAAA,WAAW,EAAE,EACZ,GAAGQ,iBADS;AAEZP,YAAAA,QAAQ,EAAE1G;AAFE;AAFoB,SAAlC;AAOA;AACD;AACD;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASkH,6CAAT,CACNhE,WADM,QAGNwB,GAHM,EAKL;AAAA;;AAAA,MAHD;AAAEyC,IAAAA,IAAI,EAAEd,eAAR;AAAyBe,IAAAA;AAAzB,GAGC;AAAA,MADDC,OACC,uEADShE,4CACT;AACD,QAAMiD,oBAAoB,GAAG,kBAA7B;AACA,QAAM1C,KAAK,GAAGV,WAAW,CAAC4B,GAAZ,EAAd;AACA,QAAMwC,gBAAgB,6BAAG1D,KAAK,CAAEyC,eAAF,CAAR,qFAAG,uBAA0BI,WAA7B,2DAAG,uBAAyC/B,GAAzC,CAAzB,CAHC,CAKD;;AACA,MAAK4C,gBAAgB,KAAKtH,SAA1B,EAAsC;AACrC;AACA;;AAED,QAAMuH,gBAAgB,6BACrB3D,KAAK,CAAE0C,oBAAF,CADgB,qFACrB,uBAA+BG,WADV,qFACrB,uBAA8CW,KAA9C,CADqB,2DACrB,uBAAyD1C,GAAzD,CADD,CAVC,CAaD;;AACA,MAAK6C,gBAAL,EAAwB;AACvB;AACA;;AAED,QAAMC,WAAW,6BAAG5D,KAAK,CAAE0C,oBAAF,CAAR,2DAAG,uBAA+BG,WAAnD;AACA,QAAMgB,gBAAgB,6BACrB7D,KAAK,CAAE0C,oBAAF,CADgB,qFACrB,uBAA+BG,WADV,2DACrB,uBAA8CW,KAA9C,CADD,CAnBC,CAsBD;AACA;;AACA,QAAMM,oBAAoB,GAAGL,OAAO,CAAE;AAAE,KAAE3C,GAAF,GAAS4C;AAAX,GAAF,CAApC;AAEApE,EAAAA,WAAW,CAAC6B,GAAZ,CAAiBuB,oBAAjB,EAAuC;AACtCG,IAAAA,WAAW,EAAE,EACZ,GAAGe,WADS;AAEZ,OAAEJ,KAAF,GAAW,EACV,GAAGK,gBADO;AAEV,WAAGC;AAFO;AAFC;AADyB,GAAvC,EA1BC,CAoCD;;AACA,QAAMV,gBAAgB,GAAGpD,KAAK,CAAEyC,eAAF,CAA9B;AACA,QAAMsB,oBAAoB,6BAAG/D,KAAK,CAAEyC,eAAF,CAAR,2DAAG,uBAA0BI,WAAvD;AACAvD,EAAAA,WAAW,CAAC6B,GAAZ,CAAiBsB,eAAjB,EAAkC,EACjC,GAAGW,gBAD8B;AAEjCP,IAAAA,WAAW,EAAE,EACZ,GAAGkB,oBADS;AAEZ,OAAEjD,GAAF,GAAS1E;AAFG;AAFoB,GAAlC;AAOA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAAS4H,qBAAT,CAAgCnB,WAAhC,EAA8C;AAAA;;AACpD,QAAMoB,MAAM,0BAAGpB,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEoB,MAAhB,qEAA0B,EAAtC;AACA,SAAOlC,MAAM,CAACP,IAAP,CAAayC,MAAb,EAAsBpC,MAAtB,CACN,CAAEqC,aAAF,EAAiBC,SAAjB,KAAgC;AAC/B,UAAMC,KAAK,GAAGH,MAAM,CAAEE,SAAF,CAApB;;AAEA,QAAK,CAAAC,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,OAAP,MAAmB,KAAxB,EAAgC;AAC/BH,MAAAA,aAAa,CAACI,cAAd,CAA6BC,IAA7B,CAAmCJ,SAAnC;AACA;;AAED,QAAK,CAAAC,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEI,MAAP,MAAkB,IAAvB,EAA8B;AAC7BN,MAAAA,aAAa,CAACO,UAAd,CAAyBF,IAAzB,CAA+BJ,SAA/B;AACA;;AAED,WAAOD,aAAP;AACA,GAbK,EAcN;AAAEI,IAAAA,cAAc,EAAE,EAAlB;AAAsBG,IAAAA,UAAU,EAAE;AAAlC,GAdM,CAAP;AAgBA;AAEM,SAASC,qDAAT,CACNpF,WADM,EAEL;AAAA;;AACD,QAAMqD,kBAAkB,GAAG,gBAA3B;AACA,QAAMD,oBAAoB,GAAG,kBAA7B;AAEA,MAAI1C,KAAK,GAAGV,WAAW,CAAC4B,GAAZ,EAAZ;AAEA,QAAMyD,eAAe,6BAAG3E,KAAK,CAAE2C,kBAAF,CAAR,qFAAG,uBAA6BE,WAAhC,2DAAG,uBAA0CC,QAAlE;;AAEA,OAAM,MAAMU,KAAZ,IAAqBmB,eAArB,EAAuC;AAAA;;AACtC;AACA,QAAKnB,KAAK,CAACoB,UAAN,CAAkB,MAAlB,CAAL,EAAkC;AACjC;AACA,KAJqC,CAMtC;;;AACA,UAAM5B,iBAAiB,GAAG2B,eAAe,CAAEnB,KAAF,CAAzC;;AACA,QAAK,CAAER,iBAAP,EAA2B;AAC1B;AACA;;AAED,UAAMC,mBAAmB,6BAAGjD,KAAK,CAAE0C,oBAAF,CAAR,2DAAG,uBAA+BG,WAA3D,CAZsC,CActC;;AACAvD,IAAAA,WAAW,CAAC6B,GAAZ,CAAiBuB,oBAAjB,EAAuC;AACtCG,MAAAA,WAAW,EAAE,EACZ,GAAGI,mBADS;AAEZ,SAAEO,KAAF,GAAWR;AAFC;AADyB,KAAvC,EAfsC,CAsBtC;AACA;AACA;;AACAhD,IAAAA,KAAK,GAAGV,WAAW,CAAC4B,GAAZ,EAAR;AACA,UAAMgC,mBAAmB,GAAGlD,KAAK,CAAE2C,kBAAF,CAAjC;AACA,UAAMQ,oBAAoB,6BACzBnD,KAAK,CAAE2C,kBAAF,CADoB,qFACzB,uBAA6BE,WADJ,2DACzB,uBAA0CC,QAD3C;AAGAxD,IAAAA,WAAW,CAAC6B,GAAZ,CAAiBwB,kBAAjB,EAAqC,EACpC,GAAGO,mBADiC;AAEpCL,MAAAA,WAAW,EAAE;AACZC,QAAAA,QAAQ,EAAE,EACT,GAAGK,oBADM;AAET,WAAEK,KAAF,GAAWpH;AAFF;AADE;AAFuB,KAArC;AASA;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASyI,6CAAT,CAAwDvF,WAAxD,EAAsE;AAAA;;AAC5E,QAAMqD,kBAAkB,GAAG,gBAA3B;AACA,QAAMD,oBAAoB,GAAG,kBAA7B;AACA,QAAM1C,KAAK,GAAGV,WAAW,CAAC4B,GAAZ,EAAd;AACA,QAAM4D,iBAAiB,8BAAG9E,KAAK,CAAE2C,kBAAF,CAAR,4DAAG,wBAA6BoC,WAAvD,CAJ4E,CAM5E;;AACA,MAAK,CAAED,iBAAP,EAA2B;AAC1B;AACA;;AAED,QAAME,cAAc,wDAAGhF,KAAK,CAAE0C,oBAAF,CAAR,4DAAG,wBAA+BG,WAAlC,2EAAiD,EAArE,CAX4E,CAa5E;AACA;AACA;;AACA,QAAMoC,wBAAwB,4BAC7BH,iBAD6B,aAC7BA,iBAD6B,iDAC7BA,iBAAiB,CAAEI,iBADU,2DAC7B,uBAAsCC,iBADT,yEAC8B,EAD5D;AAGA,QAAMC,2BAA2B,GAAGrD,MAAM,CAACP,IAAP,CACnCyD,wBADmC,EAElCpD,MAFkC,CAE1B,CAAEC,WAAF,EAAe0B,KAAf,KAA0B;AAAA;;AACnC,UAAMjD,IAAI,GAAG0E,wBAAwB,CAAEzB,KAAF,CAArC,CADmC,CAGnC;;AACA,8BAAK1B,WAAW,CAAE0B,KAAF,CAAhB,+CAAK,mBAAsB2B,iBAA3B,EAA+C;AAC9C,aAAOrD,WAAP;AACA;;AAED,WAAO,EACN,GAAGA,WADG;AAEN,OAAE0B,KAAF,GAAW,EACV,GAAG1B,WAAW,CAAE0B,KAAF,CADJ;AAEV2B,QAAAA,iBAAiB,EAAE5E;AAFT;AAFL,KAAP;AAOA,GAjBmC,EAiBjCyE,cAjBiC,CAApC,CAnB4E,CAsC5E;AACA;;AACA,QAAMK,iBAAiB,4BACtBP,iBADsB,aACtBA,iBADsB,iDACtBA,iBAAiB,CAAEQ,mBADG,2DACtB,uBAAwCC,WADlB,yEACiC,EADxD;AAEA,QAAMC,gBAAgB,GAAGzD,MAAM,CAACP,IAAP,CAAa6D,iBAAb,EAAiCxD,MAAjC,CACxB,CAAEC,WAAF,EAAe0B,KAAf,KAA0B;AAAA;;AACzB,UAAMjD,IAAI,GAAG8E,iBAAiB,CAAE7B,KAAF,CAA9B,CADyB,CAEzB;;AACA,+BAAK1B,WAAW,CAAE0B,KAAF,CAAhB,gDAAK,oBAAsB+B,WAA3B,EAAyC;AACxC,aAAOzD,WAAP;AACA;;AAED,WAAO,EACN,GAAGA,WADG;AAEN,OAAE0B,KAAF,GAAW,EACV,GAAG1B,WAAW,CAAE0B,KAAF,CADJ;AAEV+B,QAAAA,WAAW,EAAEhF;AAFH;AAFL,KAAP;AAOA,GAfuB,EAgBxB6E,2BAhBwB,CAAzB;AAmBA9F,EAAAA,WAAW,CAAC6B,GAAZ,CAAiBuB,oBAAjB,EAAuC;AACtCG,IAAAA,WAAW,EAAE2C;AADyB,GAAvC,EA7D4E,CAiE5E;;AACA,QAAMC,mBAAmB,GAAGzF,KAAK,CAAE2C,kBAAF,CAAjC;AACArD,EAAAA,WAAW,CAAC6B,GAAZ,CAAiBwB,kBAAjB,EAAqC,EACpC,GAAG8C,mBADiC;AAEpCV,IAAAA,WAAW,EAAE3I;AAFuB,GAArC;AAIA;;AAEDgF,iBAAiB,CAACsE,iBAAlB,GAAwCrE,aAAF,IAAqB;AAC1D,QAAM/B,WAAW,GAAGa,0BAA0B,CAAEkB,aAAF,CAA9C,CAD0D,CAG1D;;AACAmB,EAAAA,2CAA2C,CAC1ClD,WAD0C,EAE1C,mBAF0C,CAA3C;AAIAkD,EAAAA,2CAA2C,CAC1ClD,WAD0C,EAE1C,wBAF0C,CAA3C;AAIAkD,EAAAA,2CAA2C,CAC1ClD,WAD0C,EAE1C,gBAF0C,CAA3C;AAIAkD,EAAAA,2CAA2C,CAC1ClD,WAD0C,EAE1C,gBAF0C,CAA3C;AAIAoF,EAAAA,qDAAqD,CAAEpF,WAAF,CAArD,CApB0D,CAsB1D;;AACAgE,EAAAA,6CAA6C,CAC5ChE,WAD4C,EAE5C;AAAEiE,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GAF4C,EAG5C,kBAH4C,CAA7C;AAKAF,EAAAA,6CAA6C,CAC5ChE,WAD4C,EAE5C;AAAEiE,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GAF4C,EAG5C,YAH4C,CAA7C;AAKAF,EAAAA,6CAA6C,CAC5ChE,WAD4C,EAE5C;AAAEiE,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GAF4C,EAG5C,0BAH4C,CAA7C;AAKAF,EAAAA,6CAA6C,CAC5ChE,WAD4C,EAE5C;AAAEiE,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GAF4C,EAG5C,QAH4C,EAI5CQ,qBAJ4C,CAA7C;AAMAV,EAAAA,6CAA6C,CAC5ChE,WAD4C,EAE5C;AAAEiE,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAF4C,EAG5C,yBAH4C,CAA7C;AAKAF,EAAAA,6CAA6C,CAC5ChE,WAD4C,EAE5C;AAAEiE,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GAF4C,EAG5C,YAH4C,CAA7C;AAKAqB,EAAAA,6CAA6C,CAAEvF,WAAF,CAA7C;AACA,CAvDD;;AAyDA,+DAAe8B,iBAAf;;;;;;;;;;;;;;ACpoBA;AACA;AACA;AACA;AAEA,IAAIf,OAAJ;;AAEA,IAAI;AACH;AACA;AACA;AACAA,EAAAA,OAAO,GAAGuF,MAAM,CAACC,YAAjB;AACAxF,EAAAA,OAAO,CAACW,OAAR,CAAiB,0BAAjB,EAA6C,EAA7C;AACAX,EAAAA,OAAO,CAACyF,UAAR,CAAoB,0BAApB;AACA,CAPD,CAOE,OAAQ9J,KAAR,EAAgB;AACjBqE,EAAAA,OAAO,GAAGsF,+CAAV;AACA;;AAED,+DAAetF,OAAf;;;;;;;;;;;;;AClBA,IAAIsF,aAAJ;AAEA,MAAMtF,OAAO,GAAG;AACfK,EAAAA,OAAO,CAAEI,GAAF,EAAQ;AACd,QAAK,CAAE6E,aAAF,IAAmB,CAAEA,aAAa,CAAE7E,GAAF,CAAvC,EAAiD;AAChD,aAAO,IAAP;AACA;;AAED,WAAO6E,aAAa,CAAE7E,GAAF,CAApB;AACA,GAPc;;AAQfE,EAAAA,OAAO,CAAEF,GAAF,EAAOC,KAAP,EAAe;AACrB,QAAK,CAAE4E,aAAP,EAAuB;AACtBtF,MAAAA,OAAO,CAAC0F,KAAR;AACA;;AAEDJ,IAAAA,aAAa,CAAE7E,GAAF,CAAb,GAAuBkF,MAAM,CAAEjF,KAAF,CAA7B;AACA,GAdc;;AAefgF,EAAAA,KAAK,GAAG;AACPJ,IAAAA,aAAa,GAAG5D,MAAM,CAACkE,MAAP,CAAe,IAAf,CAAhB;AACA;;AAjBc,CAAhB;AAoBA,+DAAe5F,OAAf;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAM8F,iBAAiB,GAAG,MAAQC,IAAF,IAAcnG,MAAF,IAAc;AACzD,MAAKiG,sDAAS,CAAEjG,MAAF,CAAd,EAA2B;AAC1B,WAAOA,MAAM,CAACoG,IAAP,CAAeC,cAAF,IAAsB;AACzC,UAAKA,cAAL,EAAsB;AACrB,eAAOF,IAAI,CAAEE,cAAF,CAAX;AACA;AACD,KAJM,CAAP;AAKA;;AAED,SAAOF,IAAI,CAAEnG,MAAF,CAAX;AACA,CAVD;;AAYA,+DAAekG,iBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;;AACA;;AAEA,MAAMgB,mBAAmB,GAAKC,KAAF,IAAa;AACxC,QAAMC,MAAM,GAAG,CAAE,GAAGD,KAAL,CAAf;;AACA,OAAM,IAAIE,CAAC,GAAGD,MAAM,CAACE,MAAP,GAAgB,CAA9B,EAAiCD,CAAC,IAAI,CAAtC,EAAyCA,CAAC,EAA1C,EAA+C;AAC9C,QAAKD,MAAM,CAAEC,CAAF,CAAN,KAAgBlL,SAArB,EAAiC;AAChCiL,MAAAA,MAAM,CAACG,MAAP,CAAeF,CAAf,EAAkB,CAAlB;AACA;AACD;;AACD,SAAOD,MAAP;AACA,CARD;AAUA;AACA;AACA;AACA;AACA;;;AACA,SAASI,oBAAT,GAAgC;AAC/B,QAAMC,KAAK,GAAG,EAAd;AACA,SAAO;AACNC,IAAAA,SAAS,CAAExJ,YAAF,EAAgBC,IAAhB,EAAuB;AAC/B,aACCsJ,KAAK,CAAEvJ,YAAF,CAAL,IACAuJ,KAAK,CAAEvJ,YAAF,CAAL,CAAsB+C,GAAtB,CAA2BiG,mBAAmB,CAAE/I,IAAF,CAA9C,CAFD;AAIA,KANK;;AAQN2H,IAAAA,KAAK,CAAE5H,YAAF,EAAgBC,IAAhB,EAAuB;AAC3B,UAAKsJ,KAAK,CAAEvJ,YAAF,CAAV,EAA6B;AAC5BuJ,QAAAA,KAAK,CAAEvJ,YAAF,CAAL,CAAsByJ,MAAtB,CAA8BT,mBAAmB,CAAE/I,IAAF,CAAjD;AACA;AACD,KAZK;;AAcNyJ,IAAAA,aAAa,CAAE1J,YAAF,EAAgBC,IAAhB,EAAuB;AACnC,UAAK,CAAEsJ,KAAK,CAAEvJ,YAAF,CAAZ,EAA+B;AAC9BuJ,QAAAA,KAAK,CAAEvJ,YAAF,CAAL,GAAwB,IAAIwI,2DAAJ,EAAxB;AACA;;AAEDe,MAAAA,KAAK,CAAEvJ,YAAF,CAAL,CAAsBgD,GAAtB,CAA2BgG,mBAAmB,CAAE/I,IAAF,CAA9C,EAAwD,IAAxD;AACA;;AApBK,GAAP;AAsBA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACe,SAAS0J,gBAAT,CAA2BhH,GAA3B,EAAgCV,OAAhC,EAA0C;AACxD,SAAO;AACN7B,IAAAA,IAAI,EAAEuC,GADA;AAENiH,IAAAA,WAAW,EAAIzO,QAAF,IAAgB;AAC5B,YAAMyG,OAAO,GAAGK,OAAO,CAACL,OAAxB;AACA,YAAMiI,SAAS,GAAG;AACjB1O,QAAAA,QADiB;;AAEjB,YAAII,QAAJ,GAAe;AACd,iBAAOqI,MAAM,CAACC,MAAP,CACJ/B,MAAF,IAAcqC,KAAK,CAAC5I,QAAN,CAAgBuG,MAAhB,CADR,EAENgI,UAAU,EAFJ,CAAP;AAIA,SAPgB;;AAQjB,YAAItM,MAAJ,GAAa;AACZ,iBAAOoG,MAAM,CAACC,MAAP,CACJ/C,QAAF,IACCA,QAAQ,CAAEqD,KAAK,CAAC4F,0BAAN,EAAF,CAFH,EAGNC,YAAY,EAHN,CAAP;AAKA,SAdgB;;AAejB,YAAI3J,aAAJ,GAAoB;AACnB,iBAAO4J,mBAAmB,EAA1B;AACA;;AAjBgB,OAAlB;AAoBA,YAAM9F,KAAK,GAAG+F,qBAAqB,CAClCvH,GADkC,EAElCV,OAFkC,EAGlC9G,QAHkC,EAIlC0O,SAJkC,CAAnC;AAMA,YAAMM,cAAc,GAAGb,oBAAoB,EAA3C;AAEA,UAAIc,SAAJ;AACA,YAAMC,OAAO,GAAGC,UAAU,CACzB,EACC,GAAGvB,8CADJ;AAEC,WAAG9G,OAAO,CAACoI;AAFZ,OADyB,EAKzBlG,KALyB,CAA1B;AAQA,UAAIoG,SAAS,GAAGC,YAAY,CAC3B,EACC,GAAG5P,iDAAS,CACXkO,gDADW,EAEThI,QAAF,IAAgB,UAAEe,KAAF;AAAA,4CAAY5B,IAAZ;AAAYA,YAAAA,IAAZ;AAAA;;AAAA,iBACfa,QAAQ,CAAEe,KAAK,CAAC4I,QAAR,EAAkB,GAAGxK,IAArB,CADO;AAAA,SAFL,CADb;AAMC,WAAGrF,iDAAS,CAAEqH,OAAO,CAACsI,SAAV,EAAuBzJ,QAAF,IAAgB;AAChD,cAAKA,QAAQ,CAACC,kBAAd,EAAmC;AAClCD,YAAAA,QAAQ,CAAC3F,QAAT,GAAoBA,QAApB;AACA;;AAED,iBAAO,UAAE0G,KAAF;AAAA,+CAAY5B,IAAZ;AAAYA,cAAAA,IAAZ;AAAA;;AAAA,mBACNa,QAAQ,CAAEe,KAAK,CAAC6I,IAAR,EAAc,GAAGzK,IAAjB,CADF;AAAA,WAAP;AAEA,SAPW;AANb,OAD2B,EAgB3BkE,KAhB2B,CAA5B;;AAkBA,UAAKlC,OAAO,CAACmI,SAAb,EAAyB;AACxB,cAAMlB,MAAM,GAAGyB,YAAY,CAC1B1I,OAAO,CAACmI,SADkB,EAE1BG,SAF0B,EAG1BpG,KAH0B,EAI1BgG,cAJ0B,CAA3B;AAMAC,QAAAA,SAAS,GAAGlB,MAAM,CAACkB,SAAnB;AACAG,QAAAA,SAAS,GAAGrB,MAAM,CAACqB,SAAnB;AACA;;AAED,YAAMK,gBAAgB,GAAGC,mBAAmB,CAAEN,SAAF,EAAapG,KAAb,CAA5C;;AAEA,YAAM6F,YAAY,GAAG,MAAMO,SAA3B;;AACA,YAAMT,UAAU,GAAG,MAAMO,OAAzB;;AACA,YAAMJ,mBAAmB,GAAG,MAAMW,gBAAlC,CAxE4B,CA0E5B;AACA;AACA;;;AACAzG,MAAAA,KAAK,CAAC4F,0BAAN,GAAmC5F,KAAK,CAACf,QAAzC;;AACAe,MAAAA,KAAK,CAACf,QAAN,GAAiB,MAAMe,KAAK,CAAC4F,0BAAN,GAAmCW,IAA1D,CA9E4B,CAgF5B;AACA;;;AACA,YAAMtG,SAAS,GACdD,KAAK,KACD2G,QAAF,IAAgB;AACjB,YAAIhH,SAAS,GAAGK,KAAK,CAAC4F,0BAAN,EAAhB;;AACA,eAAO5F,KAAK,CAACC,SAAN,CAAiB,MAAM;AAC7B,gBAAMvC,KAAK,GAAGsC,KAAK,CAAC4F,0BAAN,EAAd;;AACA,gBAAMgB,UAAU,GAAGlJ,KAAK,KAAKiC,SAA7B;AACAA,UAAAA,SAAS,GAAGjC,KAAZ;;AAEA,cAAKkJ,UAAL,EAAkB;AACjBD,YAAAA,QAAQ;AACR;AACD,SARM,CAAP;AASA,OAZI,CADN,CAlF4B,CAiG5B;AACA;;;AACA,aAAO;AACNlJ,QAAAA,OADM;AAENuC,QAAAA,KAFM;AAGNkG,QAAAA,OAHM;AAINE,QAAAA,SAJM;AAKNH,QAAAA,SALM;AAMNJ,QAAAA,YANM;AAONC,QAAAA,mBAPM;AAQNH,QAAAA,UARM;AASN1F,QAAAA;AATM,OAAP;AAWA;AAhHK,GAAP;AAkHA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAS8F,qBAAT,CAAgCvH,GAAhC,EAAqCV,OAArC,EAA8C9G,QAA9C,EAAwD0O,SAAxD,EAAoE;AACnE,QAAMtJ,QAAQ,GAAG,EAChB,GAAG0B,OAAO,CAAC1B,QADK;AAEhB,OAAGC,sDAAeA;AAFF,GAAjB;AAKA,QAAMwK,kBAAkB,GAAGpQ,iDAAS,CAAE2F,QAAF,EAAc0K,OAAF,IAC/CA,OAAO,CAAChK,iBAAR,GAA4BgK,OAAO,CAAE9P,QAAF,CAAnC,GAAkD8P,OADf,CAApC;AAIA,QAAMC,WAAW,GAAG,CACnBvC,uEAA8B,CAAExN,QAAF,EAAYwH,GAAZ,CADX,EAEnB+F,2DAFmB,EAGnBD,+DAA4B,CAAEuC,kBAAF,CAHT,EAInBpC,6DAAqB,CAAEiB,SAAF,CAJF,CAApB;AAOA,QAAMsB,SAAS,GAAG,CAAE9C,uDAAe,CAAE,GAAG6C,WAAL,CAAjB,CAAlB;;AACA,MACC,OAAOzD,MAAP,KAAkB,WAAlB,IACAA,MAAM,CAAC2D,4BAFR,EAGE;AACDD,IAAAA,SAAS,CAAC/E,IAAV,CACCqB,MAAM,CAAC2D,4BAAP,CAAqC;AACpChL,MAAAA,IAAI,EAAEuC,GAD8B;AAEpC0I,MAAAA,UAAU,EAAE1I;AAFwB,KAArC,CADD;AAMA;;AAED,QAAM;AAAEf,IAAAA,OAAF;AAAWsC,IAAAA;AAAX,MAA4BjC,OAAlC;AACA,QAAMqJ,eAAe,GAAG9J,6DAAe,CAAE;AACxCiJ,IAAAA,QAAQ,EAAE5B,0DAD8B;AAExC6B,IAAAA,IAAI,EAAE9I;AAFkC,GAAF,CAAvC;AAKA,SAAOwG,mDAAW,CACjBkD,eADiB,EAEjB;AAAEZ,IAAAA,IAAI,EAAExG;AAAR,GAFiB,EAGjBoE,iDAAS,CAAE6C,SAAF,CAHQ,CAAlB;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASX,YAAT,CAAuBD,SAAvB,EAAkCpG,KAAlC,EAA0C;AACzC,QAAMoH,mBAAmB,GAAK1K,gBAAF,IAAwB;AACnD,UAAMC,QAAQ,GAAG,SAAS0K,WAAT,GAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMC,UAAU,GAAGC,SAAS,CAACtC,MAA7B;AACA,YAAMnJ,IAAI,GAAG,IAAIsD,KAAJ,CAAWkI,UAAU,GAAG,CAAxB,CAAb;AACAxL,MAAAA,IAAI,CAAE,CAAF,CAAJ,GAAYkE,KAAK,CAAC4F,0BAAN,EAAZ;;AACA,WAAM,IAAIZ,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGsC,UAArB,EAAiCtC,CAAC,EAAlC,EAAuC;AACtClJ,QAAAA,IAAI,CAAEkJ,CAAC,GAAG,CAAN,CAAJ,GAAgBuC,SAAS,CAAEvC,CAAF,CAAzB;AACA;;AAED,aAAOtI,gBAAgB,CAAE,GAAGZ,IAAL,CAAvB;AACA,KAhBD;;AAiBAa,IAAAA,QAAQ,CAACJ,WAAT,GAAuB,KAAvB;AACA,WAAOI,QAAP;AACA,GApBD;;AAsBA,SAAOlG,iDAAS,CAAE2P,SAAF,EAAagB,mBAAb,CAAhB;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASjB,UAAT,CAAqBD,OAArB,EAA8BlG,KAA9B,EAAsC;AACrC,QAAMwH,iBAAiB,GAAK7J,MAAF,IAAc,YAAe;AACtD,WAAO8J,OAAO,CAACC,OAAR,CAAiB1H,KAAK,CAAC5I,QAAN,CAAgBuG,MAAM,CAAE,YAAF,CAAtB,CAAjB,CAAP;AACA,GAFD;;AAIA,SAAOlH,iDAAS,CAAEyP,OAAF,EAAWsB,iBAAX,CAAhB;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASd,mBAAT,CAA8BN,SAA9B,EAAyCpG,KAAzC,EAAiD;AAChD,QAAM2H,cAAc,GAAGvD,4CAAI,CAAEgC,SAAF,EAAa,CACvC,gBADuC,EAEvC,sBAFuC,EAGvC,uBAHuC,EAIvC,qBAJuC,EAKvC,aALuC,EAMvC,oBANuC,EAOvC,oBAPuC,EAQvC,oBARuC,CAAb,CAA3B;AAWA,SAAO3P,iDAAS,CAAEkR,cAAF,EAAkB,CAAEhL,QAAF,EAAYd,YAAZ,KAA8B;AAC/D;AACA;AACA,QAAK,CAAEc,QAAQ,CAACJ,WAAhB,EAA8B;AAC7B,aAAO;AAAA,2CAAWT,IAAX;AAAWA,UAAAA,IAAX;AAAA;;AAAA,eAAqBa,QAAQ,CAACiL,KAAT,CAAgB,IAAhB,EAAsB9L,IAAtB,CAArB;AAAA,OAAP;AACA;;AAED,WAAO,YAAe;AAAA,yCAAVA,IAAU;AAAVA,QAAAA,IAAU;AAAA;;AACrB,aAAO,IAAI2L,OAAJ,CAAa,CAAEC,OAAF,EAAWG,MAAX,KAAuB;AAC1C,cAAMC,WAAW,GAAG,MACnB1B,SAAS,CAAC2B,qBAAV,CAAiClM,YAAjC,EAA+CC,IAA/C,CADD;;AAEA,cAAMkM,QAAQ,GAAKjD,MAAF,IAAc;AAC9B,gBAAMkD,SAAS,GAAG7B,SAAS,CAAC8B,mBAAV,CACjBrM,YADiB,EAEjBC,IAFiB,CAAlB;;AAIA,cAAKmM,SAAL,EAAiB;AAChB,kBAAMvO,KAAK,GAAG0M,SAAS,CAAC+B,kBAAV,CACbtM,YADa,EAEbC,IAFa,CAAd;AAIA+L,YAAAA,MAAM,CAAEnO,KAAF,CAAN;AACA,WAND,MAMO;AACNgO,YAAAA,OAAO,CAAE3C,MAAF,CAAP;AACA;AACD,SAdD;;AAeA,cAAMqD,SAAS,GAAG,MAAMzL,QAAQ,CAACiL,KAAT,CAAgB,IAAhB,EAAsB9L,IAAtB,CAAxB,CAlB0C,CAmB1C;;;AACA,cAAMiJ,MAAM,GAAGqD,SAAS,EAAxB;;AACA,YAAKN,WAAW,EAAhB,EAAqB;AACpB,iBAAOE,QAAQ,CAAEjD,MAAF,CAAf;AACA;;AAED,cAAMtK,WAAW,GAAGuF,KAAK,CAACC,SAAN,CAAiB,MAAM;AAC1C,cAAK6H,WAAW,EAAhB,EAAqB;AACpBrN,YAAAA,WAAW;AACXuN,YAAAA,QAAQ,CAAEI,SAAS,EAAX,CAAR;AACA;AACD,SALmB,CAApB;AAMA,OA/BM,CAAP;AAgCA,KAjCD;AAkCA,GAzCe,CAAhB;AA0CA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS5B,YAAT,CAAuBP,SAAvB,EAAkCG,SAAlC,EAA6CpG,KAA7C,EAAoDgG,cAApD,EAAqE;AACpE;AACA;AACA;AACA,QAAMqC,eAAe,GAAG5R,iDAAS,CAAEwP,SAAF,EAAeqC,QAAF,IAAgB;AAC7D,QAAKA,QAAQ,CAACC,OAAd,EAAwB;AACvB,aAAOD,QAAP;AACA;;AAED,WAAO,EACN,GAAGA,QADG;AACO;AACbC,MAAAA,OAAO,EAAED,QAFH,CAEa;;AAFb,KAAP;AAIA,GATgC,CAAjC;;AAWA,QAAME,WAAW,GAAG,CAAE7L,QAAF,EAAYd,YAAZ,KAA8B;AACjD,UAAMyM,QAAQ,GAAGrC,SAAS,CAAEpK,YAAF,CAA1B;;AACA,QAAK,CAAEyM,QAAP,EAAkB;AACjB3L,MAAAA,QAAQ,CAACJ,WAAT,GAAuB,KAAvB;AACA,aAAOI,QAAP;AACA;;AAED,UAAM8L,gBAAgB,GAAG,YAAe;AAAA,yCAAV3M,IAAU;AAAVA,QAAAA,IAAU;AAAA;;AACvC,qBAAe4M,eAAf,GAAiC;AAChC,cAAMhL,KAAK,GAAGsC,KAAK,CAACf,QAAN,EAAd;;AAEA,YACC+G,cAAc,CAACX,SAAf,CAA0BxJ,YAA1B,EAAwCC,IAAxC,KACE,OAAOwM,QAAQ,CAACK,WAAhB,KAAgC,UAAhC,IACDL,QAAQ,CAACK,WAAT,CAAsBjL,KAAtB,EAA6B,GAAG5B,IAAhC,CAHF,EAIE;AACD;AACA;;AAED,cAAM;AAAEwK,UAAAA;AAAF,YAAetG,KAAK,CAAC4F,0BAAN,EAArB;;AAEA,YACCjB,qEAAA,CACC2B,QADD,EAECzK,YAFD,EAGCC,IAHD,CADD,EAME;AACD;AACA;;AAEDkK,QAAAA,cAAc,CAACT,aAAf,CAA8B1J,YAA9B,EAA4CC,IAA5C;AAEA+M,QAAAA,UAAU,CAAE,YAAY;AACvB7C,UAAAA,cAAc,CAACvC,KAAf,CAAsB5H,YAAtB,EAAoCC,IAApC;AACAkE,UAAAA,KAAK,CAAC5I,QAAN,CACCwN,8DAAA,CAAiC/I,YAAjC,EAA+CC,IAA/C,CADD;;AAGA,cAAI;AACH,kBAAMiN,eAAe,CACpB/I,KADoB,EAEpBqI,eAFoB,EAGpBxM,YAHoB,EAIpB,GAAGC,IAJiB,CAArB;AAMAkE,YAAAA,KAAK,CAAC5I,QAAN,CACCwN,+DAAA,CACC/I,YADD,EAECC,IAFD,CADD;AAMA,WAbD,CAaE,OAAQpC,KAAR,EAAgB;AACjBsG,YAAAA,KAAK,CAAC5I,QAAN,CACCwN,6DAAA,CACC/I,YADD,EAECC,IAFD,EAGCpC,KAHD,CADD;AAOA;AACD,SA3BS,CAAV;AA4BA;;AAEDgP,MAAAA,eAAe,CAAE,GAAG5M,IAAL,CAAf;AACA,aAAOa,QAAQ,CAAE,GAAGb,IAAL,CAAf;AACA,KA1DD;;AA2DA2M,IAAAA,gBAAgB,CAAClM,WAAjB,GAA+B,IAA/B;AACA,WAAOkM,gBAAP;AACA,GApED;;AAsEA,SAAO;AACNxC,IAAAA,SAAS,EAAEoC,eADL;AAENjC,IAAAA,SAAS,EAAE3P,iDAAS,CAAE2P,SAAF,EAAaoC,WAAb;AAFd,GAAP;AAIA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeO,eAAf,CAAgC/I,KAAhC,EAAuCiG,SAAvC,EAAkDpK,YAAlD,EAA0E;AACzE,QAAMyM,QAAQ,GAAG1J,2CAAG,CAAEqH,SAAF,EAAa,CAAEpK,YAAF,CAAb,CAApB;;AACA,MAAK,CAAEyM,QAAP,EAAkB;AACjB;AACA;;AAJwE,qCAAPxM,IAAO;AAAPA,IAAAA,IAAO;AAAA;;AAMzE,QAAM6B,MAAM,GAAG2K,QAAQ,CAACC,OAAT,CAAkB,GAAGzM,IAArB,CAAf;;AACA,MAAK6B,MAAL,EAAc;AACb,UAAMqC,KAAK,CAAC5I,QAAN,CAAgBuG,MAAhB,CAAN;AACA;AACD;;;;;;;;;;;;;;;;;;;;;;;;ACjfD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmL,eAAT,CAA0BjN,YAA1B,EAAwCC,IAAxC,EAA+C;AACrD,SAAO;AACNC,IAAAA,IAAI,EAAE,kBADA;AAENF,IAAAA,YAFM;AAGNC,IAAAA;AAHM,GAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASkN,gBAAT,CAA2BnN,YAA3B,EAAyCC,IAAzC,EAAgD;AACtD,SAAO;AACNC,IAAAA,IAAI,EAAE,mBADA;AAENF,IAAAA,YAFM;AAGNC,IAAAA;AAHM,GAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASmN,cAAT,CAAyBpN,YAAzB,EAAuCC,IAAvC,EAA6CpC,KAA7C,EAAqD;AAC3D,SAAO;AACNqC,IAAAA,IAAI,EAAE,iBADA;AAENF,IAAAA,YAFM;AAGNC,IAAAA,IAHM;AAINpC,IAAAA;AAJM,GAAP;AAMA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASwP,gBAAT,CAA2BrN,YAA3B,EAAyCC,IAAzC,EAAgD;AACtD,SAAO;AACNC,IAAAA,IAAI,EAAE,mBADA;AAENF,IAAAA,YAFM;AAGNC,IAAAA;AAHM,GAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASqN,iBAAT,CAA4BtN,YAA5B,EAA0CC,IAA1C,EAAiD;AACvD,SAAO;AACNC,IAAAA,IAAI,EAAE,oBADA;AAENF,IAAAA,YAFM;AAGNC,IAAAA;AAHM,GAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASsN,eAAT,CAA0BvN,YAA1B,EAAwCC,IAAxC,EAA8CuN,MAA9C,EAAuD;AAC7D,SAAO;AACNtN,IAAAA,IAAI,EAAE,kBADA;AAENF,IAAAA,YAFM;AAGNC,IAAAA,IAHM;AAINuN,IAAAA;AAJM,GAAP;AAMA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,oBAAT,CAA+BzN,YAA/B,EAA6CC,IAA7C,EAAoD;AAC1D,SAAO;AACNC,IAAAA,IAAI,EAAE,uBADA;AAENF,IAAAA,YAFM;AAGNC,IAAAA;AAHM,GAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;;AACO,SAASyN,4BAAT,GAAwC;AAC9C,SAAO;AACNxN,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASyN,oCAAT,CAA+C3N,YAA/C,EAA8D;AACpE,SAAO;AACNE,IAAAA,IAAI,EAAE,0CADA;AAENF,IAAAA;AAFM,GAAP;AAIA;;;;;;;;;;;;;;;;;;ACvJD;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM+N,iBAA6D,GAAGD,gDAAQ,CAG3E,cAH2E,CAAR,CAGjD,YAAsD;AAAA,MAApDjM,KAAoD,uEAA5C,IAAI2G,2DAAJ,EAA4C;AAAA,MAApB1G,MAAoB;;AAC1E,UAASA,MAAM,CAAC5B,IAAhB;AACC,SAAK,kBAAL;AAAyB;AACxB,cAAM6B,SAAS,GAAG,IAAIyG,2DAAJ,CAAsB3G,KAAtB,CAAlB;AACAE,QAAAA,SAAS,CAACiB,GAAV,CAAe6K,8DAAsB,CAAE/L,MAAM,CAAC7B,IAAT,CAArC,EAAsD;AACrD+N,UAAAA,MAAM,EAAE;AAD6C,SAAtD;AAGA,eAAOjM,SAAP;AACA;;AACD,SAAK,mBAAL;AAA0B;AACzB,cAAMA,SAAS,GAAG,IAAIyG,2DAAJ,CAAsB3G,KAAtB,CAAlB;AACAE,QAAAA,SAAS,CAACiB,GAAV,CAAe6K,8DAAsB,CAAE/L,MAAM,CAAC7B,IAAT,CAArC,EAAsD;AACrD+N,UAAAA,MAAM,EAAE;AAD6C,SAAtD;AAGA,eAAOjM,SAAP;AACA;;AACD,SAAK,iBAAL;AAAwB;AACvB,cAAMA,SAAS,GAAG,IAAIyG,2DAAJ,CAAsB3G,KAAtB,CAAlB;AACAE,QAAAA,SAAS,CAACiB,GAAV,CAAe6K,8DAAsB,CAAE/L,MAAM,CAAC7B,IAAT,CAArC,EAAsD;AACrD+N,UAAAA,MAAM,EAAE,OAD6C;AAErDnQ,UAAAA,KAAK,EAAEiE,MAAM,CAACjE;AAFuC,SAAtD;AAIA,eAAOkE,SAAP;AACA;;AACD,SAAK,mBAAL;AAA0B;AACzB,cAAMA,SAAS,GAAG,IAAIyG,2DAAJ,CAAsB3G,KAAtB,CAAlB;;AACA,aAAM,MAAMoM,cAAZ,IAA8BnM,MAAM,CAAC7B,IAArC,EAA4C;AAC3C8B,UAAAA,SAAS,CAACiB,GAAV,CAAe6K,8DAAsB,CAAEI,cAAF,CAArC,EAAyD;AACxDD,YAAAA,MAAM,EAAE;AADgD,WAAzD;AAGA;;AACD,eAAOjM,SAAP;AACA;;AACD,SAAK,oBAAL;AAA2B;AAC1B,cAAMA,SAAS,GAAG,IAAIyG,2DAAJ,CAAsB3G,KAAtB,CAAlB;;AACA,aAAM,MAAMoM,cAAZ,IAA8BnM,MAAM,CAAC7B,IAArC,EAA4C;AAC3C8B,UAAAA,SAAS,CAACiB,GAAV,CAAe6K,8DAAsB,CAAEI,cAAF,CAArC,EAAyD;AACxDD,YAAAA,MAAM,EAAE;AADgD,WAAzD;AAGA;;AACD,eAAOjM,SAAP;AACA;;AACD,SAAK,kBAAL;AAAyB;AACxB,cAAMA,SAAS,GAAG,IAAIyG,2DAAJ,CAAsB3G,KAAtB,CAAlB;AACAC,QAAAA,MAAM,CAAC7B,IAAP,CAAYtB,OAAZ,CAAqB,CAAEsP,cAAF,EAAkBC,GAAlB,KAA2B;AAC/C,gBAAMC,eAA2B,GAAG;AACnCH,YAAAA,MAAM,EAAE,OAD2B;AAEnCnQ,YAAAA,KAAK,EAAEI;AAF4B,WAApC;AAKA,gBAAMJ,KAAK,GAAGiE,MAAM,CAAC0L,MAAP,CAAeU,GAAf,CAAd;;AACA,cAAKrQ,KAAL,EAAa;AACZsQ,YAAAA,eAAe,CAACtQ,KAAhB,GAAwBA,KAAxB;AACA;;AAEDkE,UAAAA,SAAS,CAACiB,GAAV,CACC6K,8DAAsB,CAAEI,cAAF,CADvB,EAECE,eAFD;AAIA,SAfD;AAgBA,eAAOpM,SAAP;AACA;;AACD,SAAK,uBAAL;AAA8B;AAC7B,cAAMA,SAAS,GAAG,IAAIyG,2DAAJ,CAAsB3G,KAAtB,CAAlB;AACAE,QAAAA,SAAS,CAAC0H,MAAV,CAAkBoE,8DAAsB,CAAE/L,MAAM,CAAC7B,IAAT,CAAxC;AACA,eAAO8B,SAAP;AACA;AAjEF;;AAmEA,SAAOF,KAAP;AACA,CAxEqE,CAAtE;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMuM,UAAU,GAAG,YAA2D;AAAA,MAAzDvM,KAAyD,uEAAxB,EAAwB;AAAA,MAApBC,MAAoB;;AAC7E,UAASA,MAAM,CAAC5B,IAAhB;AACC,SAAK,iCAAL;AACC,aAAO,EAAP;;AACD,SAAK,0CAAL;AACC,aAAO0N,2CAAG,CAAE/L,KAAF,EAAS,CAAEC,MAAM,CAAC9B,YAAT,CAAT,CAAH,GACJuI,4CAAI,CAAE1G,KAAF,EAAS,CAAEC,MAAM,CAAC9B,YAAT,CAAT,CADA,GAEJ6B,KAFH;;AAGD,SAAK,kBAAL;AACA,SAAK,mBAAL;AACA,SAAK,iBAAL;AACA,SAAK,mBAAL;AACA,SAAK,oBAAL;AACA,SAAK,kBAAL;AACA,SAAK,uBAAL;AACC,aAAOkM,iBAAiB,CAAElM,KAAF,EAASC,MAAT,CAAxB;AAdF;;AAgBA,SAAOD,KAAP;AACA,CAlBD;;AAoBA,+DAAeuM,UAAf;;;;;;;;;;;;;;;;;;;;;;;;;;AC/IA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,kBAAT,CAA6BxM,KAA7B,EAAoC7B,YAApC,EAAkDC,IAAlD,EAAyD;AAC/D,QAAMzB,GAAG,GAAGuE,2CAAG,CAAElB,KAAF,EAAS,CAAE7B,YAAF,CAAT,CAAf;;AACA,MAAK,CAAExB,GAAP,EAAa;AACZ;AACA;;AAED,SAAOA,GAAG,CAACuE,GAAJ,CAAS8K,8DAAsB,CAAE5N,IAAF,CAA/B,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASqO,cAAT,CAAyBzM,KAAzB,EAAgC7B,YAAhC,EAA8CC,IAA9C,EAAqD;AAC3D,QAAMkO,eAAe,GAAGE,kBAAkB,CAAExM,KAAF,EAAS7B,YAAT,EAAuBC,IAAvB,CAA1C;AAEA,SAAOkO,eAAe,IAAIA,eAAe,CAACH,MAAhB,KAA2B,WAArD;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASjB,oBAAT,CAA+BlL,KAA/B,EAAsC7B,YAAtC,EAAoDC,IAApD,EAA2D;AACjE,SAAOoO,kBAAkB,CAAExM,KAAF,EAAS7B,YAAT,EAAuBC,IAAvB,CAAlB,KAAoDhC,SAA3D;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASiO,qBAAT,CAAgCrK,KAAhC,EAAuC7B,YAAvC,EAAqDC,IAArD,EAA4D;AAAA;;AAClE,QAAM+N,MAAM,0BAAGK,kBAAkB,CAAExM,KAAF,EAAS7B,YAAT,EAAuBC,IAAvB,CAArB,wDAAG,oBAAiD+N,MAAhE;AACA,SAAOA,MAAM,KAAK,UAAX,IAAyBA,MAAM,KAAK,OAA3C;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAAS3B,mBAAT,CAA8BxK,KAA9B,EAAqC7B,YAArC,EAAmDC,IAAnD,EAA0D;AAAA;;AAChE,SAAO,yBAAAoO,kBAAkB,CAAExM,KAAF,EAAS7B,YAAT,EAAuBC,IAAvB,CAAlB,8EAAiD+N,MAAjD,MAA4D,OAAnE;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAAS1B,kBAAT,CAA6BzK,KAA7B,EAAoC7B,YAApC,EAAkDC,IAAlD,EAAyD;AAC/D,QAAMkO,eAAe,GAAGE,kBAAkB,CAAExM,KAAF,EAAS7B,YAAT,EAAuBC,IAAvB,CAA1C;AACA,SAAO,CAAAkO,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEH,MAAjB,MAA4B,OAA5B,GAAsCG,eAAe,CAACtQ,KAAtD,GAA8D,IAArE;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAAS0Q,WAAT,CAAsB1M,KAAtB,EAA6B7B,YAA7B,EAA2CC,IAA3C,EAAkD;AAAA;;AACxD,SACC,yBAAAoO,kBAAkB,CAAExM,KAAF,EAAS7B,YAAT,EAAuBC,IAAvB,CAAlB,8EAAiD+N,MAAjD,MAA4D,WAD7D;AAGA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASQ,kBAAT,CAA6B3M,KAA7B,EAAqC;AAC3C,SAAOA,KAAP;AACA;;;;;;;;;;;;;;;;;ACzID;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMiM,QAAQ,GACpBW,cADuB,IAGvB7M,OADI,IAE8C,YAG9C;AAAA,MAFJC,KAEI,uEAF8B,EAE9B;AAAA,MADJC,MACI;AACJ;AACA;AACA,QAAMa,GAAG,GAAGb,MAAM,CAAE2M,cAAF,CAAlB;;AACA,MAAK9L,GAAG,KAAK1E,SAAb,EAAyB;AACxB,WAAO4D,KAAP;AACA,GANG,CAQJ;AACA;;;AACA,QAAM6M,YAAY,GAAG9M,OAAO,CAAEC,KAAK,CAAEc,GAAF,CAAP,EAAgBb,MAAhB,CAA5B;;AACA,MAAK4M,YAAY,KAAK7M,KAAK,CAAEc,GAAF,CAA3B,EAAqC;AACpC,WAAOd,KAAP;AACA;;AAED,SAAO,EACN,GAAGA,KADG;AAEN,KAAEc,GAAF,GAAS+L;AAFH,GAAP;AAIA,CA1BM;AA4BP;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASb,sBAAT,CAAiC5N,IAAjC,EAAsE;AAC5E,MAAKA,IAAI,KAAKhC,SAAT,IAAsBgC,IAAI,KAAK,IAApC,EAA2C;AAC1C,WAAO,EAAP;AACA;;AAED,QAAM0O,GAAG,GAAG1O,IAAI,CAACmJ,MAAjB;AACA,MAAI8E,GAAG,GAAGS,GAAV;;AACA,SAAQT,GAAG,GAAG,CAAN,IAAWjO,IAAI,CAAEiO,GAAG,GAAG,CAAR,CAAJ,KAAoBjQ,SAAvC,EAAmD;AAClDiQ,IAAAA,GAAG;AACH;;AACD,SAAOA,GAAG,KAAKS,GAAR,GAAc1O,IAAd,GAAqBA,IAAI,CAAC2O,KAAL,CAAY,CAAZ,EAAeV,GAAf,CAA5B;AACA;;;;;;;;;;;;;;;;AC1Dc,SAAStF,qBAAT,CAAgC3I,IAAhC,EAAuC;AACrD,SAAO,MAAQgI,IAAF,IAAcnG,MAAF,IAAc;AACtC,QAAK,OAAOA,MAAP,KAAkB,UAAvB,EAAoC;AACnC,aAAOA,MAAM,CAAE7B,IAAF,CAAb;AACA;;AAED,WAAOgI,IAAI,CAAEnG,MAAF,CAAX;AACA,GAND;AAOA;;;;;;;;;;;;;;;;;;;;;;;ACRD;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASnB,cAAT,GAA4D;AAAA,MAAnCqO,YAAmC,uEAApB,EAAoB;AAAA,MAAhBC,MAAgB,uEAAP,IAAO;AAClE,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,OAAO,GAAGJ,6DAAa,EAA7B;AACA,QAAM3R,eAAe,GAAG,IAAIgS,GAAJ,EAAxB;AAEA;AACD;AACA;;AACC,WAASC,cAAT,GAA0B;AACzBF,IAAAA,OAAO,CAACG,IAAR;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;AACC,QAAMlL,SAAS,GAAK0G,QAAF,IAAgB;AACjC,WAAOqE,OAAO,CAAC/K,SAAR,CAAmB0G,QAAnB,CAAP;AACA,GAFD;AAIA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,WAAStN,MAAT,CAAiB3B,qBAAjB,EAAyC;AACxC,UAAM4C,SAAS,GAAGkB,gDAAQ,CAAE9D,qBAAF,CAAR,GACfA,qBAAqB,CAACuE,IADP,GAEfvE,qBAFH;AAGAuB,IAAAA,eAAe,CAACkB,GAAhB,CAAqBG,SAArB;AACA,UAAM0F,KAAK,GAAG+K,MAAM,CAAEzQ,SAAF,CAApB;;AACA,QAAK0F,KAAL,EAAa;AACZ,aAAOA,KAAK,CAAC6F,YAAN,EAAP;AACA;;AAED,WAAOiF,MAAM,IAAIA,MAAM,CAACzR,MAAP,CAAeiB,SAAf,CAAjB;AACA;;AAED,WAASlB,6BAAT,CAAwCD,QAAxC,EAAkDiS,GAAlD,EAAwD;AACvDnS,IAAAA,eAAe,CAACwK,KAAhB;AACA,UAAMsB,MAAM,GAAG5L,QAAQ,CAACkS,IAAT,CAAe,IAAf,CAAf;AACAD,IAAAA,GAAG,CAAClU,OAAJ,GAAckI,KAAK,CAAC6B,IAAN,CAAYhI,eAAZ,CAAd;AACA,WAAO8L,MAAP;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,WAAS7I,aAAT,CAAwBxE,qBAAxB,EAAgD;AAC/C,UAAM4C,SAAS,GAAGkB,gDAAQ,CAAE9D,qBAAF,CAAR,GACfA,qBAAqB,CAACuE,IADP,GAEfvE,qBAFH;AAGAuB,IAAAA,eAAe,CAACkB,GAAhB,CAAqBG,SAArB;AACA,UAAM0F,KAAK,GAAG+K,MAAM,CAAEzQ,SAAF,CAApB;;AACA,QAAK0F,KAAL,EAAa;AACZ,aAAOA,KAAK,CAAC8F,mBAAN,EAAP;AACA;;AAED,WAAOgF,MAAM,IAAIA,MAAM,CAAC5O,aAAP,CAAsB5B,SAAtB,CAAjB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,WAASlD,QAAT,CAAmBM,qBAAnB,EAA2C;AAC1C,UAAM4C,SAAS,GAAGkB,gDAAQ,CAAE9D,qBAAF,CAAR,GACfA,qBAAqB,CAACuE,IADP,GAEfvE,qBAFH;AAGA,UAAMsI,KAAK,GAAG+K,MAAM,CAAEzQ,SAAF,CAApB;;AACA,QAAK0F,KAAL,EAAa;AACZ,aAAOA,KAAK,CAAC2F,UAAN,EAAP;AACA;;AAED,WAAOmF,MAAM,IAAIA,MAAM,CAAC1T,QAAP,CAAiBkD,SAAjB,CAAjB;AACA,GA7FiE,CA+FlE;AACA;AACA;;;AACA,WAASgR,WAAT,CAAsBC,UAAtB,EAAmC;AAClC,WAAO9U,iDAAS,CAAE8U,UAAF,EAAc,CAAEC,SAAF,EAAahN,GAAb,KAAsB;AACnD,UAAK,OAAOgN,SAAP,KAAqB,UAA1B,EAAuC;AACtC,eAAOA,SAAP;AACA;;AACD,aAAO,YAAY;AAClB,eAAOxU,QAAQ,CAAEwH,GAAF,CAAR,CAAgBoJ,KAAhB,CAAuB,IAAvB,EAA6BL,SAA7B,CAAP;AACA,OAFD;AAGA,KAPe,CAAhB;AAQA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACC,WAASkE,qBAAT,CAAgCxP,IAAhC,EAAsC+D,KAAtC,EAA8C;AAC7C,QAAK,OAAOA,KAAK,CAAC6F,YAAb,KAA8B,UAAnC,EAAgD;AAC/C,YAAM,IAAI6F,SAAJ,CAAe,uCAAf,CAAN;AACA;;AACD,QAAK,OAAO1L,KAAK,CAAC2F,UAAb,KAA4B,UAAjC,EAA8C;AAC7C,YAAM,IAAI+F,SAAJ,CAAe,qCAAf,CAAN;AACA;;AACD,QAAK,OAAO1L,KAAK,CAACC,SAAb,KAA2B,UAAhC,EAA6C;AAC5C,YAAM,IAAIyL,SAAJ,CAAe,oCAAf,CAAN;AACA,KAT4C,CAU7C;AACA;AACA;;;AACA1L,IAAAA,KAAK,CAACgL,OAAN,GAAgBJ,6DAAa,EAA7B;AACA,UAAMe,gBAAgB,GAAG3L,KAAK,CAACC,SAA/B;;AACAD,IAAAA,KAAK,CAACC,SAAN,GAAoB0G,QAAF,IAAgB;AACjC,YAAMiF,sBAAsB,GAAG5L,KAAK,CAACgL,OAAN,CAAc/K,SAAd,CAAyB0G,QAAzB,CAA/B;AACA,YAAMkF,oBAAoB,GAAGF,gBAAgB,CAAE,MAAM;AACpD,YAAK3L,KAAK,CAACgL,OAAN,CAAcc,QAAnB,EAA8B;AAC7B9L,UAAAA,KAAK,CAACgL,OAAN,CAAcG,IAAd;AACA;AACA;;AACDxE,QAAAA,QAAQ;AACR,OAN4C,CAA7C;AAQA,aAAO,MAAM;AACZkF,QAAAA,oBAAoB,SAApB,IAAAA,oBAAoB,WAApB,YAAAA,oBAAoB;AACpBD,QAAAA,sBAAsB,SAAtB,IAAAA,sBAAsB,WAAtB,YAAAA,sBAAsB;AACtB,OAHD;AAIA,KAdD;;AAeAb,IAAAA,MAAM,CAAE9O,IAAF,CAAN,GAAiB+D,KAAjB;AACAA,IAAAA,KAAK,CAACC,SAAN,CAAiBiL,cAAjB;AACA;AAED;AACD;AACA;AACA;AACA;;;AACC,WAASa,QAAT,CAAmB/L,KAAnB,EAA2B;AAC1ByL,IAAAA,qBAAqB,CAAEzL,KAAK,CAAC/D,IAAR,EAAc+D,KAAK,CAACyF,WAAN,CAAmBzO,QAAnB,CAAd,CAArB;AACA;;AAED,WAASgV,oBAAT,CAA+B/P,IAA/B,EAAqC+D,KAArC,EAA6C;AAC5C0K,IAAAA,4DAAU,CAAE,8BAAF,EAAkC;AAC3CuB,MAAAA,KAAK,EAAE,KADoC;AAE3CC,MAAAA,WAAW,EAAE;AAF8B,KAAlC,CAAV;AAIAT,IAAAA,qBAAqB,CAAExP,IAAF,EAAQ+D,KAAR,CAArB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,WAASJ,aAAT,CAAwBtF,SAAxB,EAAmCwD,OAAnC,EAA6C;AAC5C,QAAK,CAAEA,OAAO,CAACL,OAAf,EAAyB;AACxB,YAAM,IAAIiO,SAAJ,CAAe,4BAAf,CAAN;AACA;;AAED,UAAM1L,KAAK,GAAGwF,wDAAgB,CAAElL,SAAF,EAAawD,OAAb,CAAhB,CAAuC2H,WAAvC,CACbzO,QADa,CAAd;AAGAyU,IAAAA,qBAAqB,CAAEnR,SAAF,EAAa0F,KAAb,CAArB;AACA,WAAOA,KAAK,CAACA,KAAb;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;AACC,WAASzF,wBAAT,CAAmCD,SAAnC,EAA8C6R,OAA9C,EAAwD;AACvD,QAAK7R,SAAS,IAAIyQ,MAAlB,EAA2B;AAC1B,aAAOA,MAAM,CAAEzQ,SAAF,CAAN,CAAoB2F,SAApB,CAA+BkM,OAA/B,CAAP;AACA,KAHsD,CAKvD;AACA;AACA;AACA;;;AACA,QAAK,CAAErB,MAAP,EAAgB;AACf,aAAO7K,SAAS,CAAEkM,OAAF,CAAhB;AACA;;AAED,WAAOrB,MAAM,CAACvQ,wBAAP,CAAiCD,SAAjC,EAA4C6R,OAA5C,CAAP;AACA;;AAED,WAASC,KAAT,CAAgBjT,QAAhB,EAA2B;AAC1B6R,IAAAA,OAAO,CAACqB,KAAR;AACA7R,IAAAA,+CAAO,CAAEuQ,MAAF,EAAY/K,KAAF,IAAaA,KAAK,CAACgL,OAAN,CAAcqB,KAAd,EAAvB,CAAP;AACAlT,IAAAA,QAAQ;AACR6R,IAAAA,OAAO,CAACsB,MAAR;AACA9R,IAAAA,+CAAO,CAAEuQ,MAAF,EAAY/K,KAAF,IAAaA,KAAK,CAACgL,OAAN,CAAcsB,MAAd,EAAvB,CAAP;AACA;;AAED,MAAItV,QAAQ,GAAG;AACdoV,IAAAA,KADc;AAEdrB,IAAAA,MAFc;AAGdwB,IAAAA,UAAU,EAAExB,MAHE;AAGM;AACpB9K,IAAAA,SAJc;AAKd5G,IAAAA,MALc;AAMd6C,IAAAA,aANc;AAOd9E,IAAAA,QAPc;AAQdoV,IAAAA,GARc;AASdT,IAAAA,QATc;AAUdC,IAAAA,oBAVc;AAWdpM,IAAAA,aAXc;AAYdxG,IAAAA,6BAZc;AAadmB,IAAAA;AAbc,GAAf,CAzNkE,CAyOlE;AACA;AACA;;AACA,WAASiS,GAAT,CAAcC,MAAd,EAAsB3O,OAAtB,EAAgC;AAC/B,QAAK,CAAE2O,MAAP,EAAgB;AACf;AACA;;AAEDzV,IAAAA,QAAQ,GAAG,EACV,GAAGA,QADO;AAEV,SAAGyV,MAAM,CAAEzV,QAAF,EAAY8G,OAAZ;AAFC,KAAX;AAKA,WAAO9G,QAAP;AACA;;AAEDA,EAAAA,QAAQ,CAAC+U,QAAT,CAAmBpB,8CAAnB;;AAEA,OAAM,MAAM,CAAE1O,IAAF,EAAQyQ,MAAR,CAAZ,IAAgCjN,MAAM,CAACkN,OAAP,CAAgB9B,YAAhB,CAAhC,EAAiE;AAChE7T,IAAAA,QAAQ,CAAC+U,QAAT,CAAmBvG,wDAAgB,CAAEvJ,IAAF,EAAQyQ,MAAR,CAAnC;AACA;;AAED,MAAK5B,MAAL,EAAc;AACbA,IAAAA,MAAM,CAAC7K,SAAP,CAAkBiL,cAAlB;AACA;;AAED,SAAOI,WAAW,CAAEtU,QAAF,CAAlB;AACA;;;;;;;;;;;;;;;;AC1TD;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMwN,8BAA8B,GAAG,CAAExN,QAAF,EAAY4V,UAAZ,KAA4B,MAClE9I,IADwE,IAElEnG,MAAF,IAAc;AAClB,QAAMsI,SAAS,GAAGjP,QAAQ,CACxBqC,MADgB,CACRsR,8CADQ,EAEhBN,kBAFgB,CAEIuC,UAFJ,CAAlB;AAGAnN,EAAAA,MAAM,CAACkN,OAAP,CAAgB1G,SAAhB,EAA4BzL,OAA5B,CACC,QAAyC;AAAA,QAAvC,CAAEqB,YAAF,EAAgBgR,eAAhB,CAAuC;AACxC,UAAMvE,QAAQ,GAAG1J,2CAAG,CAAE5H,QAAQ,CAAC+T,MAAX,EAAmB,CACtC6B,UADsC,EAEtC,WAFsC,EAGtC/Q,YAHsC,CAAnB,CAApB;;AAKA,QAAK,CAAEyM,QAAF,IAAc,CAAEA,QAAQ,CAACwE,gBAA9B,EAAiD;AAChD;AACA;;AACDD,IAAAA,eAAe,CAACrS,OAAhB,CAAyB,CAAEiE,KAAF,EAAS3C,IAAT,KAAmB;AAC3C;AACA;AACA;AACA,UACG,CAAA2C,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEoL,MAAP,MAAkB,UAAlB,IACD,CAAApL,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEoL,MAAP,MAAkB,OADnB,IAEA,CAAEvB,QAAQ,CAACwE,gBAAT,CAA2BnP,MAA3B,EAAmC,GAAG7B,IAAtC,CAHH,EAIE;AACD;AACA,OAV0C,CAY3C;;;AACA9E,MAAAA,QAAQ,CACNI,QADF,CACYuT,8CADZ,EAEErB,oBAFF,CAEwBsD,UAFxB,EAEoC/Q,YAFpC,EAEkDC,IAFlD;AAGA,KAhBD;AAiBA,GA3BF;AA6BA,SAAOgI,IAAI,CAAEnG,MAAF,CAAX;AACA,CApCD;;AAsCA,+DAAe6G,8BAAf;;;;;;;;;;;;;AC5DA,MAAMmG,aAAa,GAAG;AACrB1O,EAAAA,IAAI,EAAE,WADe;;AAErBwJ,EAAAA,WAAW,CAAEzO,QAAF,EAAa;AACvB,UAAM+V,mBAAmB,GAAKlR,YAAF,IAAoB,UAAE2C,GAAF,EAAoB;AAAA,wCAAV1C,IAAU;AAAVA,QAAAA,IAAU;AAAA;;AACnE,aAAO9E,QAAQ,CAACqC,MAAT,CAAiBmF,GAAjB,EAAwB3C,YAAxB,EAAwC,GAAGC,IAA3C,CAAP;AACA,KAFD;;AAIA,UAAMkR,iBAAiB,GAAK7Q,UAAF,IAAkB,UAAEqC,GAAF,EAAoB;AAAA,yCAAV1C,IAAU;AAAVA,QAAAA,IAAU;AAAA;;AAC/D,aAAO9E,QAAQ,CAACI,QAAT,CAAmBoH,GAAnB,EAA0BrC,UAA1B,EAAwC,GAAGL,IAA3C,CAAP;AACA,KAFD;;AAIA,WAAO;AACN+J,MAAAA,YAAY,GAAG;AACd,eAAOpG,MAAM,CAACwN,WAAP,CACN,CACC,gBADD,EAEC,sBAFD,EAGC,uBAHD,EAIC,aAJD,EAKC,oBALD,EAME5S,GANF,CAMSwB,YAAF,IAAoB,CAC1BA,YAD0B,EAE1BkR,mBAAmB,CAAElR,YAAF,CAFO,CAN3B,CADM,CAAP;AAYA,OAdK;;AAgBN8J,MAAAA,UAAU,GAAG;AACZ,eAAOlG,MAAM,CAACwN,WAAP,CACN,CACC,iBADD,EAEC,kBAFD,EAGC,sBAHD,EAIC,8BAJD,EAKC,sCALD,EAME5S,GANF,CAMS8B,UAAF,IAAkB,CACxBA,UADwB,EAExB6Q,iBAAiB,CAAE7Q,UAAF,CAFO,CANzB,CADM,CAAP;AAYA,OA7BK;;AA+BN8D,MAAAA,SAAS,GAAG;AACX;AACA;AACA;AACA;AACA,eAAO,MAAM,MAAM,CAAE,CAArB;AACA;;AArCK,KAAP;AAuCA;;AAlDoB,CAAtB;AAqDA,+DAAe0K,aAAf;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACO,SAASC,aAAT,GAAyB;AAC/B,MAAIkB,QAAQ,GAAG,KAAf;AACA,MAAIoB,SAAS,GAAG,KAAhB;AACA,QAAMC,SAAS,GAAG,IAAIlC,GAAJ,EAAlB;;AACA,QAAMmC,eAAe,GAAG,MACvB;AACA;AACA;AACAhO,EAAAA,KAAK,CAAC6B,IAAN,CAAYkM,SAAZ,EAAwB3S,OAAxB,CAAmCmM,QAAF,IAAgBA,QAAQ,EAAzD,CAJD;;AAMA,SAAO;AACN,QAAImF,QAAJ,GAAe;AACd,aAAOA,QAAP;AACA,KAHK;;AAKN7L,IAAAA,SAAS,CAAE0G,QAAF,EAAa;AACrBwG,MAAAA,SAAS,CAAChT,GAAV,CAAewM,QAAf;AACA,aAAO,MAAMwG,SAAS,CAAC7H,MAAV,CAAkBqB,QAAlB,CAAb;AACA,KARK;;AAUN0F,IAAAA,KAAK,GAAG;AACPP,MAAAA,QAAQ,GAAG,IAAX;AACA,KAZK;;AAcNQ,IAAAA,MAAM,GAAG;AACRR,MAAAA,QAAQ,GAAG,KAAX;;AACA,UAAKoB,SAAL,EAAiB;AAChBA,QAAAA,SAAS,GAAG,KAAZ;AACAE,QAAAA,eAAe;AACf;AACD,KApBK;;AAsBNjC,IAAAA,IAAI,GAAG;AACN,UAAKW,QAAL,EAAgB;AACfoB,QAAAA,SAAS,GAAG,IAAZ;AACA;AACA;;AACDE,MAAAA,eAAe;AACf;;AA5BK,GAAP;AA8BA;;;;;;;;;;;;AC7CY;;AAEb;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,GAAG;AACd;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA,IAAI;;;AAGJ,4CAA4C;;AAE5C;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR;AACA,oCAAoC;;AAEpC;;AAEA,sBAAsB,uBAAuB;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB,IAAI;AACpB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB,SAAS;AACzB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB,SAAS;AACzB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,UAAU;AACzB;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;;;;;;;;;;;;;;;;;;;;;;;AClTqE;;AAErE;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,KAAK;AAChB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAM,IAAqC;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mCAAmC;AAChD;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,MAAqC,GAAG,CAAyB;AACrF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA;;AAEA;AACA,oBAAoB,MAAqC,GAAG,CAAyB;AACrF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;;;AAGA;AACA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,eAAe,UAAU;AACzB;;;AAGA;AACA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,MAAqC,GAAG,CAAyB;AACzF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;;AAGA;AACA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA,sBAAsB,MAAqC,GAAG,CAAyB;AACvF;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,eAAe;AACf;;;AAGA;AACA;AACA,sBAAsB,MAAqC,GAAG,CAA0B;AACxF;;AAEA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAqC,GAAG,CAA0B;AAC5F;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,IAAI;AACJ;AACA;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa;;AAEjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,sBAAsB,MAAqC,GAAG,CAA0B;AACxF;;AAEA;AACA;AACA,KAAK;AACL,sBAAsB,MAAqC,GAAG,CAA0B;AACxF;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;;;AAGA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;;AAEA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qDAAqD;AACrD;;AAEA;;AAEA,MAAM,IAAqC;AAC3C;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,IAAqC;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,MAAqC,GAAG,CAA0B;AAC1F;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,MAAqC,GAAG,CAA0B;AACtF;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA,uEAAuE,aAAa;AACpF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,UAAU;AACvB;;AAEA;AACA,6EAA6E,aAAa;AAC1F;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,MAAqC,GAAG,CAA0B;AAC1F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,aAAa,oFAAa,CAAC,oFAAa,GAAG,YAAY;AACvD;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAAqC;AACzC;AACA;;AAEoJ;;;;;;;;;;;AC3sBpJ;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB;AAChB,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;ACnDoD;;AAEpD;AACA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,+CAAQ;AACxB;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,6CAAM;AACzB,kBAAkB,6CAAM;AACxB;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAS;AACX;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAE4D;;;;;;;;;;;;AC5C5D;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAe;AACf;AACA;;;;;;;;;;;;;;;;ACFe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;;;;;;;;;;;;;;;ACbe;AACf;AACA,oBAAoB,sBAAsB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AChBiD;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEe;AACf,kBAAkB,sBAAsB;AACxC;AACA;AACA,MAAM,8DAAc;AACpB,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;;;;;;UC1BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAM/T,MAAM,GAAG/C,iEAAf;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAM4F,aAAa,GAAG5F,wEAAtB;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMc,QAAQ,GAAGd,mEAAjB;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAM2J,SAAS,GAAG3J,oEAAlB;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAM0V,oBAAoB,GAAG1V,+EAA7B;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMsJ,aAAa,GAAGtJ,wEAAtB;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMkW,GAAG,GAAGlW,8DAAZ;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMyV,QAAQ,GAAGzV,mEAAjB","sources":["webpack://wp/./node_modules/@wordpress/data/build-module/components/async-mode-provider/@wordpress/data/src/components/async-mode-provider/context.js","webpack://wp/./node_modules/@wordpress/data/build-module/components/async-mode-provider/@wordpress/data/src/components/async-mode-provider/use-async-mode.js","webpack://wp/./node_modules/@wordpress/data/build-module/components/registry-provider/@wordpress/data/src/components/registry-provider/context.js","webpack://wp/./node_modules/@wordpress/data/build-module/components/registry-provider/@wordpress/data/src/components/registry-provider/use-registry.js","webpack://wp/./node_modules/@wordpress/data/build-module/components/use-dispatch/@wordpress/data/src/components/use-dispatch/use-dispatch-with-map.js","webpack://wp/./node_modules/@wordpress/data/build-module/components/use-dispatch/@wordpress/data/src/components/use-dispatch/use-dispatch.js","webpack://wp/./node_modules/@wordpress/data/build-module/components/use-select/@wordpress/data/src/components/use-select/index.js","webpack://wp/./node_modules/@wordpress/data/build-module/components/with-dispatch/@wordpress/data/src/components/with-dispatch/index.js","webpack://wp/./node_modules/@wordpress/data/build-module/components/with-registry/@wordpress/data/src/components/with-registry/index.js","webpack://wp/./node_modules/@wordpress/data/build-module/components/with-select/@wordpress/data/src/components/with-select/index.js","webpack://wp/./node_modules/@wordpress/data/build-module/@wordpress/data/src/controls.js","webpack://wp/./node_modules/@wordpress/data/build-module/@wordpress/data/src/default-registry.js","webpack://wp/./node_modules/@wordpress/data/build-module/@wordpress/data/src/factory.js","webpack://wp/./node_modules/@wordpress/data/build-module/plugins/@wordpress/data/src/plugins/index.js","webpack://wp/./node_modules/@wordpress/data/build-module/plugins/persistence/@wordpress/data/src/plugins/persistence/index.js","webpack://wp/./node_modules/@wordpress/data/build-module/plugins/persistence/storage/@wordpress/data/src/plugins/persistence/storage/default.js","webpack://wp/./node_modules/@wordpress/data/build-module/plugins/persistence/storage/@wordpress/data/src/plugins/persistence/storage/object.js","webpack://wp/./node_modules/@wordpress/data/build-module/@wordpress/data/src/promise-middleware.js","webpack://wp/./node_modules/@wordpress/data/build-module/redux-store/@wordpress/data/src/redux-store/index.js","webpack://wp/./node_modules/@wordpress/data/build-module/redux-store/metadata/@wordpress/data/src/redux-store/metadata/actions.js","webpack://wp/./node_modules/@wordpress/data/build-module/redux-store/metadata/@wordpress/data/src/redux-store/metadata/reducer.ts","webpack://wp/./node_modules/@wordpress/data/build-module/redux-store/metadata/@wordpress/data/src/redux-store/metadata/selectors.js","webpack://wp/./node_modules/@wordpress/data/build-module/redux-store/metadata/@wordpress/data/src/redux-store/metadata/utils.ts","webpack://wp/./node_modules/@wordpress/data/build-module/redux-store/@wordpress/data/src/redux-store/thunk-middleware.js","webpack://wp/./node_modules/@wordpress/data/build-module/@wordpress/data/src/registry.js","webpack://wp/./node_modules/@wordpress/data/build-module/@wordpress/data/src/resolvers-cache-middleware.js","webpack://wp/./node_modules/@wordpress/data/build-module/store/@wordpress/data/src/store/index.js","webpack://wp/./node_modules/@wordpress/data/build-module/utils/@wordpress/data/src/utils/emitter.js","webpack://wp/./node_modules/equivalent-key-map/equivalent-key-map.js","webpack://wp/./node_modules/redux/es/redux.js","webpack://wp/./node_modules/turbo-combine-reducers/index.js","webpack://wp/./node_modules/use-memo-one/dist/use-memo-one.esm.js","webpack://wp/external window \"React\"","webpack://wp/external window \"lodash\"","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/external window [\"wp\",\"deprecated\"]","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"isShallowEqual\"]","webpack://wp/external window [\"wp\",\"priorityQueue\"]","webpack://wp/external window [\"wp\",\"reduxRoutine\"]","webpack://wp/./node_modules/is-promise/index.mjs","webpack://wp/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/./node_modules/@wordpress/data/build-module/@wordpress/data/src/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createContext } from '@wordpress/element';\n\nexport const Context = createContext( false );\n\nconst { Consumer, Provider } = Context;\n\nexport const AsyncModeConsumer = Consumer;\n\n/**\n * Context Provider Component used to switch the data module component rerendering\n * between Sync and Async modes.\n *\n * @example\n *\n * ```js\n * import { useSelect, AsyncModeProvider } from '@wordpress/data';\n *\n * function BlockCount() {\n *   const count = useSelect( ( select ) => {\n *     return select( 'core/block-editor' ).getBlockCount()\n *   }, [] );\n *\n *   return count;\n * }\n *\n * function App() {\n *   return (\n *     <AsyncModeProvider value={ true }>\n *       <BlockCount />\n *     </AsyncModeProvider>\n *   );\n * }\n * ```\n *\n * In this example, the BlockCount component is rerendered asynchronously.\n * It means if a more critical task is being performed (like typing in an input),\n * the rerendering is delayed until the browser becomes IDLE.\n * It is possible to nest multiple levels of AsyncModeProvider to fine-tune the rendering behavior.\n *\n * @param {boolean} props.value Enable Async Mode.\n * @return {WPComponent} The component to be rendered.\n */\nexport default Provider;\n","/**\n * WordPress dependencies\n */\nimport { useContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { Context } from './context';\n\nexport default function useAsyncMode() {\n\treturn useContext( Context );\n}\n","/**\n * WordPress dependencies\n */\nimport { createContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport defaultRegistry from '../../default-registry';\n\nexport const Context = createContext( defaultRegistry );\n\nconst { Consumer, Provider } = Context;\n\n/**\n * A custom react Context consumer exposing the provided `registry` to\n * children components. Used along with the RegistryProvider.\n *\n * You can read more about the react context api here:\n * https://reactjs.org/docs/context.html#contextprovider\n *\n * @example\n * ```js\n * import {\n *   RegistryProvider,\n *   RegistryConsumer,\n *   createRegistry\n * } from '@wordpress/data';\n *\n * const registry = createRegistry( {} );\n *\n * const App = ( { props } ) => {\n *   return <RegistryProvider value={ registry }>\n *     <div>Hello There</div>\n *     <RegistryConsumer>\n *       { ( registry ) => (\n *         <ComponentUsingRegistry\n *         \t\t{ ...props }\n *         \t  registry={ registry }\n *       ) }\n *     </RegistryConsumer>\n *   </RegistryProvider>\n * }\n * ```\n */\nexport const RegistryConsumer = Consumer;\n\n/**\n * A custom Context provider for exposing the provided `registry` to children\n * components via a consumer.\n *\n * See <a name=\"#RegistryConsumer\">RegistryConsumer</a> documentation for\n * example.\n */\nexport default Provider;\n","/**\n * WordPress dependencies\n */\nimport { useContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { Context } from './context';\n\n/**\n * A custom react hook exposing the registry context for use.\n *\n * This exposes the `registry` value provided via the\n * <a href=\"#RegistryProvider\">Registry Provider</a> to a component implementing\n * this hook.\n *\n * It acts similarly to the `useContext` react hook.\n *\n * Note: Generally speaking, `useRegistry` is a low level hook that in most cases\n * won't be needed for implementation. Most interactions with the `@wordpress/data`\n * API can be performed via the `useSelect` hook,  or the `withSelect` and\n * `withDispatch` higher order components.\n *\n * @example\n * ```js\n * import {\n *   RegistryProvider,\n *   createRegistry,\n *   useRegistry,\n * } from '@wordpress/data';\n *\n * const registry = createRegistry( {} );\n *\n * const SomeChildUsingRegistry = ( props ) => {\n *   const registry = useRegistry();\n *   // ...logic implementing the registry in other react hooks.\n * };\n *\n *\n * const ParentProvidingRegistry = ( props ) => {\n *   return <RegistryProvider value={ registry }>\n *     <SomeChildUsingRegistry { ...props } />\n *   </RegistryProvider>\n * };\n * ```\n *\n * @return {Function}  A custom react hook exposing the registry context value.\n */\nexport default function useRegistry() {\n\treturn useContext( Context );\n}\n","/**\n * External dependencies\n */\nimport { mapValues } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useRef } from '@wordpress/element';\nimport { useIsomorphicLayoutEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport useRegistry from '../registry-provider/use-registry';\n\n/**\n * Custom react hook for returning aggregate dispatch actions using the provided\n * dispatchMap.\n *\n * Currently this is an internal api only and is implemented by `withDispatch`\n *\n * @param {Function} dispatchMap Receives the `registry.dispatch` function as\n *                               the first argument and the `registry` object\n *                               as the second argument.  Should return an\n *                               object mapping props to functions.\n * @param {Array}    deps        An array of dependencies for the hook.\n * @return {Object}  An object mapping props to functions created by the passed\n *                   in dispatchMap.\n */\nconst useDispatchWithMap = ( dispatchMap, deps ) => {\n\tconst registry = useRegistry();\n\tconst currentDispatchMap = useRef( dispatchMap );\n\n\tuseIsomorphicLayoutEffect( () => {\n\t\tcurrentDispatchMap.current = dispatchMap;\n\t} );\n\n\treturn useMemo( () => {\n\t\tconst currentDispatchProps = currentDispatchMap.current(\n\t\t\tregistry.dispatch,\n\t\t\tregistry\n\t\t);\n\t\treturn mapValues( currentDispatchProps, ( dispatcher, propName ) => {\n\t\t\tif ( typeof dispatcher !== 'function' ) {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Property ${ propName } returned from dispatchMap in useDispatchWithMap must be a function.`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn ( ...args ) =>\n\t\t\t\tcurrentDispatchMap\n\t\t\t\t\t.current( registry.dispatch, registry )\n\t\t\t\t\t[ propName ]( ...args );\n\t\t} );\n\t}, [ registry, ...deps ] );\n};\n\nexport default useDispatchWithMap;\n","/**\n * Internal dependencies\n */\nimport useRegistry from '../registry-provider/use-registry';\n\n/** @typedef {import('../../types').StoreDescriptor} StoreDescriptor */\n\n/**\n * A custom react hook returning the current registry dispatch actions creators.\n *\n * Note: The component using this hook must be within the context of a\n * RegistryProvider.\n *\n * @param {string|StoreDescriptor} [storeNameOrDescriptor] Optionally provide the name of the\n *                                                         store or its descriptor from which to\n *                                                         retrieve action creators. If not\n *                                                         provided, the registry.dispatch\n *                                                         function is returned instead.\n *\n * @example\n * This illustrates a pattern where you may need to retrieve dynamic data from\n * the server via the `useSelect` hook to use in combination with the dispatch\n * action.\n *\n * ```jsx\n * import { useDispatch, useSelect } from '@wordpress/data';\n * import { useCallback } from '@wordpress/element';\n *\n * function Button( { onClick, children } ) {\n *   return <button type=\"button\" onClick={ onClick }>{ children }</button>\n * }\n *\n * const SaleButton = ( { children } ) => {\n *   const { stockNumber } = useSelect(\n *     ( select ) => select( 'my-shop' ).getStockNumber(),\n *     []\n *   );\n *   const { startSale } = useDispatch( 'my-shop' );\n *   const onClick = useCallback( () => {\n *     const discountPercent = stockNumber > 50 ? 10: 20;\n *     startSale( discountPercent );\n *   }, [ stockNumber ] );\n *   return <Button onClick={ onClick }>{ children }</Button>\n * }\n *\n * // Rendered somewhere in the application:\n * //\n * // <SaleButton>Start Sale!</SaleButton>\n * ```\n * @return {Function}  A custom react hook.\n */\nconst useDispatch = ( storeNameOrDescriptor ) => {\n\tconst { dispatch } = useRegistry();\n\treturn storeNameOrDescriptor === void 0\n\t\t? dispatch\n\t\t: dispatch( storeNameOrDescriptor );\n};\n\nexport default useDispatch;\n","/**\n * External dependencies\n */\nimport { useMemoOne } from 'use-memo-one';\n\n/**\n * WordPress dependencies\n */\nimport { createQueue } from '@wordpress/priority-queue';\nimport { useRef, useCallback, useMemo, useReducer } from '@wordpress/element';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\nimport { useIsomorphicLayoutEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport useRegistry from '../registry-provider/use-registry';\nimport useAsyncMode from '../async-mode-provider/use-async-mode';\n\nconst noop = () => {};\nconst renderQueue = createQueue();\n\n/** @typedef {import('../../types').StoreDescriptor} StoreDescriptor */\n\n/**\n * Custom react hook for retrieving props from registered selectors.\n *\n * In general, this custom React hook follows the\n * [rules of hooks](https://reactjs.org/docs/hooks-rules.html).\n *\n * @param {Function|StoreDescriptor|string} mapSelect Function called on every state change. The\n *                                                    returned value is exposed to the component\n *                                                    implementing this hook. The function receives\n *                                                    the `registry.select` method on the first\n *                                                    argument and the `registry` on the second\n *                                                    argument.\n *                                                    When a store key is passed, all selectors for\n *                                                    the store will be returned. This is only meant\n *                                                    for usage of these selectors in event\n *                                                    callbacks, not for data needed to create the\n *                                                    element tree.\n * @param {Array}                           deps      If provided, this memoizes the mapSelect so the\n *                                                    same `mapSelect` is invoked on every state\n *                                                    change unless the dependencies change.\n *\n * @example\n * ```js\n * import { useSelect } from '@wordpress/data';\n *\n * function HammerPriceDisplay( { currency } ) {\n *   const price = useSelect( ( select ) => {\n *     return select( 'my-shop' ).getPrice( 'hammer', currency )\n *   }, [ currency ] );\n *   return new Intl.NumberFormat( 'en-US', {\n *     style: 'currency',\n *     currency,\n *   } ).format( price );\n * }\n *\n * // Rendered in the application:\n * // <HammerPriceDisplay currency=\"USD\" />\n * ```\n *\n * In the above example, when `HammerPriceDisplay` is rendered into an\n * application, the price will be retrieved from the store state using the\n * `mapSelect` callback on `useSelect`. If the currency prop changes then\n * any price in the state for that currency is retrieved. If the currency prop\n * doesn't change and other props are passed in that do change, the price will\n * not change because the dependency is just the currency.\n *\n * When data is only used in an event callback, the data should not be retrieved\n * on render, so it may be useful to get the selectors function instead.\n *\n * **Don't use `useSelect` this way when calling the selectors in the render\n * function because your component won't re-render on a data change.**\n *\n * ```js\n * import { useSelect } from '@wordpress/data';\n *\n * function Paste( { children } ) {\n *   const { getSettings } = useSelect( 'my-shop' );\n *   function onPaste() {\n *     // Do something with the settings.\n *     const settings = getSettings();\n *   }\n *   return <div onPaste={ onPaste }>{ children }</div>;\n * }\n * ```\n *\n * @return {Function}  A custom react hook.\n */\nexport default function useSelect( mapSelect, deps ) {\n\tconst hasMappingFunction = 'function' === typeof mapSelect;\n\n\t// If we're recalling a store by its name or by\n\t// its descriptor then we won't be caching the\n\t// calls to `mapSelect` because we won't be calling it.\n\tif ( ! hasMappingFunction ) {\n\t\tdeps = [];\n\t}\n\n\t// Because of the \"rule of hooks\" we have to call `useCallback`\n\t// on every invocation whether or not we have a real function\n\t// for `mapSelect`. we'll create this intermediate variable to\n\t// fulfill that need and then reference it with our \"real\"\n\t// `_mapSelect` if we can.\n\tconst callbackMapper = useCallback(\n\t\thasMappingFunction ? mapSelect : noop,\n\t\tdeps\n\t);\n\tconst _mapSelect = hasMappingFunction ? callbackMapper : null;\n\n\tconst registry = useRegistry();\n\tconst isAsync = useAsyncMode();\n\t// React can sometimes clear the `useMemo` cache.\n\t// We use the cache-stable `useMemoOne` to avoid\n\t// losing queues.\n\tconst queueContext = useMemoOne( () => ( { queue: true } ), [ registry ] );\n\tconst [ , forceRender ] = useReducer( ( s ) => s + 1, 0 );\n\n\tconst latestMapSelect = useRef();\n\tconst latestIsAsync = useRef( isAsync );\n\tconst latestMapOutput = useRef();\n\tconst latestMapOutputError = useRef();\n\tconst isMountedAndNotUnsubscribing = useRef();\n\n\t// Keep track of the stores being selected in the _mapSelect function,\n\t// and only subscribe to those stores later.\n\tconst listeningStores = useRef( [] );\n\tconst wrapSelect = useCallback(\n\t\t( callback ) =>\n\t\t\tregistry.__unstableMarkListeningStores(\n\t\t\t\t() => callback( registry.select, registry ),\n\t\t\t\tlisteningStores\n\t\t\t),\n\t\t[ registry ]\n\t);\n\n\t// Generate a \"flag\" for used in the effect dependency array.\n\t// It's different than just using `mapSelect` since deps could be undefined,\n\t// in that case, we would still want to memoize it.\n\tconst depsChangedFlag = useMemo( () => ( {} ), deps || [] );\n\n\tlet mapOutput;\n\n\tif ( _mapSelect ) {\n\t\tmapOutput = latestMapOutput.current;\n\t\tconst hasReplacedMapSelect = latestMapSelect.current !== _mapSelect;\n\t\tconst lastMapSelectFailed = !! latestMapOutputError.current;\n\n\t\tif ( hasReplacedMapSelect || lastMapSelectFailed ) {\n\t\t\ttry {\n\t\t\t\tmapOutput = wrapSelect( _mapSelect );\n\t\t\t} catch ( error ) {\n\t\t\t\tlet errorMessage = `An error occurred while running 'mapSelect': ${ error.message }`;\n\n\t\t\t\tif ( latestMapOutputError.current ) {\n\t\t\t\t\terrorMessage += `\\nThe error may be correlated with this previous error:\\n`;\n\t\t\t\t\terrorMessage += `${ latestMapOutputError.current.stack }\\n\\n`;\n\t\t\t\t\terrorMessage += 'Original stack trace:';\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error( errorMessage );\n\t\t\t}\n\t\t}\n\t}\n\n\tuseIsomorphicLayoutEffect( () => {\n\t\tif ( ! hasMappingFunction ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlatestMapSelect.current = _mapSelect;\n\t\tlatestMapOutput.current = mapOutput;\n\t\tlatestMapOutputError.current = undefined;\n\t\tisMountedAndNotUnsubscribing.current = true;\n\n\t\t// This has to run after the other ref updates\n\t\t// to avoid using stale values in the flushed\n\t\t// callbacks or potentially overwriting a\n\t\t// changed `latestMapOutput.current`.\n\t\tif ( latestIsAsync.current !== isAsync ) {\n\t\t\tlatestIsAsync.current = isAsync;\n\t\t\trenderQueue.flush( queueContext );\n\t\t}\n\t} );\n\n\tuseIsomorphicLayoutEffect( () => {\n\t\tif ( ! hasMappingFunction ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst onStoreChange = () => {\n\t\t\tif ( isMountedAndNotUnsubscribing.current ) {\n\t\t\t\ttry {\n\t\t\t\t\tconst newMapOutput = wrapSelect( latestMapSelect.current );\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tisShallowEqual( latestMapOutput.current, newMapOutput )\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlatestMapOutput.current = newMapOutput;\n\t\t\t\t} catch ( error ) {\n\t\t\t\t\tlatestMapOutputError.current = error;\n\t\t\t\t}\n\t\t\t\tforceRender();\n\t\t\t}\n\t\t};\n\n\t\tconst onChange = () => {\n\t\t\tif ( latestIsAsync.current ) {\n\t\t\t\trenderQueue.add( queueContext, onStoreChange );\n\t\t\t} else {\n\t\t\t\tonStoreChange();\n\t\t\t}\n\t\t};\n\n\t\t// Catch any possible state changes during mount before the subscription\n\t\t// could be set.\n\t\tonChange();\n\n\t\tconst unsubscribers = listeningStores.current.map( ( storeName ) =>\n\t\t\tregistry.__unstableSubscribeStore( storeName, onChange )\n\t\t);\n\n\t\treturn () => {\n\t\t\tisMountedAndNotUnsubscribing.current = false;\n\t\t\t// The return value of the subscribe function could be undefined if the store is a custom generic store.\n\t\t\tunsubscribers.forEach( ( unsubscribe ) => unsubscribe?.() );\n\t\t\trenderQueue.flush( queueContext );\n\t\t};\n\t\t// If you're tempted to eliminate the spread dependencies below don't do it!\n\t\t// We're passing these in from the calling function and want to make sure we're\n\t\t// examining every individual value inside the `deps` array.\n\t}, [ registry, wrapSelect, hasMappingFunction, depsChangedFlag ] );\n\n\treturn hasMappingFunction ? mapOutput : registry.select( mapSelect );\n}\n","/**\n * WordPress dependencies\n */\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { useDispatchWithMap } from '../use-dispatch';\n\n/**\n * Higher-order component used to add dispatch props using registered action\n * creators.\n *\n * @param {Function} mapDispatchToProps A function of returning an object of\n *                                      prop names where value is a\n *                                      dispatch-bound action creator, or a\n *                                      function to be called with the\n *                                      component's props and returning an\n *                                      action creator.\n *\n * @example\n * ```jsx\n * function Button( { onClick, children } ) {\n *     return <button type=\"button\" onClick={ onClick }>{ children }</button>;\n * }\n *\n * import { withDispatch } from '@wordpress/data';\n *\n * const SaleButton = withDispatch( ( dispatch, ownProps ) => {\n *     const { startSale } = dispatch( 'my-shop' );\n *     const { discountPercent } = ownProps;\n *\n *     return {\n *         onClick() {\n *             startSale( discountPercent );\n *         },\n *     };\n * } )( Button );\n *\n * // Rendered in the application:\n * //\n * // <SaleButton discountPercent=\"20\">Start Sale!</SaleButton>\n * ```\n *\n * @example\n * In the majority of cases, it will be sufficient to use only two first params\n * passed to `mapDispatchToProps` as illustrated in the previous example.\n * However, there might be some very advanced use cases where using the\n * `registry` object might be used as a tool to optimize the performance of\n * your component. Using `select` function from the registry might be useful\n * when you need to fetch some dynamic data from the store at the time when the\n * event is fired, but at the same time, you never use it to render your\n * component. In such scenario, you can avoid using the `withSelect` higher\n * order component to compute such prop, which might lead to unnecessary\n * re-renders of your component caused by its frequent value change.\n * Keep in mind, that `mapDispatchToProps` must return an object with functions\n * only.\n *\n * ```jsx\n * function Button( { onClick, children } ) {\n *     return <button type=\"button\" onClick={ onClick }>{ children }</button>;\n * }\n *\n * import { withDispatch } from '@wordpress/data';\n *\n * const SaleButton = withDispatch( ( dispatch, ownProps, { select } ) => {\n *    // Stock number changes frequently.\n *    const { getStockNumber } = select( 'my-shop' );\n *    const { startSale } = dispatch( 'my-shop' );\n *    return {\n *        onClick() {\n *            const discountPercent = getStockNumber() > 50 ? 10 : 20;\n *            startSale( discountPercent );\n *        },\n *    };\n * } )( Button );\n *\n * // Rendered in the application:\n * //\n * //  <SaleButton>Start Sale!</SaleButton>\n * ```\n *\n * _Note:_ It is important that the `mapDispatchToProps` function always\n * returns an object with the same keys. For example, it should not contain\n * conditions under which a different value would be returned.\n *\n * @return {WPComponent} Enhanced component with merged dispatcher props.\n */\nconst withDispatch = ( mapDispatchToProps ) =>\n\tcreateHigherOrderComponent(\n\t\t( WrappedComponent ) => ( ownProps ) => {\n\t\t\tconst mapDispatch = ( dispatch, registry ) =>\n\t\t\t\tmapDispatchToProps( dispatch, ownProps, registry );\n\t\t\tconst dispatchProps = useDispatchWithMap( mapDispatch, [] );\n\t\t\treturn <WrappedComponent { ...ownProps } { ...dispatchProps } />;\n\t\t},\n\t\t'withDispatch'\n\t);\n\nexport default withDispatch;\n","/**\n * WordPress dependencies\n */\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { RegistryConsumer } from '../registry-provider';\n\n/**\n * Higher-order component which renders the original component with the current\n * registry context passed as its `registry` prop.\n *\n * @param {WPComponent} OriginalComponent Original component.\n *\n * @return {WPComponent} Enhanced component.\n */\nconst withRegistry = createHigherOrderComponent(\n\t( OriginalComponent ) => ( props ) => (\n\t\t<RegistryConsumer>\n\t\t\t{ ( registry ) => (\n\t\t\t\t<OriginalComponent { ...props } registry={ registry } />\n\t\t\t) }\n\t\t</RegistryConsumer>\n\t),\n\t'withRegistry'\n);\n\nexport default withRegistry;\n","/**\n * WordPress dependencies\n */\nimport { createHigherOrderComponent, pure } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport useSelect from '../use-select';\n\n/**\n * Higher-order component used to inject state-derived props using registered\n * selectors.\n *\n * @param {Function} mapSelectToProps Function called on every state change,\n *                                    expected to return object of props to\n *                                    merge with the component's own props.\n *\n * @example\n * ```js\n * import { withSelect } from '@wordpress/data';\n *\n * function PriceDisplay( { price, currency } ) {\n * \treturn new Intl.NumberFormat( 'en-US', {\n * \t\tstyle: 'currency',\n * \t\tcurrency,\n * \t} ).format( price );\n * }\n *\n * const HammerPriceDisplay = withSelect( ( select, ownProps ) => {\n * \tconst { getPrice } = select( 'my-shop' );\n * \tconst { currency } = ownProps;\n *\n * \treturn {\n * \t\tprice: getPrice( 'hammer', currency ),\n * \t};\n * } )( PriceDisplay );\n *\n * // Rendered in the application:\n * //\n * //  <HammerPriceDisplay currency=\"USD\" />\n * ```\n * In the above example, when `HammerPriceDisplay` is rendered into an\n * application, it will pass the price into the underlying `PriceDisplay`\n * component and update automatically if the price of a hammer ever changes in\n * the store.\n *\n * @return {WPComponent} Enhanced component with merged state data props.\n */\nconst withSelect = ( mapSelectToProps ) =>\n\tcreateHigherOrderComponent(\n\t\t( WrappedComponent ) =>\n\t\t\tpure( ( ownProps ) => {\n\t\t\t\tconst mapSelect = ( select, registry ) =>\n\t\t\t\t\tmapSelectToProps( select, ownProps, registry );\n\t\t\t\tconst mergeProps = useSelect( mapSelect );\n\t\t\t\treturn <WrappedComponent { ...ownProps } { ...mergeProps } />;\n\t\t\t} ),\n\t\t'withSelect'\n\t);\n\nexport default withSelect;\n","/**\n * External dependencies\n */\nimport { isObject } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { createRegistryControl } from './factory';\n\n/** @typedef {import('./types').StoreDescriptor} StoreDescriptor */\n\nconst SELECT = '@@data/SELECT';\nconst RESOLVE_SELECT = '@@data/RESOLVE_SELECT';\nconst DISPATCH = '@@data/DISPATCH';\n\n/**\n * Dispatches a control action for triggering a synchronous registry select.\n *\n * Note: This control synchronously returns the current selector value, triggering the\n * resolution, but not waiting for it.\n *\n * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n * @param {string}                 selectorName          The name of the selector.\n * @param {Array}                  args                  Arguments for the selector.\n *\n * @example\n * ```js\n * import { controls } from '@wordpress/data';\n *\n * // Action generator using `select`.\n * export function* myAction() {\n *   const isEditorSideBarOpened = yield controls.select( 'core/edit-post', 'isEditorSideBarOpened' );\n *   // Do stuff with the result from the `select`.\n * }\n * ```\n *\n * @return {Object} The control descriptor.\n */\nfunction select( storeNameOrDescriptor, selectorName, ...args ) {\n\treturn {\n\t\ttype: SELECT,\n\t\tstoreKey: isObject( storeNameOrDescriptor )\n\t\t\t? storeNameOrDescriptor.name\n\t\t\t: storeNameOrDescriptor,\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Dispatches a control action for triggering and resolving a registry select.\n *\n * Note: when this control action is handled, it automatically considers\n * selectors that may have a resolver. In such case, it will return a `Promise` that resolves\n * after the selector finishes resolving, with the final result value.\n *\n * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n * @param {string}                 selectorName          The name of the selector\n * @param {Array}                  args                  Arguments for the selector.\n *\n * @example\n * ```js\n * import { controls } from '@wordpress/data';\n *\n * // Action generator using resolveSelect\n * export function* myAction() {\n * \tconst isSidebarOpened = yield controls.resolveSelect( 'core/edit-post', 'isEditorSideBarOpened' );\n * \t// do stuff with the result from the select.\n * }\n * ```\n *\n * @return {Object} The control descriptor.\n */\nfunction resolveSelect( storeNameOrDescriptor, selectorName, ...args ) {\n\treturn {\n\t\ttype: RESOLVE_SELECT,\n\t\tstoreKey: isObject( storeNameOrDescriptor )\n\t\t\t? storeNameOrDescriptor.name\n\t\t\t: storeNameOrDescriptor,\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Dispatches a control action for triggering a registry dispatch.\n *\n * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n * @param {string}                 actionName            The name of the action to dispatch\n * @param {Array}                  args                  Arguments for the dispatch action.\n *\n * @example\n * ```js\n * import { controls } from '@wordpress/data-controls';\n *\n * // Action generator using dispatch\n * export function* myAction() {\n *   yield controls.dispatch( 'core/edit-post', 'togglePublishSidebar' );\n *   // do some other things.\n * }\n * ```\n *\n * @return {Object}  The control descriptor.\n */\nfunction dispatch( storeNameOrDescriptor, actionName, ...args ) {\n\treturn {\n\t\ttype: DISPATCH,\n\t\tstoreKey: isObject( storeNameOrDescriptor )\n\t\t\t? storeNameOrDescriptor.name\n\t\t\t: storeNameOrDescriptor,\n\t\tactionName,\n\t\targs,\n\t};\n}\n\nexport const controls = { select, resolveSelect, dispatch };\n\nexport const builtinControls = {\n\t[ SELECT ]: createRegistryControl(\n\t\t( registry ) => ( { storeKey, selectorName, args } ) =>\n\t\t\tregistry.select( storeKey )[ selectorName ]( ...args )\n\t),\n\t[ RESOLVE_SELECT ]: createRegistryControl(\n\t\t( registry ) => ( { storeKey, selectorName, args } ) => {\n\t\t\tconst method = registry.select( storeKey )[ selectorName ]\n\t\t\t\t.hasResolver\n\t\t\t\t? 'resolveSelect'\n\t\t\t\t: 'select';\n\t\t\treturn registry[ method ]( storeKey )[ selectorName ]( ...args );\n\t\t}\n\t),\n\t[ DISPATCH ]: createRegistryControl(\n\t\t( registry ) => ( { storeKey, actionName, args } ) =>\n\t\t\tregistry.dispatch( storeKey )[ actionName ]( ...args )\n\t),\n};\n","/**\n * Internal dependencies\n */\nimport { createRegistry } from './registry';\n\nexport default createRegistry();\n","/**\n * Creates a selector function that takes additional curried argument with the\n * registry `select` function. While a regular selector has signature\n * ```js\n * ( state, ...selectorArgs ) => ( result )\n * ```\n * that allows to select data from the store's `state`, a registry selector\n * has signature:\n * ```js\n * ( select ) => ( state, ...selectorArgs ) => ( result )\n * ```\n * that supports also selecting from other registered stores.\n *\n * @example\n * ```js\n * const getCurrentPostId = createRegistrySelector( ( select ) => ( state ) => {\n *   return select( 'core/editor' ).getCurrentPostId();\n * } );\n *\n * const getPostEdits = createRegistrySelector( ( select ) => ( state ) => {\n *   // calling another registry selector just like any other function\n *   const postType = getCurrentPostType( state );\n *   const postId = getCurrentPostId( state );\n *\t return select( 'core' ).getEntityRecordEdits( 'postType', postType, postId );\n * } );\n * ```\n *\n * Note how the `getCurrentPostId` selector can be called just like any other function,\n * (it works even inside a regular non-registry selector) and we don't need to pass the\n * registry as argument. The registry binding happens automatically when registering the selector\n * with a store.\n *\n * @param {Function} registrySelector Function receiving a registry `select`\n *                                    function and returning a state selector.\n *\n * @return {Function} Registry selector that can be registered with a store.\n */\nexport function createRegistrySelector( registrySelector ) {\n\t// Create a selector function that is bound to the registry referenced by `selector.registry`\n\t// and that has the same API as a regular selector. Binding it in such a way makes it\n\t// possible to call the selector directly from another selector.\n\tconst selector = ( ...args ) =>\n\t\tregistrySelector( selector.registry.select )( ...args );\n\n\t/**\n\t * Flag indicating that the selector is a registry selector that needs the correct registry\n\t * reference to be assigned to `selecto.registry` to make it work correctly.\n\t * be mapped as a registry selector.\n\t *\n\t * @type {boolean}\n\t */\n\tselector.isRegistrySelector = true;\n\n\treturn selector;\n}\n\n/**\n * Creates a control function that takes additional curried argument with the `registry` object.\n * While a regular control has signature\n * ```js\n * ( action ) => ( iteratorOrPromise )\n * ```\n * where the control works with the `action` that it's bound to, a registry control has signature:\n * ```js\n * ( registry ) => ( action ) => ( iteratorOrPromise )\n * ```\n * A registry control is typically used to select data or dispatch an action to a registered\n * store.\n *\n * When registering a control created with `createRegistryControl` with a store, the store\n * knows which calling convention to use when executing the control.\n *\n * @param {Function} registryControl Function receiving a registry object and returning a control.\n *\n * @return {Function} Registry control that can be registered with a store.\n */\nexport function createRegistryControl( registryControl ) {\n\tregistryControl.isRegistryControl = true;\n\n\treturn registryControl;\n}\n","export { default as persistence } from './persistence';\n","/**\n * External dependencies\n */\nimport { merge, isPlainObject, identity } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport defaultStorage from './storage/default';\nimport { combineReducers } from '../../';\n\n/** @typedef {import('../../registry').WPDataRegistry} WPDataRegistry */\n\n/** @typedef {import('../../registry').WPDataPlugin} WPDataPlugin */\n\n/**\n * @typedef {Object} WPDataPersistencePluginOptions Persistence plugin options.\n *\n * @property {Storage} storage    Persistent storage implementation. This must\n *                                at least implement `getItem` and `setItem` of\n *                                the Web Storage API.\n * @property {string}  storageKey Key on which to set in persistent storage.\n *\n */\n\n/**\n * Default plugin storage.\n *\n * @type {Storage}\n */\nconst DEFAULT_STORAGE = defaultStorage;\n\n/**\n * Default plugin storage key.\n *\n * @type {string}\n */\nconst DEFAULT_STORAGE_KEY = 'WP_DATA';\n\n/**\n * Higher-order reducer which invokes the original reducer only if state is\n * inequal from that of the action's `nextState` property, otherwise returning\n * the original state reference.\n *\n * @param {Function} reducer Original reducer.\n *\n * @return {Function} Enhanced reducer.\n */\nexport const withLazySameState = ( reducer ) => ( state, action ) => {\n\tif ( action.nextState === state ) {\n\t\treturn state;\n\t}\n\n\treturn reducer( state, action );\n};\n\n/**\n * Creates a persistence interface, exposing getter and setter methods (`get`\n * and `set` respectively).\n *\n * @param {WPDataPersistencePluginOptions} options Plugin options.\n *\n * @return {Object} Persistence interface.\n */\nexport function createPersistenceInterface( options ) {\n\tconst {\n\t\tstorage = DEFAULT_STORAGE,\n\t\tstorageKey = DEFAULT_STORAGE_KEY,\n\t} = options;\n\n\tlet data;\n\n\t/**\n\t * Returns the persisted data as an object, defaulting to an empty object.\n\t *\n\t * @return {Object} Persisted data.\n\t */\n\tfunction getData() {\n\t\tif ( data === undefined ) {\n\t\t\t// If unset, getItem is expected to return null. Fall back to\n\t\t\t// empty object.\n\t\t\tconst persisted = storage.getItem( storageKey );\n\t\t\tif ( persisted === null ) {\n\t\t\t\tdata = {};\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tdata = JSON.parse( persisted );\n\t\t\t\t} catch ( error ) {\n\t\t\t\t\t// Similarly, should any error be thrown during parse of\n\t\t\t\t\t// the string (malformed JSON), fall back to empty object.\n\t\t\t\t\tdata = {};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\t/**\n\t * Merges an updated reducer state into the persisted data.\n\t *\n\t * @param {string} key   Key to update.\n\t * @param {*}      value Updated value.\n\t */\n\tfunction setData( key, value ) {\n\t\tdata = { ...data, [ key ]: value };\n\t\tstorage.setItem( storageKey, JSON.stringify( data ) );\n\t}\n\n\treturn {\n\t\tget: getData,\n\t\tset: setData,\n\t};\n}\n\n/**\n * Data plugin to persist store state into a single storage key.\n *\n * @param {WPDataRegistry}                  registry      Data registry.\n * @param {?WPDataPersistencePluginOptions} pluginOptions Plugin options.\n *\n * @return {WPDataPlugin} Data plugin.\n */\nfunction persistencePlugin( registry, pluginOptions ) {\n\tconst persistence = createPersistenceInterface( pluginOptions );\n\n\t/**\n\t * Creates an enhanced store dispatch function, triggering the state of the\n\t * given store name to be persisted when changed.\n\t *\n\t * @param {Function}       getState  Function which returns current state.\n\t * @param {string}         storeName Store name.\n\t * @param {?Array<string>} keys      Optional subset of keys to save.\n\t *\n\t * @return {Function} Enhanced dispatch function.\n\t */\n\tfunction createPersistOnChange( getState, storeName, keys ) {\n\t\tlet getPersistedState;\n\t\tif ( Array.isArray( keys ) ) {\n\t\t\t// Given keys, the persisted state should by produced as an object\n\t\t\t// of the subset of keys. This implementation uses combineReducers\n\t\t\t// to leverage its behavior of returning the same object when none\n\t\t\t// of the property values changes. This allows a strict reference\n\t\t\t// equality to bypass a persistence set on an unchanging state.\n\t\t\tconst reducers = keys.reduce(\n\t\t\t\t( accumulator, key ) =>\n\t\t\t\t\tObject.assign( accumulator, {\n\t\t\t\t\t\t[ key ]: ( state, action ) => action.nextState[ key ],\n\t\t\t\t\t} ),\n\t\t\t\t{}\n\t\t\t);\n\n\t\t\tgetPersistedState = withLazySameState(\n\t\t\t\tcombineReducers( reducers )\n\t\t\t);\n\t\t} else {\n\t\t\tgetPersistedState = ( state, action ) => action.nextState;\n\t\t}\n\n\t\tlet lastState = getPersistedState( undefined, {\n\t\t\tnextState: getState(),\n\t\t} );\n\n\t\treturn () => {\n\t\t\tconst state = getPersistedState( lastState, {\n\t\t\t\tnextState: getState(),\n\t\t\t} );\n\t\t\tif ( state !== lastState ) {\n\t\t\t\tpersistence.set( storeName, state );\n\t\t\t\tlastState = state;\n\t\t\t}\n\t\t};\n\t}\n\n\treturn {\n\t\tregisterStore( storeName, options ) {\n\t\t\tif ( ! options.persist ) {\n\t\t\t\treturn registry.registerStore( storeName, options );\n\t\t\t}\n\n\t\t\t// Load from persistence to use as initial state.\n\t\t\tconst persistedState = persistence.get()[ storeName ];\n\t\t\tif ( persistedState !== undefined ) {\n\t\t\t\tlet initialState = options.reducer( options.initialState, {\n\t\t\t\t\ttype: '@@WP/PERSISTENCE_RESTORE',\n\t\t\t\t} );\n\n\t\t\t\tif (\n\t\t\t\t\tisPlainObject( initialState ) &&\n\t\t\t\t\tisPlainObject( persistedState )\n\t\t\t\t) {\n\t\t\t\t\t// If state is an object, ensure that:\n\t\t\t\t\t// - Other keys are left intact when persisting only a\n\t\t\t\t\t//   subset of keys.\n\t\t\t\t\t// - New keys in what would otherwise be used as initial\n\t\t\t\t\t//   state are deeply merged as base for persisted value.\n\t\t\t\t\tinitialState = merge( {}, initialState, persistedState );\n\t\t\t\t} else {\n\t\t\t\t\t// If there is a mismatch in object-likeness of default\n\t\t\t\t\t// initial or persisted state, defer to persisted value.\n\t\t\t\t\tinitialState = persistedState;\n\t\t\t\t}\n\n\t\t\t\toptions = {\n\t\t\t\t\t...options,\n\t\t\t\t\tinitialState,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst store = registry.registerStore( storeName, options );\n\n\t\t\tstore.subscribe(\n\t\t\t\tcreatePersistOnChange(\n\t\t\t\t\tstore.getState,\n\t\t\t\t\tstoreName,\n\t\t\t\t\toptions.persist\n\t\t\t\t)\n\t\t\t);\n\n\t\t\treturn store;\n\t\t},\n\t};\n}\n\n/**\n * Move the 'features' object in local storage from the sourceStoreName to the\n * preferences store.\n *\n * @param {Object} persistence     The persistence interface.\n * @param {string} sourceStoreName The name of the store that has persisted\n *                                 preferences to migrate to the preferences\n *                                 package.\n */\nexport function migrateFeaturePreferencesToPreferencesStore(\n\tpersistence,\n\tsourceStoreName\n) {\n\tconst preferencesStoreName = 'core/preferences';\n\tconst interfaceStoreName = 'core/interface';\n\n\tconst state = persistence.get();\n\n\t// Features most recently (and briefly) lived in the interface package.\n\t// If data exists there, prioritize using that for the migration. If not\n\t// also check the original package as the user may have updated from an\n\t// older block editor version.\n\tconst interfaceFeatures =\n\t\tstate[ interfaceStoreName ]?.preferences?.features?.[ sourceStoreName ];\n\tconst sourceFeatures = state[ sourceStoreName ]?.preferences?.features;\n\tconst featuresToMigrate = interfaceFeatures\n\t\t? interfaceFeatures\n\t\t: sourceFeatures;\n\n\tif ( featuresToMigrate ) {\n\t\tconst existingPreferences = state[ preferencesStoreName ]?.preferences;\n\n\t\t// Avoid migrating features again if they've previously been migrated.\n\t\tif ( ! existingPreferences?.[ sourceStoreName ] ) {\n\t\t\t// Set the feature values in the interface store, the features\n\t\t\t// object is keyed by 'scope', which matches the store name for\n\t\t\t// the source.\n\t\t\tpersistence.set( preferencesStoreName, {\n\t\t\t\tpreferences: {\n\t\t\t\t\t...existingPreferences,\n\t\t\t\t\t[ sourceStoreName ]: featuresToMigrate,\n\t\t\t\t},\n\t\t\t} );\n\n\t\t\t// Remove migrated feature preferences from `interface`.\n\t\t\tif ( interfaceFeatures ) {\n\t\t\t\tconst otherInterfaceState = state[ interfaceStoreName ];\n\t\t\t\tconst otherInterfaceScopes =\n\t\t\t\t\tstate[ interfaceStoreName ]?.preferences?.features;\n\n\t\t\t\tpersistence.set( interfaceStoreName, {\n\t\t\t\t\t...otherInterfaceState,\n\t\t\t\t\tpreferences: {\n\t\t\t\t\t\tfeatures: {\n\t\t\t\t\t\t\t...otherInterfaceScopes,\n\t\t\t\t\t\t\t[ sourceStoreName ]: undefined,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Remove migrated feature preferences from the source.\n\t\t\tif ( sourceFeatures ) {\n\t\t\t\tconst otherSourceState = state[ sourceStoreName ];\n\t\t\t\tconst sourcePreferences = state[ sourceStoreName ]?.preferences;\n\n\t\t\t\tpersistence.set( sourceStoreName, {\n\t\t\t\t\t...otherSourceState,\n\t\t\t\t\tpreferences: {\n\t\t\t\t\t\t...sourcePreferences,\n\t\t\t\t\t\tfeatures: undefined,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Migrates an individual item inside the `preferences` object for a store.\n *\n * @param {Object}    persistence   The persistence interface.\n * @param {Object}    migrate       An options object that contains details of the migration.\n * @param {string}    migrate.from  The name of the store to migrate from.\n * @param {string}    migrate.scope The scope in the preferences store to migrate to.\n * @param {string}    key           The key in the preferences object to migrate.\n * @param {?Function} convert       A function that converts preferences from one format to another.\n */\nexport function migrateIndividualPreferenceToPreferencesStore(\n\tpersistence,\n\t{ from: sourceStoreName, scope },\n\tkey,\n\tconvert = identity\n) {\n\tconst preferencesStoreName = 'core/preferences';\n\tconst state = persistence.get();\n\tconst sourcePreference = state[ sourceStoreName ]?.preferences?.[ key ];\n\n\t// There's nothing to migrate, exit early.\n\tif ( sourcePreference === undefined ) {\n\t\treturn;\n\t}\n\n\tconst targetPreference =\n\t\tstate[ preferencesStoreName ]?.preferences?.[ scope ]?.[ key ];\n\n\t// There's existing data at the target, so don't overwrite it, exit early.\n\tif ( targetPreference ) {\n\t\treturn;\n\t}\n\n\tconst otherScopes = state[ preferencesStoreName ]?.preferences;\n\tconst otherPreferences =\n\t\tstate[ preferencesStoreName ]?.preferences?.[ scope ];\n\n\t// Pass an object with the key and value as this allows the convert\n\t// function to convert to a data structure that has different keys.\n\tconst convertedPreferences = convert( { [ key ]: sourcePreference } );\n\n\tpersistence.set( preferencesStoreName, {\n\t\tpreferences: {\n\t\t\t...otherScopes,\n\t\t\t[ scope ]: {\n\t\t\t\t...otherPreferences,\n\t\t\t\t...convertedPreferences,\n\t\t\t},\n\t\t},\n\t} );\n\n\t// Remove migrated feature preferences from the source.\n\tconst otherSourceState = state[ sourceStoreName ];\n\tconst allSourcePreferences = state[ sourceStoreName ]?.preferences;\n\tpersistence.set( sourceStoreName, {\n\t\t...otherSourceState,\n\t\tpreferences: {\n\t\t\t...allSourcePreferences,\n\t\t\t[ key ]: undefined,\n\t\t},\n\t} );\n}\n\n/**\n * Convert from:\n * ```\n * {\n *     panels: {\n *         tags: {\n *             enabled: true,\n *             opened: true,\n *         },\n *         permalinks: {\n *             enabled: false,\n *             opened: false,\n *         },\n *     },\n * }\n * ```\n *\n * to:\n * {\n *     inactivePanels: [\n *         'permalinks',\n *     ],\n *     openPanels: [\n *         'tags',\n *     ],\n * }\n *\n * @param {Object} preferences A preferences object.\n *\n * @return {Object} The converted data.\n */\nexport function convertEditPostPanels( preferences ) {\n\tconst panels = preferences?.panels ?? {};\n\treturn Object.keys( panels ).reduce(\n\t\t( convertedData, panelName ) => {\n\t\t\tconst panel = panels[ panelName ];\n\n\t\t\tif ( panel?.enabled === false ) {\n\t\t\t\tconvertedData.inactivePanels.push( panelName );\n\t\t\t}\n\n\t\t\tif ( panel?.opened === true ) {\n\t\t\t\tconvertedData.openPanels.push( panelName );\n\t\t\t}\n\n\t\t\treturn convertedData;\n\t\t},\n\t\t{ inactivePanels: [], openPanels: [] }\n\t);\n}\n\nexport function migrateThirdPartyFeaturePreferencesToPreferencesStore(\n\tpersistence\n) {\n\tconst interfaceStoreName = 'core/interface';\n\tconst preferencesStoreName = 'core/preferences';\n\n\tlet state = persistence.get();\n\n\tconst interfaceScopes = state[ interfaceStoreName ]?.preferences?.features;\n\n\tfor ( const scope in interfaceScopes ) {\n\t\t// Don't migrate any core 'scopes'.\n\t\tif ( scope.startsWith( 'core' ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Skip this scope if there are no features to migrate.\n\t\tconst featuresToMigrate = interfaceScopes[ scope ];\n\t\tif ( ! featuresToMigrate ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst existingPreferences = state[ preferencesStoreName ]?.preferences;\n\n\t\t// Add the data to the preferences store structure.\n\t\tpersistence.set( preferencesStoreName, {\n\t\t\tpreferences: {\n\t\t\t\t...existingPreferences,\n\t\t\t\t[ scope ]: featuresToMigrate,\n\t\t\t},\n\t\t} );\n\n\t\t// Remove the data from the interface store structure.\n\t\t// Call `persistence.get` again to make sure `state` is up-to-date with\n\t\t// any changes from the previous iteration of this loop.\n\t\tstate = persistence.get();\n\t\tconst otherInterfaceState = state[ interfaceStoreName ];\n\t\tconst otherInterfaceScopes =\n\t\t\tstate[ interfaceStoreName ]?.preferences?.features;\n\n\t\tpersistence.set( interfaceStoreName, {\n\t\t\t...otherInterfaceState,\n\t\t\tpreferences: {\n\t\t\t\tfeatures: {\n\t\t\t\t\t...otherInterfaceScopes,\n\t\t\t\t\t[ scope ]: undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t} );\n\t}\n}\n\n/**\n * Migrates interface 'enableItems' data to the preferences store.\n *\n * The interface package stores this data in this format:\n * ```js\n * {\n *     enableItems: {\n *         singleEnableItems: {\n * \t           complementaryArea: {\n *                 'core/edit-post': 'edit-post/document',\n *                 'core/edit-site': 'edit-site/global-styles',\n *             }\n *         },\n *         multipleEnableItems: {\n *             pinnedItems: {\n *                 'core/edit-post': {\n *                     'plugin-1': true,\n *                 },\n *                 'core/edit-site': {\n *                     'plugin-2': true,\n *                 },\n *             },\n *         }\n *     }\n * }\n * ```\n * and it should be migrated it to:\n * ```js\n * {\n *     'core/edit-post': {\n *         complementaryArea: 'edit-post/document',\n *         pinnedItems: {\n *             'plugin-1': true,\n *         },\n *     },\n *     'core/edit-site': {\n *         complementaryArea: 'edit-site/global-styles',\n *         pinnedItems: {\n *             'plugin-2': true,\n *         },\n *     },\n * }\n * ```\n *\n * @param {Object} persistence The persistence interface.\n */\nexport function migrateInterfaceEnableItemsToPreferencesStore( persistence ) {\n\tconst interfaceStoreName = 'core/interface';\n\tconst preferencesStoreName = 'core/preferences';\n\tconst state = persistence.get();\n\tconst sourceEnableItems = state[ interfaceStoreName ]?.enableItems;\n\n\t// There's nothing to migrate, exit early.\n\tif ( ! sourceEnableItems ) {\n\t\treturn;\n\t}\n\n\tconst allPreferences = state[ preferencesStoreName ]?.preferences ?? {};\n\n\t// First convert complementaryAreas into the right format.\n\t// Use the existing preferences as the accumulator so that the data is\n\t// merged.\n\tconst sourceComplementaryAreas =\n\t\tsourceEnableItems?.singleEnableItems?.complementaryArea ?? {};\n\n\tconst convertedComplementaryAreas = Object.keys(\n\t\tsourceComplementaryAreas\n\t).reduce( ( accumulator, scope ) => {\n\t\tconst data = sourceComplementaryAreas[ scope ];\n\n\t\t// Don't overwrite any existing data in the preferences store.\n\t\tif ( accumulator[ scope ]?.complementaryArea ) {\n\t\t\treturn accumulator;\n\t\t}\n\n\t\treturn {\n\t\t\t...accumulator,\n\t\t\t[ scope ]: {\n\t\t\t\t...accumulator[ scope ],\n\t\t\t\tcomplementaryArea: data,\n\t\t\t},\n\t\t};\n\t}, allPreferences );\n\n\t// Next feed the converted complementary areas back into a reducer that\n\t// converts the pinned items, resulting in the fully migrated data.\n\tconst sourcePinnedItems =\n\t\tsourceEnableItems?.multipleEnableItems?.pinnedItems ?? {};\n\tconst allConvertedData = Object.keys( sourcePinnedItems ).reduce(\n\t\t( accumulator, scope ) => {\n\t\t\tconst data = sourcePinnedItems[ scope ];\n\t\t\t// Don't overwrite any existing data in the preferences store.\n\t\t\tif ( accumulator[ scope ]?.pinnedItems ) {\n\t\t\t\treturn accumulator;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...accumulator,\n\t\t\t\t[ scope ]: {\n\t\t\t\t\t...accumulator[ scope ],\n\t\t\t\t\tpinnedItems: data,\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\tconvertedComplementaryAreas\n\t);\n\n\tpersistence.set( preferencesStoreName, {\n\t\tpreferences: allConvertedData,\n\t} );\n\n\t// Remove migrated preferences.\n\tconst otherInterfaceItems = state[ interfaceStoreName ];\n\tpersistence.set( interfaceStoreName, {\n\t\t...otherInterfaceItems,\n\t\tenableItems: undefined,\n\t} );\n}\n\npersistencePlugin.__unstableMigrate = ( pluginOptions ) => {\n\tconst persistence = createPersistenceInterface( pluginOptions );\n\n\t// Boolean feature preferences.\n\tmigrateFeaturePreferencesToPreferencesStore(\n\t\tpersistence,\n\t\t'core/edit-widgets'\n\t);\n\tmigrateFeaturePreferencesToPreferencesStore(\n\t\tpersistence,\n\t\t'core/customize-widgets'\n\t);\n\tmigrateFeaturePreferencesToPreferencesStore(\n\t\tpersistence,\n\t\t'core/edit-post'\n\t);\n\tmigrateFeaturePreferencesToPreferencesStore(\n\t\tpersistence,\n\t\t'core/edit-site'\n\t);\n\tmigrateThirdPartyFeaturePreferencesToPreferencesStore( persistence );\n\n\t// Other ad-hoc preferences.\n\tmigrateIndividualPreferenceToPreferencesStore(\n\t\tpersistence,\n\t\t{ from: 'core/edit-post', scope: 'core/edit-post' },\n\t\t'hiddenBlockTypes'\n\t);\n\tmigrateIndividualPreferenceToPreferencesStore(\n\t\tpersistence,\n\t\t{ from: 'core/edit-post', scope: 'core/edit-post' },\n\t\t'editorMode'\n\t);\n\tmigrateIndividualPreferenceToPreferencesStore(\n\t\tpersistence,\n\t\t{ from: 'core/edit-post', scope: 'core/edit-post' },\n\t\t'preferredStyleVariations'\n\t);\n\tmigrateIndividualPreferenceToPreferencesStore(\n\t\tpersistence,\n\t\t{ from: 'core/edit-post', scope: 'core/edit-post' },\n\t\t'panels',\n\t\tconvertEditPostPanels\n\t);\n\tmigrateIndividualPreferenceToPreferencesStore(\n\t\tpersistence,\n\t\t{ from: 'core/editor', scope: 'core/edit-post' },\n\t\t'isPublishSidebarEnabled'\n\t);\n\tmigrateIndividualPreferenceToPreferencesStore(\n\t\tpersistence,\n\t\t{ from: 'core/edit-site', scope: 'core/edit-site' },\n\t\t'editorMode'\n\t);\n\tmigrateInterfaceEnableItemsToPreferencesStore( persistence );\n};\n\nexport default persistencePlugin;\n","/**\n * Internal dependencies\n */\nimport objectStorage from './object';\n\nlet storage;\n\ntry {\n\t// Private Browsing in Safari 10 and earlier will throw an error when\n\t// attempting to set into localStorage. The test here is intentional in\n\t// causing a thrown error as condition for using fallback object storage.\n\tstorage = window.localStorage;\n\tstorage.setItem( '__wpDataTestLocalStorage', '' );\n\tstorage.removeItem( '__wpDataTestLocalStorage' );\n} catch ( error ) {\n\tstorage = objectStorage;\n}\n\nexport default storage;\n","let objectStorage;\n\nconst storage = {\n\tgetItem( key ) {\n\t\tif ( ! objectStorage || ! objectStorage[ key ] ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn objectStorage[ key ];\n\t},\n\tsetItem( key, value ) {\n\t\tif ( ! objectStorage ) {\n\t\t\tstorage.clear();\n\t\t}\n\n\t\tobjectStorage[ key ] = String( value );\n\t},\n\tclear() {\n\t\tobjectStorage = Object.create( null );\n\t},\n};\n\nexport default storage;\n","/**\n * External dependencies\n */\nimport isPromise from 'is-promise';\n\n/**\n * Simplest possible promise redux middleware.\n *\n * @type {import('redux').Middleware}\n */\nconst promiseMiddleware = () => ( next ) => ( action ) => {\n\tif ( isPromise( action ) ) {\n\t\treturn action.then( ( resolvedAction ) => {\n\t\t\tif ( resolvedAction ) {\n\t\t\t\treturn next( resolvedAction );\n\t\t\t}\n\t\t} );\n\t}\n\n\treturn next( action );\n};\n\nexport default promiseMiddleware;\n","/**\n * External dependencies\n */\nimport { createStore, applyMiddleware } from 'redux';\nimport { flowRight, get, mapValues, omit } from 'lodash';\nimport combineReducers from 'turbo-combine-reducers';\nimport EquivalentKeyMap from 'equivalent-key-map';\n\n/**\n * WordPress dependencies\n */\nimport createReduxRoutineMiddleware from '@wordpress/redux-routine';\n\n/**\n * Internal dependencies\n */\nimport { builtinControls } from '../controls';\nimport promise from '../promise-middleware';\nimport createResolversCacheMiddleware from '../resolvers-cache-middleware';\nimport createThunkMiddleware from './thunk-middleware';\nimport metadataReducer from './metadata/reducer';\nimport * as metadataSelectors from './metadata/selectors';\nimport * as metadataActions from './metadata/actions';\n\n/** @typedef {import('../types').DataRegistry} DataRegistry */\n/** @typedef {import('../types').StoreDescriptor} StoreDescriptor */\n/** @typedef {import('../types').ReduxStoreConfig} ReduxStoreConfig */\n\nconst trimUndefinedValues = ( array ) => {\n\tconst result = [ ...array ];\n\tfor ( let i = result.length - 1; i >= 0; i-- ) {\n\t\tif ( result[ i ] === undefined ) {\n\t\t\tresult.splice( i, 1 );\n\t\t}\n\t}\n\treturn result;\n};\n\n/**\n * Create a cache to track whether resolvers started running or not.\n *\n * @return {Object} Resolvers Cache.\n */\nfunction createResolversCache() {\n\tconst cache = {};\n\treturn {\n\t\tisRunning( selectorName, args ) {\n\t\t\treturn (\n\t\t\t\tcache[ selectorName ] &&\n\t\t\t\tcache[ selectorName ].get( trimUndefinedValues( args ) )\n\t\t\t);\n\t\t},\n\n\t\tclear( selectorName, args ) {\n\t\t\tif ( cache[ selectorName ] ) {\n\t\t\t\tcache[ selectorName ].delete( trimUndefinedValues( args ) );\n\t\t\t}\n\t\t},\n\n\t\tmarkAsRunning( selectorName, args ) {\n\t\t\tif ( ! cache[ selectorName ] ) {\n\t\t\t\tcache[ selectorName ] = new EquivalentKeyMap();\n\t\t\t}\n\n\t\t\tcache[ selectorName ].set( trimUndefinedValues( args ), true );\n\t\t},\n\t};\n}\n\n/**\n * Creates a data store descriptor for the provided Redux store configuration containing\n * properties describing reducer, actions, selectors, controls and resolvers.\n *\n * @example\n * ```js\n * import { createReduxStore } from '@wordpress/data';\n *\n * const store = createReduxStore( 'demo', {\n *     reducer: ( state = 'OK' ) => state,\n *     selectors: {\n *         getValue: ( state ) => state,\n *     },\n * } );\n * ```\n *\n * @param {string}           key     Unique namespace identifier.\n * @param {ReduxStoreConfig} options Registered store options, with properties\n *                                   describing reducer, actions, selectors,\n *                                   and resolvers.\n *\n * @return {StoreDescriptor} Store Object.\n */\nexport default function createReduxStore( key, options ) {\n\treturn {\n\t\tname: key,\n\t\tinstantiate: ( registry ) => {\n\t\t\tconst reducer = options.reducer;\n\t\t\tconst thunkArgs = {\n\t\t\t\tregistry,\n\t\t\t\tget dispatch() {\n\t\t\t\t\treturn Object.assign(\n\t\t\t\t\t\t( action ) => store.dispatch( action ),\n\t\t\t\t\t\tgetActions()\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tget select() {\n\t\t\t\t\treturn Object.assign(\n\t\t\t\t\t\t( selector ) =>\n\t\t\t\t\t\t\tselector( store.__unstableOriginalGetState() ),\n\t\t\t\t\t\tgetSelectors()\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tget resolveSelect() {\n\t\t\t\t\treturn getResolveSelectors();\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst store = instantiateReduxStore(\n\t\t\t\tkey,\n\t\t\t\toptions,\n\t\t\t\tregistry,\n\t\t\t\tthunkArgs\n\t\t\t);\n\t\t\tconst resolversCache = createResolversCache();\n\n\t\t\tlet resolvers;\n\t\t\tconst actions = mapActions(\n\t\t\t\t{\n\t\t\t\t\t...metadataActions,\n\t\t\t\t\t...options.actions,\n\t\t\t\t},\n\t\t\t\tstore\n\t\t\t);\n\n\t\t\tlet selectors = mapSelectors(\n\t\t\t\t{\n\t\t\t\t\t...mapValues(\n\t\t\t\t\t\tmetadataSelectors,\n\t\t\t\t\t\t( selector ) => ( state, ...args ) =>\n\t\t\t\t\t\t\tselector( state.metadata, ...args )\n\t\t\t\t\t),\n\t\t\t\t\t...mapValues( options.selectors, ( selector ) => {\n\t\t\t\t\t\tif ( selector.isRegistrySelector ) {\n\t\t\t\t\t\t\tselector.registry = registry;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn ( state, ...args ) =>\n\t\t\t\t\t\t\tselector( state.root, ...args );\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\tstore\n\t\t\t);\n\t\t\tif ( options.resolvers ) {\n\t\t\t\tconst result = mapResolvers(\n\t\t\t\t\toptions.resolvers,\n\t\t\t\t\tselectors,\n\t\t\t\t\tstore,\n\t\t\t\t\tresolversCache\n\t\t\t\t);\n\t\t\t\tresolvers = result.resolvers;\n\t\t\t\tselectors = result.selectors;\n\t\t\t}\n\n\t\t\tconst resolveSelectors = mapResolveSelectors( selectors, store );\n\n\t\t\tconst getSelectors = () => selectors;\n\t\t\tconst getActions = () => actions;\n\t\t\tconst getResolveSelectors = () => resolveSelectors;\n\n\t\t\t// We have some modules monkey-patching the store object\n\t\t\t// It's wrong to do so but until we refactor all of our effects to controls\n\t\t\t// We need to keep the same \"store\" instance here.\n\t\t\tstore.__unstableOriginalGetState = store.getState;\n\t\t\tstore.getState = () => store.__unstableOriginalGetState().root;\n\n\t\t\t// Customize subscribe behavior to call listeners only on effective change,\n\t\t\t// not on every dispatch.\n\t\t\tconst subscribe =\n\t\t\t\tstore &&\n\t\t\t\t( ( listener ) => {\n\t\t\t\t\tlet lastState = store.__unstableOriginalGetState();\n\t\t\t\t\treturn store.subscribe( () => {\n\t\t\t\t\t\tconst state = store.__unstableOriginalGetState();\n\t\t\t\t\t\tconst hasChanged = state !== lastState;\n\t\t\t\t\t\tlastState = state;\n\n\t\t\t\t\t\tif ( hasChanged ) {\n\t\t\t\t\t\t\tlistener();\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\t// This can be simplified to just { subscribe, getSelectors, getActions }\n\t\t\t// Once we remove the use function.\n\t\t\treturn {\n\t\t\t\treducer,\n\t\t\t\tstore,\n\t\t\t\tactions,\n\t\t\t\tselectors,\n\t\t\t\tresolvers,\n\t\t\t\tgetSelectors,\n\t\t\t\tgetResolveSelectors,\n\t\t\t\tgetActions,\n\t\t\t\tsubscribe,\n\t\t\t};\n\t\t},\n\t};\n}\n\n/**\n * Creates a redux store for a namespace.\n *\n * @param {string}       key       Unique namespace identifier.\n * @param {Object}       options   Registered store options, with properties\n *                                 describing reducer, actions, selectors,\n *                                 and resolvers.\n * @param {DataRegistry} registry  Registry reference.\n * @param {Object}       thunkArgs Argument object for the thunk middleware.\n * @return {Object} Newly created redux store.\n */\nfunction instantiateReduxStore( key, options, registry, thunkArgs ) {\n\tconst controls = {\n\t\t...options.controls,\n\t\t...builtinControls,\n\t};\n\n\tconst normalizedControls = mapValues( controls, ( control ) =>\n\t\tcontrol.isRegistryControl ? control( registry ) : control\n\t);\n\n\tconst middlewares = [\n\t\tcreateResolversCacheMiddleware( registry, key ),\n\t\tpromise,\n\t\tcreateReduxRoutineMiddleware( normalizedControls ),\n\t\tcreateThunkMiddleware( thunkArgs ),\n\t];\n\n\tconst enhancers = [ applyMiddleware( ...middlewares ) ];\n\tif (\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__\n\t) {\n\t\tenhancers.push(\n\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__( {\n\t\t\t\tname: key,\n\t\t\t\tinstanceId: key,\n\t\t\t} )\n\t\t);\n\t}\n\n\tconst { reducer, initialState } = options;\n\tconst enhancedReducer = combineReducers( {\n\t\tmetadata: metadataReducer,\n\t\troot: reducer,\n\t} );\n\n\treturn createStore(\n\t\tenhancedReducer,\n\t\t{ root: initialState },\n\t\tflowRight( enhancers )\n\t);\n}\n\n/**\n * Maps selectors to a store.\n *\n * @param {Object} selectors Selectors to register. Keys will be used as the\n *                           public facing API. Selectors will get passed the\n *                           state as first argument.\n * @param {Object} store     The store to which the selectors should be mapped.\n * @return {Object} Selectors mapped to the provided store.\n */\nfunction mapSelectors( selectors, store ) {\n\tconst createStateSelector = ( registrySelector ) => {\n\t\tconst selector = function runSelector() {\n\t\t\t// This function is an optimized implementation of:\n\t\t\t//\n\t\t\t//   selector( store.getState(), ...arguments )\n\t\t\t//\n\t\t\t// Where the above would incur an `Array#concat` in its application,\n\t\t\t// the logic here instead efficiently constructs an arguments array via\n\t\t\t// direct assignment.\n\t\t\tconst argsLength = arguments.length;\n\t\t\tconst args = new Array( argsLength + 1 );\n\t\t\targs[ 0 ] = store.__unstableOriginalGetState();\n\t\t\tfor ( let i = 0; i < argsLength; i++ ) {\n\t\t\t\targs[ i + 1 ] = arguments[ i ];\n\t\t\t}\n\n\t\t\treturn registrySelector( ...args );\n\t\t};\n\t\tselector.hasResolver = false;\n\t\treturn selector;\n\t};\n\n\treturn mapValues( selectors, createStateSelector );\n}\n\n/**\n * Maps actions to dispatch from a given store.\n *\n * @param {Object} actions Actions to register.\n * @param {Object} store   The redux store to which the actions should be mapped.\n *\n * @return {Object} Actions mapped to the redux store provided.\n */\nfunction mapActions( actions, store ) {\n\tconst createBoundAction = ( action ) => ( ...args ) => {\n\t\treturn Promise.resolve( store.dispatch( action( ...args ) ) );\n\t};\n\n\treturn mapValues( actions, createBoundAction );\n}\n\n/**\n * Maps selectors to functions that return a resolution promise for them\n *\n * @param {Object} selectors Selectors to map.\n * @param {Object} store     The redux store the selectors select from.\n *\n * @return {Object} Selectors mapped to their resolution functions.\n */\nfunction mapResolveSelectors( selectors, store ) {\n\tconst storeSelectors = omit( selectors, [\n\t\t'getIsResolving',\n\t\t'hasStartedResolution',\n\t\t'hasFinishedResolution',\n\t\t'hasResolutionFailed',\n\t\t'isResolving',\n\t\t'getCachedResolvers',\n\t\t'getResolutionState',\n\t\t'getResolutionError',\n\t] );\n\n\treturn mapValues( storeSelectors, ( selector, selectorName ) => {\n\t\t// If the selector doesn't have a resolver, just convert the return value\n\t\t// (including exceptions) to a Promise, no additional extra behavior is needed.\n\t\tif ( ! selector.hasResolver ) {\n\t\t\treturn async ( ...args ) => selector.apply( null, args );\n\t\t}\n\n\t\treturn ( ...args ) => {\n\t\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\t\tconst hasFinished = () =>\n\t\t\t\t\tselectors.hasFinishedResolution( selectorName, args );\n\t\t\t\tconst finalize = ( result ) => {\n\t\t\t\t\tconst hasFailed = selectors.hasResolutionFailed(\n\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\targs\n\t\t\t\t\t);\n\t\t\t\t\tif ( hasFailed ) {\n\t\t\t\t\t\tconst error = selectors.getResolutionError(\n\t\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t);\n\t\t\t\t\t\treject( error );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve( result );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst getResult = () => selector.apply( null, args );\n\t\t\t\t// Trigger the selector (to trigger the resolver)\n\t\t\t\tconst result = getResult();\n\t\t\t\tif ( hasFinished() ) {\n\t\t\t\t\treturn finalize( result );\n\t\t\t\t}\n\n\t\t\t\tconst unsubscribe = store.subscribe( () => {\n\t\t\t\t\tif ( hasFinished() ) {\n\t\t\t\t\t\tunsubscribe();\n\t\t\t\t\t\tfinalize( getResult() );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t};\n\t} );\n}\n\n/**\n * Returns resolvers with matched selectors for a given namespace.\n * Resolvers are side effects invoked once per argument set of a given selector call,\n * used in ensuring that the data needs for the selector are satisfied.\n *\n * @param {Object} resolvers      Resolvers to register.\n * @param {Object} selectors      The current selectors to be modified.\n * @param {Object} store          The redux store to which the resolvers should be mapped.\n * @param {Object} resolversCache Resolvers Cache.\n */\nfunction mapResolvers( resolvers, selectors, store, resolversCache ) {\n\t// The `resolver` can be either a function that does the resolution, or, in more advanced\n\t// cases, an object with a `fullfill` method and other optional methods like `isFulfilled`.\n\t// Here we normalize the `resolver` function to an object with `fulfill` method.\n\tconst mappedResolvers = mapValues( resolvers, ( resolver ) => {\n\t\tif ( resolver.fulfill ) {\n\t\t\treturn resolver;\n\t\t}\n\n\t\treturn {\n\t\t\t...resolver, // Copy the enumerable properties of the resolver function.\n\t\t\tfulfill: resolver, // Add the fulfill method.\n\t\t};\n\t} );\n\n\tconst mapSelector = ( selector, selectorName ) => {\n\t\tconst resolver = resolvers[ selectorName ];\n\t\tif ( ! resolver ) {\n\t\t\tselector.hasResolver = false;\n\t\t\treturn selector;\n\t\t}\n\n\t\tconst selectorResolver = ( ...args ) => {\n\t\t\tasync function fulfillSelector() {\n\t\t\t\tconst state = store.getState();\n\n\t\t\t\tif (\n\t\t\t\t\tresolversCache.isRunning( selectorName, args ) ||\n\t\t\t\t\t( typeof resolver.isFulfilled === 'function' &&\n\t\t\t\t\t\tresolver.isFulfilled( state, ...args ) )\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { metadata } = store.__unstableOriginalGetState();\n\n\t\t\t\tif (\n\t\t\t\t\tmetadataSelectors.hasStartedResolution(\n\t\t\t\t\t\tmetadata,\n\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\targs\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolversCache.markAsRunning( selectorName, args );\n\n\t\t\t\tsetTimeout( async () => {\n\t\t\t\t\tresolversCache.clear( selectorName, args );\n\t\t\t\t\tstore.dispatch(\n\t\t\t\t\t\tmetadataActions.startResolution( selectorName, args )\n\t\t\t\t\t);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait fulfillResolver(\n\t\t\t\t\t\t\tstore,\n\t\t\t\t\t\t\tmappedResolvers,\n\t\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\t\t...args\n\t\t\t\t\t\t);\n\t\t\t\t\t\tstore.dispatch(\n\t\t\t\t\t\t\tmetadataActions.finishResolution(\n\t\t\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\t\t\targs\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch ( error ) {\n\t\t\t\t\t\tstore.dispatch(\n\t\t\t\t\t\t\tmetadataActions.failResolution(\n\t\t\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\t\t\targs,\n\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tfulfillSelector( ...args );\n\t\t\treturn selector( ...args );\n\t\t};\n\t\tselectorResolver.hasResolver = true;\n\t\treturn selectorResolver;\n\t};\n\n\treturn {\n\t\tresolvers: mappedResolvers,\n\t\tselectors: mapValues( selectors, mapSelector ),\n\t};\n}\n\n/**\n * Calls a resolver given arguments\n *\n * @param {Object} store        Store reference, for fulfilling via resolvers\n * @param {Object} resolvers    Store Resolvers\n * @param {string} selectorName Selector name to fulfill.\n * @param {Array}  args         Selector Arguments.\n */\nasync function fulfillResolver( store, resolvers, selectorName, ...args ) {\n\tconst resolver = get( resolvers, [ selectorName ] );\n\tif ( ! resolver ) {\n\t\treturn;\n\t}\n\n\tconst action = resolver.fulfill( ...args );\n\tif ( action ) {\n\t\tawait store.dispatch( action );\n\t}\n}\n","/**\n * Returns an action object used in signalling that selector resolution has\n * started.\n *\n * @param {string}    selectorName Name of selector for which resolver triggered.\n * @param {unknown[]} args         Arguments to associate for uniqueness.\n *\n * @return {{ type: 'START_RESOLUTION', selectorName: string, args: unknown[] }} Action object.\n */\nexport function startResolution( selectorName, args ) {\n\treturn {\n\t\ttype: 'START_RESOLUTION',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that selector resolution has\n * completed.\n *\n * @param {string}    selectorName Name of selector for which resolver triggered.\n * @param {unknown[]} args         Arguments to associate for uniqueness.\n *\n * @return {{ type: 'FINISH_RESOLUTION', selectorName: string, args: unknown[] }} Action object.\n */\nexport function finishResolution( selectorName, args ) {\n\treturn {\n\t\ttype: 'FINISH_RESOLUTION',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that selector resolution has\n * failed.\n *\n * @param {string}        selectorName Name of selector for which resolver triggered.\n * @param {unknown[]}     args         Arguments to associate for uniqueness.\n * @param {Error|unknown} error        The error that caused the failure.\n *\n * @return {{ type: 'FAIL_RESOLUTION', selectorName: string, args: unknown[], error: Error|unknown }} Action object.\n */\nexport function failResolution( selectorName, args, error ) {\n\treturn {\n\t\ttype: 'FAIL_RESOLUTION',\n\t\tselectorName,\n\t\targs,\n\t\terror,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a batch of selector resolutions has\n * started.\n *\n * @param {string}      selectorName Name of selector for which resolver triggered.\n * @param {unknown[][]} args         Array of arguments to associate for uniqueness, each item\n *                                   is associated to a resolution.\n *\n * @return {{ type: 'START_RESOLUTIONS', selectorName: string, args: unknown[][] }} Action object.\n */\nexport function startResolutions( selectorName, args ) {\n\treturn {\n\t\ttype: 'START_RESOLUTIONS',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a batch of selector resolutions has\n * completed.\n *\n * @param {string}      selectorName Name of selector for which resolver triggered.\n * @param {unknown[][]} args         Array of arguments to associate for uniqueness, each item\n *                                   is associated to a resolution.\n *\n * @return {{ type: 'FINISH_RESOLUTIONS', selectorName: string, args: unknown[][] }} Action object.\n */\nexport function finishResolutions( selectorName, args ) {\n\treturn {\n\t\ttype: 'FINISH_RESOLUTIONS',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a batch of selector resolutions has\n * completed and at least one of them has failed.\n *\n * @param {string}            selectorName Name of selector for which resolver triggered.\n * @param {unknown[]}         args         Array of arguments to associate for uniqueness, each item\n *                                         is associated to a resolution.\n * @param {(Error|unknown)[]} errors       Array of errors to associate for uniqueness, each item\n *                                         is associated to a resolution.\n * @return {{ type: 'FAIL_RESOLUTIONS', selectorName: string, args: unknown[], errors: Array<Error|unknown> }} Action object.\n */\nexport function failResolutions( selectorName, args, errors ) {\n\treturn {\n\t\ttype: 'FAIL_RESOLUTIONS',\n\t\tselectorName,\n\t\targs,\n\t\terrors,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that we should invalidate the resolution cache.\n *\n * @param {string}    selectorName Name of selector for which resolver should be invalidated.\n * @param {unknown[]} args         Arguments to associate for uniqueness.\n *\n * @return {{ type: 'INVALIDATE_RESOLUTION', selectorName: string, args: any[] }} Action object.\n */\nexport function invalidateResolution( selectorName, args ) {\n\treturn {\n\t\ttype: 'INVALIDATE_RESOLUTION',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the resolution\n * should be invalidated.\n *\n * @return {{ type: 'INVALIDATE_RESOLUTION_FOR_STORE' }} Action object.\n */\nexport function invalidateResolutionForStore() {\n\treturn {\n\t\ttype: 'INVALIDATE_RESOLUTION_FOR_STORE',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the resolution cache for a\n * given selectorName should be invalidated.\n *\n * @param {string} selectorName Name of selector for which all resolvers should\n *                              be invalidated.\n *\n * @return  {{ type: 'INVALIDATE_RESOLUTION_FOR_STORE_SELECTOR', selectorName: string }} Action object.\n */\nexport function invalidateResolutionForStoreSelector( selectorName ) {\n\treturn {\n\t\ttype: 'INVALIDATE_RESOLUTION_FOR_STORE_SELECTOR',\n\t\tselectorName,\n\t};\n}\n","/**\n * External dependencies\n */\nimport { omit, has } from 'lodash';\nimport EquivalentKeyMap from 'equivalent-key-map';\nimport type { Reducer } from 'redux';\n\n/**\n * Internal dependencies\n */\nimport { selectorArgsToStateKey, onSubKey } from './utils';\n\ntype Action =\n\t| ReturnType< typeof import('./actions').startResolution >\n\t| ReturnType< typeof import('./actions').finishResolution >\n\t| ReturnType< typeof import('./actions').failResolution >\n\t| ReturnType< typeof import('./actions').startResolutions >\n\t| ReturnType< typeof import('./actions').finishResolutions >\n\t| ReturnType< typeof import('./actions').failResolutions >\n\t| ReturnType< typeof import('./actions').invalidateResolution >\n\t| ReturnType< typeof import('./actions').invalidateResolutionForStore >\n\t| ReturnType<\n\t\t\ttypeof import('./actions').invalidateResolutionForStoreSelector\n\t  >;\n\ntype StateKey = unknown[] | unknown;\nexport type StateValue =\n\t| { status: 'resolving' | 'finished' }\n\t| { status: 'error'; error: Error | unknown };\n\nexport type Status = StateValue[ 'status' ];\nexport type State = EquivalentKeyMap< StateKey, StateValue >;\n\n/**\n * Reducer function returning next state for selector resolution of\n * subkeys, object form:\n *\n *  selectorName -> EquivalentKeyMap<Array,boolean>\n */\nconst subKeysIsResolved: Reducer< Record< string, State >, Action > = onSubKey<\n\tState,\n\tAction\n>( 'selectorName' )( ( state = new EquivalentKeyMap(), action: Action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'START_RESOLUTION': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.set( selectorArgsToStateKey( action.args ), {\n\t\t\t\tstatus: 'resolving',\n\t\t\t} );\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'FINISH_RESOLUTION': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.set( selectorArgsToStateKey( action.args ), {\n\t\t\t\tstatus: 'finished',\n\t\t\t} );\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'FAIL_RESOLUTION': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.set( selectorArgsToStateKey( action.args ), {\n\t\t\t\tstatus: 'error',\n\t\t\t\terror: action.error,\n\t\t\t} );\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'START_RESOLUTIONS': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tfor ( const resolutionArgs of action.args ) {\n\t\t\t\tnextState.set( selectorArgsToStateKey( resolutionArgs ), {\n\t\t\t\t\tstatus: 'resolving',\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'FINISH_RESOLUTIONS': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tfor ( const resolutionArgs of action.args ) {\n\t\t\t\tnextState.set( selectorArgsToStateKey( resolutionArgs ), {\n\t\t\t\t\tstatus: 'finished',\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'FAIL_RESOLUTIONS': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\taction.args.forEach( ( resolutionArgs, idx ) => {\n\t\t\t\tconst resolutionState: StateValue = {\n\t\t\t\t\tstatus: 'error',\n\t\t\t\t\terror: undefined,\n\t\t\t\t};\n\n\t\t\t\tconst error = action.errors[ idx ];\n\t\t\t\tif ( error ) {\n\t\t\t\t\tresolutionState.error = error;\n\t\t\t\t}\n\n\t\t\t\tnextState.set(\n\t\t\t\t\tselectorArgsToStateKey( resolutionArgs as unknown[] ),\n\t\t\t\t\tresolutionState\n\t\t\t\t);\n\t\t\t} );\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'INVALIDATE_RESOLUTION': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.delete( selectorArgsToStateKey( action.args ) );\n\t\t\treturn nextState;\n\t\t}\n\t}\n\treturn state;\n} );\n\n/**\n * Reducer function returning next state for selector resolution, object form:\n *\n *   selectorName -> EquivalentKeyMap<Array, boolean>\n *\n * @param  state  Current state.\n * @param  action Dispatched action.\n *\n * @return Next state.\n */\nconst isResolved = ( state: Record< string, State > = {}, action: Action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'INVALIDATE_RESOLUTION_FOR_STORE':\n\t\t\treturn {};\n\t\tcase 'INVALIDATE_RESOLUTION_FOR_STORE_SELECTOR':\n\t\t\treturn has( state, [ action.selectorName ] )\n\t\t\t\t? omit( state, [ action.selectorName ] )\n\t\t\t\t: state;\n\t\tcase 'START_RESOLUTION':\n\t\tcase 'FINISH_RESOLUTION':\n\t\tcase 'FAIL_RESOLUTION':\n\t\tcase 'START_RESOLUTIONS':\n\t\tcase 'FINISH_RESOLUTIONS':\n\t\tcase 'FAIL_RESOLUTIONS':\n\t\tcase 'INVALIDATE_RESOLUTION':\n\t\t\treturn subKeysIsResolved( state, action );\n\t}\n\treturn state;\n};\n\nexport default isResolved;\n","/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { selectorArgsToStateKey } from './utils';\n\n/** @typedef {Record<string, import('./reducer').State>} State */\n/** @typedef {import('./reducer').StateValue} StateValue */\n/** @typedef {import('./reducer').Status} Status */\n\n/**\n * Returns the raw resolution state value for a given selector name,\n * and arguments set. May be undefined if the selector has never been resolved\n * or not resolved for the given set of arguments, otherwise true or false for\n * resolution started and completed respectively.\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {StateValue|undefined} isResolving value.\n */\nexport function getResolutionState( state, selectorName, args ) {\n\tconst map = get( state, [ selectorName ] );\n\tif ( ! map ) {\n\t\treturn;\n\t}\n\n\treturn map.get( selectorArgsToStateKey( args ) );\n}\n\n/**\n * Returns the raw `isResolving` value for a given selector name,\n * and arguments set. May be undefined if the selector has never been resolved\n * or not resolved for the given set of arguments, otherwise true or false for\n * resolution started and completed respectively.\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {boolean | undefined} isResolving value.\n */\nexport function getIsResolving( state, selectorName, args ) {\n\tconst resolutionState = getResolutionState( state, selectorName, args );\n\n\treturn resolutionState && resolutionState.status === 'resolving';\n}\n\n/**\n * Returns true if resolution has already been triggered for a given\n * selector name, and arguments set.\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {boolean} Whether resolution has been triggered.\n */\nexport function hasStartedResolution( state, selectorName, args ) {\n\treturn getResolutionState( state, selectorName, args ) !== undefined;\n}\n\n/**\n * Returns true if resolution has completed for a given selector\n * name, and arguments set.\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {boolean} Whether resolution has completed.\n */\nexport function hasFinishedResolution( state, selectorName, args ) {\n\tconst status = getResolutionState( state, selectorName, args )?.status;\n\treturn status === 'finished' || status === 'error';\n}\n\n/**\n * Returns true if resolution has failed for a given selector\n * name, and arguments set.\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {boolean} Has resolution failed\n */\nexport function hasResolutionFailed( state, selectorName, args ) {\n\treturn getResolutionState( state, selectorName, args )?.status === 'error';\n}\n\n/**\n * Returns the resolution error for a given selector name, and arguments set.\n * Note it may be of an Error type, but may also be null, undefined, or anything else\n * that can be `throw`-n.\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {Error|unknown} Last resolution error\n */\nexport function getResolutionError( state, selectorName, args ) {\n\tconst resolutionState = getResolutionState( state, selectorName, args );\n\treturn resolutionState?.status === 'error' ? resolutionState.error : null;\n}\n\n/**\n * Returns true if resolution has been triggered but has not yet completed for\n * a given selector name, and arguments set.\n *\n * @param {State}      state        Data state.\n * @param {string}     selectorName Selector name.\n * @param {unknown[]?} args         Arguments passed to selector.\n *\n * @return {boolean} Whether resolution is in progress.\n */\nexport function isResolving( state, selectorName, args ) {\n\treturn (\n\t\tgetResolutionState( state, selectorName, args )?.status === 'resolving'\n\t);\n}\n\n/**\n * Returns the list of the cached resolvers.\n *\n * @param {State} state Data state.\n *\n * @return {State} Resolvers mapped by args and selectorName.\n */\nexport function getCachedResolvers( state ) {\n\treturn state;\n}\n","/**\n * External dependencies\n */\nimport type { AnyAction, Reducer } from 'redux';\n\n/**\n * Higher-order reducer creator which creates a combined reducer object, keyed\n * by a property on the action object.\n *\n * @param  actionProperty Action property by which to key object.\n * @return Higher-order reducer.\n */\nexport const onSubKey = < TState extends unknown, TAction extends AnyAction >(\n\tactionProperty: string\n) => (\n\treducer: Reducer< TState, TAction >\n): Reducer< Record< string, TState >, TAction > => (\n\tstate: Record< string, TState > = {},\n\taction\n) => {\n\t// Retrieve subkey from action. Do not track if undefined; useful for cases\n\t// where reducer is scoped by action shape.\n\tconst key = action[ actionProperty ];\n\tif ( key === undefined ) {\n\t\treturn state;\n\t}\n\n\t// Avoid updating state if unchanged. Note that this also accounts for a\n\t// reducer which returns undefined on a key which is not yet tracked.\n\tconst nextKeyState = reducer( state[ key ], action );\n\tif ( nextKeyState === state[ key ] ) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\t...state,\n\t\t[ key ]: nextKeyState,\n\t};\n};\n\n/**\n * Normalize selector argument array by defaulting `undefined` value to an empty array\n * and removing trailing `undefined` values.\n *\n * @param  args Selector argument array\n * @return Normalized state key array\n */\nexport function selectorArgsToStateKey( args: unknown[] | null | undefined ) {\n\tif ( args === undefined || args === null ) {\n\t\treturn [];\n\t}\n\n\tconst len = args.length;\n\tlet idx = len;\n\twhile ( idx > 0 && args[ idx - 1 ] === undefined ) {\n\t\tidx--;\n\t}\n\treturn idx === len ? args : args.slice( 0, idx );\n}\n","export default function createThunkMiddleware( args ) {\n\treturn () => ( next ) => ( action ) => {\n\t\tif ( typeof action === 'function' ) {\n\t\t\treturn action( args );\n\t\t}\n\n\t\treturn next( action );\n\t};\n}\n","/**\n * External dependencies\n */\nimport { mapValues, isObject, forEach } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport createReduxStore from './redux-store';\nimport coreDataStore from './store';\nimport { createEmitter } from './utils/emitter';\n\n/** @typedef {import('./types').StoreDescriptor} StoreDescriptor */\n\n/**\n * @typedef {Object} WPDataRegistry An isolated orchestrator of store registrations.\n *\n * @property {Function} registerGenericStore Given a namespace key and settings\n *                                           object, registers a new generic\n *                                           store.\n * @property {Function} registerStore        Given a namespace key and settings\n *                                           object, registers a new namespace\n *                                           store.\n * @property {Function} subscribe            Given a function callback, invokes\n *                                           the callback on any change to state\n *                                           within any registered store.\n * @property {Function} select               Given a namespace key, returns an\n *                                           object of the  store's registered\n *                                           selectors.\n * @property {Function} dispatch             Given a namespace key, returns an\n *                                           object of the store's registered\n *                                           action dispatchers.\n */\n\n/**\n * @typedef {Object} WPDataPlugin An object of registry function overrides.\n *\n * @property {Function} registerStore registers store.\n */\n\n/**\n * Creates a new store registry, given an optional object of initial store\n * configurations.\n *\n * @param {Object}  storeConfigs Initial store configurations.\n * @param {Object?} parent       Parent registry.\n *\n * @return {WPDataRegistry} Data registry.\n */\nexport function createRegistry( storeConfigs = {}, parent = null ) {\n\tconst stores = {};\n\tconst emitter = createEmitter();\n\tconst listeningStores = new Set();\n\n\t/**\n\t * Global listener called for each store's update.\n\t */\n\tfunction globalListener() {\n\t\temitter.emit();\n\t}\n\n\t/**\n\t * Subscribe to changes to any data.\n\t *\n\t * @param {Function} listener Listener function.\n\t *\n\t * @return {Function} Unsubscribe function.\n\t */\n\tconst subscribe = ( listener ) => {\n\t\treturn emitter.subscribe( listener );\n\t};\n\n\t/**\n\t * Calls a selector given the current state and extra arguments.\n\t *\n\t * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n\t *                                                       or the store descriptor.\n\t *\n\t * @return {*} The selector's returned value.\n\t */\n\tfunction select( storeNameOrDescriptor ) {\n\t\tconst storeName = isObject( storeNameOrDescriptor )\n\t\t\t? storeNameOrDescriptor.name\n\t\t\t: storeNameOrDescriptor;\n\t\tlisteningStores.add( storeName );\n\t\tconst store = stores[ storeName ];\n\t\tif ( store ) {\n\t\t\treturn store.getSelectors();\n\t\t}\n\n\t\treturn parent && parent.select( storeName );\n\t}\n\n\tfunction __unstableMarkListeningStores( callback, ref ) {\n\t\tlisteningStores.clear();\n\t\tconst result = callback.call( this );\n\t\tref.current = Array.from( listeningStores );\n\t\treturn result;\n\t}\n\n\t/**\n\t * Given the name of a registered store, returns an object containing the store's\n\t * selectors pre-bound to state so that you only need to supply additional arguments,\n\t * and modified so that they return promises that resolve to their eventual values,\n\t * after any resolvers have ran.\n\t *\n\t * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n\t *                                                       or the store descriptor.\n\t *\n\t * @return {Object} Each key of the object matches the name of a selector.\n\t */\n\tfunction resolveSelect( storeNameOrDescriptor ) {\n\t\tconst storeName = isObject( storeNameOrDescriptor )\n\t\t\t? storeNameOrDescriptor.name\n\t\t\t: storeNameOrDescriptor;\n\t\tlisteningStores.add( storeName );\n\t\tconst store = stores[ storeName ];\n\t\tif ( store ) {\n\t\t\treturn store.getResolveSelectors();\n\t\t}\n\n\t\treturn parent && parent.resolveSelect( storeName );\n\t}\n\n\t/**\n\t * Returns the available actions for a part of the state.\n\t *\n\t * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n\t *                                                       or the store descriptor.\n\t *\n\t * @return {*} The action's returned value.\n\t */\n\tfunction dispatch( storeNameOrDescriptor ) {\n\t\tconst storeName = isObject( storeNameOrDescriptor )\n\t\t\t? storeNameOrDescriptor.name\n\t\t\t: storeNameOrDescriptor;\n\t\tconst store = stores[ storeName ];\n\t\tif ( store ) {\n\t\t\treturn store.getActions();\n\t\t}\n\n\t\treturn parent && parent.dispatch( storeName );\n\t}\n\n\t//\n\t// Deprecated\n\t// TODO: Remove this after `use()` is removed.\n\tfunction withPlugins( attributes ) {\n\t\treturn mapValues( attributes, ( attribute, key ) => {\n\t\t\tif ( typeof attribute !== 'function' ) {\n\t\t\t\treturn attribute;\n\t\t\t}\n\t\t\treturn function () {\n\t\t\t\treturn registry[ key ].apply( null, arguments );\n\t\t\t};\n\t\t} );\n\t}\n\n\t/**\n\t * Registers a store instance.\n\t *\n\t * @param {string} name  Store registry name.\n\t * @param {Object} store Store instance object (getSelectors, getActions, subscribe).\n\t */\n\tfunction registerStoreInstance( name, store ) {\n\t\tif ( typeof store.getSelectors !== 'function' ) {\n\t\t\tthrow new TypeError( 'store.getSelectors must be a function' );\n\t\t}\n\t\tif ( typeof store.getActions !== 'function' ) {\n\t\t\tthrow new TypeError( 'store.getActions must be a function' );\n\t\t}\n\t\tif ( typeof store.subscribe !== 'function' ) {\n\t\t\tthrow new TypeError( 'store.subscribe must be a function' );\n\t\t}\n\t\t// The emitter is used to keep track of active listeners when the registry\n\t\t// get paused, that way, when resumed we should be able to call all these\n\t\t// pending listeners.\n\t\tstore.emitter = createEmitter();\n\t\tconst currentSubscribe = store.subscribe;\n\t\tstore.subscribe = ( listener ) => {\n\t\t\tconst unsubscribeFromEmitter = store.emitter.subscribe( listener );\n\t\t\tconst unsubscribeFromStore = currentSubscribe( () => {\n\t\t\t\tif ( store.emitter.isPaused ) {\n\t\t\t\t\tstore.emitter.emit();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlistener();\n\t\t\t} );\n\n\t\t\treturn () => {\n\t\t\t\tunsubscribeFromStore?.();\n\t\t\t\tunsubscribeFromEmitter?.();\n\t\t\t};\n\t\t};\n\t\tstores[ name ] = store;\n\t\tstore.subscribe( globalListener );\n\t}\n\n\t/**\n\t * Registers a new store given a store descriptor.\n\t *\n\t * @param {StoreDescriptor} store Store descriptor.\n\t */\n\tfunction register( store ) {\n\t\tregisterStoreInstance( store.name, store.instantiate( registry ) );\n\t}\n\n\tfunction registerGenericStore( name, store ) {\n\t\tdeprecated( 'wp.data.registerGenericStore', {\n\t\t\tsince: '5.9',\n\t\t\talternative: 'wp.data.register( storeDescriptor )',\n\t\t} );\n\t\tregisterStoreInstance( name, store );\n\t}\n\n\t/**\n\t * Registers a standard `@wordpress/data` store.\n\t *\n\t * @param {string} storeName Unique namespace identifier.\n\t * @param {Object} options   Store description (reducer, actions, selectors, resolvers).\n\t *\n\t * @return {Object} Registered store object.\n\t */\n\tfunction registerStore( storeName, options ) {\n\t\tif ( ! options.reducer ) {\n\t\t\tthrow new TypeError( 'Must specify store reducer' );\n\t\t}\n\n\t\tconst store = createReduxStore( storeName, options ).instantiate(\n\t\t\tregistry\n\t\t);\n\t\tregisterStoreInstance( storeName, store );\n\t\treturn store.store;\n\t}\n\n\t/**\n\t * Subscribe handler to a store.\n\t *\n\t * @param {string[]} storeName The store name.\n\t * @param {Function} handler   The function subscribed to the store.\n\t * @return {Function} A function to unsubscribe the handler.\n\t */\n\tfunction __unstableSubscribeStore( storeName, handler ) {\n\t\tif ( storeName in stores ) {\n\t\t\treturn stores[ storeName ].subscribe( handler );\n\t\t}\n\n\t\t// Trying to access a store that hasn't been registered,\n\t\t// this is a pattern rarely used but seen in some places.\n\t\t// We fallback to regular `subscribe` here for backward-compatibility for now.\n\t\t// See https://github.com/WordPress/gutenberg/pull/27466 for more info.\n\t\tif ( ! parent ) {\n\t\t\treturn subscribe( handler );\n\t\t}\n\n\t\treturn parent.__unstableSubscribeStore( storeName, handler );\n\t}\n\n\tfunction batch( callback ) {\n\t\temitter.pause();\n\t\tforEach( stores, ( store ) => store.emitter.pause() );\n\t\tcallback();\n\t\temitter.resume();\n\t\tforEach( stores, ( store ) => store.emitter.resume() );\n\t}\n\n\tlet registry = {\n\t\tbatch,\n\t\tstores,\n\t\tnamespaces: stores, // TODO: Deprecate/remove this.\n\t\tsubscribe,\n\t\tselect,\n\t\tresolveSelect,\n\t\tdispatch,\n\t\tuse,\n\t\tregister,\n\t\tregisterGenericStore,\n\t\tregisterStore,\n\t\t__unstableMarkListeningStores,\n\t\t__unstableSubscribeStore,\n\t};\n\n\t//\n\t// TODO:\n\t// This function will be deprecated as soon as it is no longer internally referenced.\n\tfunction use( plugin, options ) {\n\t\tif ( ! plugin ) {\n\t\t\treturn;\n\t\t}\n\n\t\tregistry = {\n\t\t\t...registry,\n\t\t\t...plugin( registry, options ),\n\t\t};\n\n\t\treturn registry;\n\t}\n\n\tregistry.register( coreDataStore );\n\n\tfor ( const [ name, config ] of Object.entries( storeConfigs ) ) {\n\t\tregistry.register( createReduxStore( name, config ) );\n\t}\n\n\tif ( parent ) {\n\t\tparent.subscribe( globalListener );\n\t}\n\n\treturn withPlugins( registry );\n}\n","/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport coreDataStore from './store';\n\n/** @typedef {import('./registry').WPDataRegistry} WPDataRegistry */\n\n/**\n * Creates a middleware handling resolvers cache invalidation.\n *\n * @param {WPDataRegistry} registry   The registry reference for which to create\n *                                    the middleware.\n * @param {string}         reducerKey The namespace for which to create the\n *                                    middleware.\n *\n * @return {Function} Middleware function.\n */\nconst createResolversCacheMiddleware = ( registry, reducerKey ) => () => (\n\tnext\n) => ( action ) => {\n\tconst resolvers = registry\n\t\t.select( coreDataStore )\n\t\t.getCachedResolvers( reducerKey );\n\tObject.entries( resolvers ).forEach(\n\t\t( [ selectorName, resolversByArgs ] ) => {\n\t\t\tconst resolver = get( registry.stores, [\n\t\t\t\treducerKey,\n\t\t\t\t'resolvers',\n\t\t\t\tselectorName,\n\t\t\t] );\n\t\t\tif ( ! resolver || ! resolver.shouldInvalidate ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolversByArgs.forEach( ( value, args ) => {\n\t\t\t\t// resolversByArgs is the map Map([ args ] => boolean) storing the cache resolution status for a given selector.\n\t\t\t\t// If the value is \"finished\" or \"error\" it means this resolver has finished its resolution which means we need\n\t\t\t\t// to invalidate it, if it's true it means it's inflight and the invalidation is not necessary.\n\t\t\t\tif (\n\t\t\t\t\t( value?.status !== 'finished' &&\n\t\t\t\t\t\tvalue?.status !== 'error' ) ||\n\t\t\t\t\t! resolver.shouldInvalidate( action, ...args )\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Trigger cache invalidation\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( coreDataStore )\n\t\t\t\t\t.invalidateResolution( reducerKey, selectorName, args );\n\t\t\t} );\n\t\t}\n\t);\n\treturn next( action );\n};\n\nexport default createResolversCacheMiddleware;\n","const coreDataStore = {\n\tname: 'core/data',\n\tinstantiate( registry ) {\n\t\tconst getCoreDataSelector = ( selectorName ) => ( key, ...args ) => {\n\t\t\treturn registry.select( key )[ selectorName ]( ...args );\n\t\t};\n\n\t\tconst getCoreDataAction = ( actionName ) => ( key, ...args ) => {\n\t\t\treturn registry.dispatch( key )[ actionName ]( ...args );\n\t\t};\n\n\t\treturn {\n\t\t\tgetSelectors() {\n\t\t\t\treturn Object.fromEntries(\n\t\t\t\t\t[\n\t\t\t\t\t\t'getIsResolving',\n\t\t\t\t\t\t'hasStartedResolution',\n\t\t\t\t\t\t'hasFinishedResolution',\n\t\t\t\t\t\t'isResolving',\n\t\t\t\t\t\t'getCachedResolvers',\n\t\t\t\t\t].map( ( selectorName ) => [\n\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\tgetCoreDataSelector( selectorName ),\n\t\t\t\t\t] )\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tgetActions() {\n\t\t\t\treturn Object.fromEntries(\n\t\t\t\t\t[\n\t\t\t\t\t\t'startResolution',\n\t\t\t\t\t\t'finishResolution',\n\t\t\t\t\t\t'invalidateResolution',\n\t\t\t\t\t\t'invalidateResolutionForStore',\n\t\t\t\t\t\t'invalidateResolutionForStoreSelector',\n\t\t\t\t\t].map( ( actionName ) => [\n\t\t\t\t\t\tactionName,\n\t\t\t\t\t\tgetCoreDataAction( actionName ),\n\t\t\t\t\t] )\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tsubscribe() {\n\t\t\t\t// There's no reasons to trigger any listener when we subscribe to this store\n\t\t\t\t// because there's no state stored in this store that need to retrigger selectors\n\t\t\t\t// if a change happens, the corresponding store where the tracking stated live\n\t\t\t\t// would have already triggered a \"subscribe\" call.\n\t\t\t\treturn () => () => {};\n\t\t\t},\n\t\t};\n\t},\n};\n\nexport default coreDataStore;\n","/**\n * Create an event emitter.\n *\n * @return {import(\"../types\").DataEmitter} Emitter.\n */\nexport function createEmitter() {\n\tlet isPaused = false;\n\tlet isPending = false;\n\tconst listeners = new Set();\n\tconst notifyListeners = () =>\n\t\t// We use Array.from to clone the listeners Set\n\t\t// This ensures that we don't run a listener\n\t\t// that was added as a response to another listener.\n\t\tArray.from( listeners ).forEach( ( listener ) => listener() );\n\n\treturn {\n\t\tget isPaused() {\n\t\t\treturn isPaused;\n\t\t},\n\n\t\tsubscribe( listener ) {\n\t\t\tlisteners.add( listener );\n\t\t\treturn () => listeners.delete( listener );\n\t\t},\n\n\t\tpause() {\n\t\t\tisPaused = true;\n\t\t},\n\n\t\tresume() {\n\t\t\tisPaused = false;\n\t\t\tif ( isPending ) {\n\t\t\t\tisPending = false;\n\t\t\t\tnotifyListeners();\n\t\t\t}\n\t\t},\n\n\t\temit() {\n\t\t\tif ( isPaused ) {\n\t\t\t\tisPending = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnotifyListeners();\n\t\t},\n\t};\n}\n","'use strict';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * Given an instance of EquivalentKeyMap, returns its internal value pair tuple\n * for a key, if one exists. The tuple members consist of the last reference\n * value for the key (used in efficient subsequent lookups) and the value\n * assigned for the key at the leaf node.\n *\n * @param {EquivalentKeyMap} instance EquivalentKeyMap instance.\n * @param {*} key                     The key for which to return value pair.\n *\n * @return {?Array} Value pair, if exists.\n */\nfunction getValuePair(instance, key) {\n  var _map = instance._map,\n      _arrayTreeMap = instance._arrayTreeMap,\n      _objectTreeMap = instance._objectTreeMap; // Map keeps a reference to the last object-like key used to set the\n  // value, which can be used to shortcut immediately to the value.\n\n  if (_map.has(key)) {\n    return _map.get(key);\n  } // Sort keys to ensure stable retrieval from tree.\n\n\n  var properties = Object.keys(key).sort(); // Tree by type to avoid conflicts on numeric object keys, empty value.\n\n  var map = Array.isArray(key) ? _arrayTreeMap : _objectTreeMap;\n\n  for (var i = 0; i < properties.length; i++) {\n    var property = properties[i];\n    map = map.get(property);\n\n    if (map === undefined) {\n      return;\n    }\n\n    var propertyValue = key[property];\n    map = map.get(propertyValue);\n\n    if (map === undefined) {\n      return;\n    }\n  }\n\n  var valuePair = map.get('_ekm_value');\n\n  if (!valuePair) {\n    return;\n  } // If reached, it implies that an object-like key was set with another\n  // reference, so delete the reference and replace with the current.\n\n\n  _map.delete(valuePair[0]);\n\n  valuePair[0] = key;\n  map.set('_ekm_value', valuePair);\n\n  _map.set(key, valuePair);\n\n  return valuePair;\n}\n/**\n * Variant of a Map object which enables lookup by equivalent (deeply equal)\n * object and array keys.\n */\n\n\nvar EquivalentKeyMap =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructs a new instance of EquivalentKeyMap.\n   *\n   * @param {Iterable.<*>} iterable Initial pair of key, value for map.\n   */\n  function EquivalentKeyMap(iterable) {\n    _classCallCheck(this, EquivalentKeyMap);\n\n    this.clear();\n\n    if (iterable instanceof EquivalentKeyMap) {\n      // Map#forEach is only means of iterating with support for IE11.\n      var iterablePairs = [];\n      iterable.forEach(function (value, key) {\n        iterablePairs.push([key, value]);\n      });\n      iterable = iterablePairs;\n    }\n\n    if (iterable != null) {\n      for (var i = 0; i < iterable.length; i++) {\n        this.set(iterable[i][0], iterable[i][1]);\n      }\n    }\n  }\n  /**\n   * Accessor property returning the number of elements.\n   *\n   * @return {number} Number of elements.\n   */\n\n\n  _createClass(EquivalentKeyMap, [{\n    key: \"set\",\n\n    /**\n     * Add or update an element with a specified key and value.\n     *\n     * @param {*} key   The key of the element to add.\n     * @param {*} value The value of the element to add.\n     *\n     * @return {EquivalentKeyMap} Map instance.\n     */\n    value: function set(key, value) {\n      // Shortcut non-object-like to set on internal Map.\n      if (key === null || _typeof(key) !== 'object') {\n        this._map.set(key, value);\n\n        return this;\n      } // Sort keys to ensure stable assignment into tree.\n\n\n      var properties = Object.keys(key).sort();\n      var valuePair = [key, value]; // Tree by type to avoid conflicts on numeric object keys, empty value.\n\n      var map = Array.isArray(key) ? this._arrayTreeMap : this._objectTreeMap;\n\n      for (var i = 0; i < properties.length; i++) {\n        var property = properties[i];\n\n        if (!map.has(property)) {\n          map.set(property, new EquivalentKeyMap());\n        }\n\n        map = map.get(property);\n        var propertyValue = key[property];\n\n        if (!map.has(propertyValue)) {\n          map.set(propertyValue, new EquivalentKeyMap());\n        }\n\n        map = map.get(propertyValue);\n      } // If an _ekm_value exists, there was already an equivalent key. Before\n      // overriding, ensure that the old key reference is removed from map to\n      // avoid memory leak of accumulating equivalent keys. This is, in a\n      // sense, a poor man's WeakMap, while still enabling iterability.\n\n\n      var previousValuePair = map.get('_ekm_value');\n\n      if (previousValuePair) {\n        this._map.delete(previousValuePair[0]);\n      }\n\n      map.set('_ekm_value', valuePair);\n\n      this._map.set(key, valuePair);\n\n      return this;\n    }\n    /**\n     * Returns a specified element.\n     *\n     * @param {*} key The key of the element to return.\n     *\n     * @return {?*} The element associated with the specified key or undefined\n     *              if the key can't be found.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      // Shortcut non-object-like to get from internal Map.\n      if (key === null || _typeof(key) !== 'object') {\n        return this._map.get(key);\n      }\n\n      var valuePair = getValuePair(this, key);\n\n      if (valuePair) {\n        return valuePair[1];\n      }\n    }\n    /**\n     * Returns a boolean indicating whether an element with the specified key\n     * exists or not.\n     *\n     * @param {*} key The key of the element to test for presence.\n     *\n     * @return {boolean} Whether an element with the specified key exists.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      if (key === null || _typeof(key) !== 'object') {\n        return this._map.has(key);\n      } // Test on the _presence_ of the pair, not its value, as even undefined\n      // can be a valid member value for a key.\n\n\n      return getValuePair(this, key) !== undefined;\n    }\n    /**\n     * Removes the specified element.\n     *\n     * @param {*} key The key of the element to remove.\n     *\n     * @return {boolean} Returns true if an element existed and has been\n     *                   removed, or false if the element does not exist.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      if (!this.has(key)) {\n        return false;\n      } // This naive implementation will leave orphaned child trees. A better\n      // implementation should traverse and remove orphans.\n\n\n      this.set(key, undefined);\n      return true;\n    }\n    /**\n     * Executes a provided function once per each key/value pair, in insertion\n     * order.\n     *\n     * @param {Function} callback Function to execute for each element.\n     * @param {*}        thisArg  Value to use as `this` when executing\n     *                            `callback`.\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      var _this = this;\n\n      var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n\n      this._map.forEach(function (value, key) {\n        // Unwrap value from object-like value pair.\n        if (key !== null && _typeof(key) === 'object') {\n          value = value[1];\n        }\n\n        callback.call(thisArg, value, key, _this);\n      });\n    }\n    /**\n     * Removes all elements.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._map = new Map();\n      this._arrayTreeMap = new Map();\n      this._objectTreeMap = new Map();\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._map.size;\n    }\n  }]);\n\n  return EquivalentKeyMap;\n}();\n\nmodule.exports = EquivalentKeyMap;\n","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n","function combineReducers( reducers ) {\n\tvar keys = Object.keys( reducers ),\n\t\tgetNextState;\n\n\tgetNextState = ( function() {\n\t\tvar fn, i, key;\n\n\t\tfn = 'return {';\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t// Rely on Quoted escaping of JSON.stringify with guarantee that\n\t\t\t// each member of Object.keys is a string.\n\t\t\t//\n\t\t\t// \"If Type(value) is String, then return the result of calling the\n\t\t\t// abstract operation Quote with argument value. [...] The abstract\n\t\t\t// operation Quote(value) wraps a String value in double quotes and\n\t\t\t// escapes characters within it.\"\n\t\t\t//\n\t\t\t// https://www.ecma-international.org/ecma-262/5.1/#sec-15.12.3\n\t\t\tkey = JSON.stringify( keys[ i ] );\n\n\t\t\tfn += key + ':r[' + key + '](s[' + key + '],a),';\n\t\t}\n\t\tfn += '}';\n\n\t\treturn new Function( 'r,s,a', fn );\n\t} )();\n\n\treturn function combinedReducer( state, action ) {\n\t\tvar nextState, i, key;\n\n\t\t// Assumed changed if initial state.\n\t\tif ( state === undefined ) {\n\t\t\treturn getNextState( reducers, {}, action );\n\t\t}\n\n\t\tnextState = getNextState( reducers, state, action );\n\n\t\t// Determine whether state has changed.\n\t\ti = keys.length;\n\t\twhile ( i-- ) {\n\t\t\tkey = keys[ i ];\n\t\t\tif ( state[ key ] !== nextState[ key ] ) {\n\t\t\t\t// Return immediately if a changed value is encountered.\n\t\t\t\treturn nextState;\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t};\n}\n\nmodule.exports = combineReducers;\n","import { useState, useRef, useEffect } from 'react';\n\nfunction areInputsEqual(newInputs, lastInputs) {\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n\n  for (var i = 0; i < newInputs.length; i++) {\n    if (newInputs[i] !== lastInputs[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction useMemoOne(getResult, inputs) {\n  var initial = useState(function () {\n    return {\n      inputs: inputs,\n      result: getResult()\n    };\n  })[0];\n  var isFirstRun = useRef(true);\n  var committed = useRef(initial);\n  var useCache = isFirstRun.current || Boolean(inputs && committed.current.inputs && areInputsEqual(inputs, committed.current.inputs));\n  var cache = useCache ? committed.current : {\n    inputs: inputs,\n    result: getResult()\n  };\n  useEffect(function () {\n    isFirstRun.current = false;\n    committed.current = cache;\n  }, [cache]);\n  return cache.result;\n}\nfunction useCallbackOne(callback, inputs) {\n  return useMemoOne(function () {\n    return callback;\n  }, inputs);\n}\nvar useMemo = useMemoOne;\nvar useCallback = useCallbackOne;\n\nexport { useCallback, useCallbackOne, useMemo, useMemoOne };\n","module.exports = window[\"React\"];","module.exports = window[\"lodash\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"deprecated\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"isShallowEqual\"];","module.exports = window[\"wp\"][\"priorityQueue\"];","module.exports = window[\"wp\"][\"reduxRoutine\"];","export default function isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * External dependencies\n */\nimport combineReducers from 'turbo-combine-reducers';\n\n/**\n * Internal dependencies\n */\nimport defaultRegistry from './default-registry';\nimport * as plugins from './plugins';\n\n/** @typedef {import('./types').StoreDescriptor} StoreDescriptor */\n\nexport { default as withSelect } from './components/with-select';\nexport { default as withDispatch } from './components/with-dispatch';\nexport { default as withRegistry } from './components/with-registry';\nexport {\n\tRegistryProvider,\n\tRegistryConsumer,\n\tuseRegistry,\n} from './components/registry-provider';\nexport { default as useSelect } from './components/use-select';\nexport { useDispatch } from './components/use-dispatch';\nexport { AsyncModeProvider } from './components/async-mode-provider';\nexport { createRegistry } from './registry';\nexport { createRegistrySelector, createRegistryControl } from './factory';\nexport { controls } from './controls';\nexport { default as createReduxStore } from './redux-store';\n\n/**\n * Object of available plugins to use with a registry.\n *\n * @see [use](#use)\n *\n * @type {Object}\n */\nexport { plugins };\n\n/**\n * The combineReducers helper function turns an object whose values are different\n * reducing functions into a single reducing function you can pass to registerReducer.\n *\n * @param {Object} reducers An object whose values correspond to different reducing\n *                          functions that need to be combined into one.\n *\n * @example\n * ```js\n * import { combineReducers, createReduxStore, register } from '@wordpress/data';\n *\n * const prices = ( state = {}, action ) => {\n * \treturn action.type === 'SET_PRICE' ?\n * \t\t{\n * \t\t\t...state,\n * \t\t\t[ action.item ]: action.price,\n * \t\t} :\n * \t\tstate;\n * };\n *\n * const discountPercent = ( state = 0, action ) => {\n * \treturn action.type === 'START_SALE' ?\n * \t\taction.discountPercent :\n * \t\tstate;\n * };\n *\n * const store = createReduxStore( 'my-shop', {\n * \treducer: combineReducers( {\n * \t\tprices,\n * \t\tdiscountPercent,\n * \t} ),\n * } );\n * register( store );\n * ```\n *\n * @return {Function} A reducer that invokes every reducer inside the reducers\n *                    object, and constructs a state object with the same shape.\n */\nexport { combineReducers };\n\n/**\n * Given the name or descriptor of a registered store, returns an object of the store's selectors.\n * The selector functions are been pre-bound to pass the current state automatically.\n * As a consumer, you need only pass arguments of the selector, if applicable.\n *\n * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n *                                                       or the store descriptor.\n *\n * @example\n * ```js\n * import { select } from '@wordpress/data';\n *\n * select( 'my-shop' ).getPrice( 'hammer' );\n * ```\n *\n * @return {Object} Object containing the store's selectors.\n */\nexport const select = defaultRegistry.select;\n\n/**\n * Given the name of a registered store, returns an object containing the store's\n * selectors pre-bound to state so that you only need to supply additional arguments,\n * and modified so that they return promises that resolve to their eventual values,\n * after any resolvers have ran.\n *\n * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n *                                                       or the store descriptor.\n *\n * @example\n * ```js\n * import { resolveSelect } from '@wordpress/data';\n *\n * resolveSelect( 'my-shop' ).getPrice( 'hammer' ).then(console.log)\n * ```\n *\n * @return {Object} Object containing the store's promise-wrapped selectors.\n */\nexport const resolveSelect = defaultRegistry.resolveSelect;\n\n/**\n * Given the name of a registered store, returns an object of the store's action creators.\n * Calling an action creator will cause it to be dispatched, updating the state value accordingly.\n *\n * Note: Action creators returned by the dispatch will return a promise when\n * they are called.\n *\n * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\n *                                                       or the store descriptor.\n *\n * @example\n * ```js\n * import { dispatch } from '@wordpress/data';\n *\n * dispatch( 'my-shop' ).setPrice( 'hammer', 9.75 );\n * ```\n * @return {Object} Object containing the action creators.\n */\nexport const dispatch = defaultRegistry.dispatch;\n\n/**\n * Given a listener function, the function will be called any time the state value\n * of one of the registered stores has changed. This function returns a `unsubscribe`\n * function used to stop the subscription.\n *\n * @param {Function} listener Callback function.\n *\n * @example\n * ```js\n * import { subscribe } from '@wordpress/data';\n *\n * const unsubscribe = subscribe( () => {\n * \t// You could use this opportunity to test whether the derived result of a\n * \t// selector has subsequently changed as the result of a state update.\n * } );\n *\n * // Later, if necessary...\n * unsubscribe();\n * ```\n */\nexport const subscribe = defaultRegistry.subscribe;\n\n/**\n * Registers a generic store instance.\n *\n * @deprecated Use `register( storeDescriptor )` instead.\n *\n * @param {string} name  Store registry name.\n * @param {Object} store Store instance (`{ getSelectors, getActions, subscribe }`).\n */\nexport const registerGenericStore = defaultRegistry.registerGenericStore;\n\n/**\n * Registers a standard `@wordpress/data` store.\n *\n * @deprecated Use `register` instead.\n *\n * @param {string} storeName Unique namespace identifier for the store.\n * @param {Object} options   Store description (reducer, actions, selectors, resolvers).\n *\n * @return {Object} Registered store object.\n */\nexport const registerStore = defaultRegistry.registerStore;\n\n/**\n * Extends a registry to inherit functionality provided by a given plugin. A\n * plugin is an object with properties aligning to that of a registry, merged\n * to extend the default registry behavior.\n *\n * @param {Object} plugin Plugin object.\n */\nexport const use = defaultRegistry.use;\n\n/**\n * Registers a standard `@wordpress/data` store descriptor.\n *\n * @example\n * ```js\n * import { createReduxStore, register } from '@wordpress/data';\n *\n * const store = createReduxStore( 'demo', {\n *     reducer: ( state = 'OK' ) => state,\n *     selectors: {\n *         getValue: ( state ) => state,\n *     },\n * } );\n * register( store );\n * ```\n *\n * @param {StoreDescriptor} store Store descriptor.\n */\nexport const register = defaultRegistry.register;\n"],"names":["createContext","Context","Consumer","Provider","AsyncModeConsumer","useContext","useAsyncMode","defaultRegistry","RegistryConsumer","useRegistry","mapValues","useMemo","useRef","useIsomorphicLayoutEffect","useDispatchWithMap","dispatchMap","deps","registry","currentDispatchMap","current","currentDispatchProps","dispatch","dispatcher","propName","console","warn","useDispatch","storeNameOrDescriptor","useMemoOne","createQueue","useCallback","useReducer","isShallowEqual","noop","renderQueue","useSelect","mapSelect","hasMappingFunction","callbackMapper","_mapSelect","isAsync","queueContext","queue","forceRender","s","latestMapSelect","latestIsAsync","latestMapOutput","latestMapOutputError","isMountedAndNotUnsubscribing","listeningStores","wrapSelect","callback","__unstableMarkListeningStores","select","depsChangedFlag","mapOutput","hasReplacedMapSelect","lastMapSelectFailed","error","errorMessage","message","stack","undefined","flush","onStoreChange","newMapOutput","onChange","add","unsubscribers","map","storeName","__unstableSubscribeStore","forEach","unsubscribe","createHigherOrderComponent","withDispatch","mapDispatchToProps","WrappedComponent","ownProps","mapDispatch","dispatchProps","withRegistry","OriginalComponent","props","pure","withSelect","mapSelectToProps","mergeProps","isObject","createRegistryControl","SELECT","RESOLVE_SELECT","DISPATCH","selectorName","args","type","storeKey","name","resolveSelect","actionName","controls","builtinControls","method","hasResolver","createRegistry","createRegistrySelector","registrySelector","selector","isRegistrySelector","registryControl","isRegistryControl","default","persistence","merge","isPlainObject","identity","defaultStorage","combineReducers","DEFAULT_STORAGE","DEFAULT_STORAGE_KEY","withLazySameState","reducer","state","action","nextState","createPersistenceInterface","options","storage","storageKey","data","getData","persisted","getItem","JSON","parse","setData","key","value","setItem","stringify","get","set","persistencePlugin","pluginOptions","createPersistOnChange","getState","keys","getPersistedState","Array","isArray","reducers","reduce","accumulator","Object","assign","lastState","registerStore","persist","persistedState","initialState","store","subscribe","migrateFeaturePreferencesToPreferencesStore","sourceStoreName","preferencesStoreName","interfaceStoreName","interfaceFeatures","preferences","features","sourceFeatures","featuresToMigrate","existingPreferences","otherInterfaceState","otherInterfaceScopes","otherSourceState","sourcePreferences","migrateIndividualPreferenceToPreferencesStore","from","scope","convert","sourcePreference","targetPreference","otherScopes","otherPreferences","convertedPreferences","allSourcePreferences","convertEditPostPanels","panels","convertedData","panelName","panel","enabled","inactivePanels","push","opened","openPanels","migrateThirdPartyFeaturePreferencesToPreferencesStore","interfaceScopes","startsWith","migrateInterfaceEnableItemsToPreferencesStore","sourceEnableItems","enableItems","allPreferences","sourceComplementaryAreas","singleEnableItems","complementaryArea","convertedComplementaryAreas","sourcePinnedItems","multipleEnableItems","pinnedItems","allConvertedData","otherInterfaceItems","__unstableMigrate","objectStorage","window","localStorage","removeItem","clear","String","create","isPromise","promiseMiddleware","next","then","resolvedAction","createStore","applyMiddleware","flowRight","omit","EquivalentKeyMap","createReduxRoutineMiddleware","promise","createResolversCacheMiddleware","createThunkMiddleware","metadataReducer","metadataSelectors","metadataActions","trimUndefinedValues","array","result","i","length","splice","createResolversCache","cache","isRunning","delete","markAsRunning","createReduxStore","instantiate","thunkArgs","getActions","__unstableOriginalGetState","getSelectors","getResolveSelectors","instantiateReduxStore","resolversCache","resolvers","actions","mapActions","selectors","mapSelectors","metadata","root","mapResolvers","resolveSelectors","mapResolveSelectors","listener","hasChanged","normalizedControls","control","middlewares","enhancers","__REDUX_DEVTOOLS_EXTENSION__","instanceId","enhancedReducer","createStateSelector","runSelector","argsLength","arguments","createBoundAction","Promise","resolve","storeSelectors","apply","reject","hasFinished","hasFinishedResolution","finalize","hasFailed","hasResolutionFailed","getResolutionError","getResult","mappedResolvers","resolver","fulfill","mapSelector","selectorResolver","fulfillSelector","isFulfilled","hasStartedResolution","setTimeout","startResolution","fulfillResolver","finishResolution","failResolution","startResolutions","finishResolutions","failResolutions","errors","invalidateResolution","invalidateResolutionForStore","invalidateResolutionForStoreSelector","has","selectorArgsToStateKey","onSubKey","subKeysIsResolved","status","resolutionArgs","idx","resolutionState","isResolved","getResolutionState","getIsResolving","isResolving","getCachedResolvers","actionProperty","nextKeyState","len","slice","deprecated","coreDataStore","createEmitter","storeConfigs","parent","stores","emitter","Set","globalListener","emit","ref","call","withPlugins","attributes","attribute","registerStoreInstance","TypeError","currentSubscribe","unsubscribeFromEmitter","unsubscribeFromStore","isPaused","register","registerGenericStore","since","alternative","handler","batch","pause","resume","namespaces","use","plugin","config","entries","reducerKey","resolversByArgs","shouldInvalidate","getCoreDataSelector","getCoreDataAction","fromEntries","isPending","listeners","notifyListeners","plugins","RegistryProvider","AsyncModeProvider"],"sourceRoot":""}